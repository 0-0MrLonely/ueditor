/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['plugins/link.js']) {
  _$jscoverage['plugins/link.js'] = [];
  _$jscoverage['plugins/link.js'][22] = 0;
  _$jscoverage['plugins/link.js'][23] = 0;
  _$jscoverage['plugins/link.js'][24] = 0;
  _$jscoverage['plugins/link.js'][26] = 0;
  _$jscoverage['plugins/link.js'][27] = 0;
  _$jscoverage['plugins/link.js'][29] = 0;
  _$jscoverage['plugins/link.js'][30] = 0;
  _$jscoverage['plugins/link.js'][35] = 0;
  _$jscoverage['plugins/link.js'][37] = 0;
  _$jscoverage['plugins/link.js'][39] = 0;
  _$jscoverage['plugins/link.js'][40] = 0;
  _$jscoverage['plugins/link.js'][42] = 0;
  _$jscoverage['plugins/link.js'][43] = 0;
  _$jscoverage['plugins/link.js'][44] = 0;
  _$jscoverage['plugins/link.js'][47] = 0;
  _$jscoverage['plugins/link.js'][51] = 0;
  _$jscoverage['plugins/link.js'][52] = 0;
  _$jscoverage['plugins/link.js'][54] = 0;
  _$jscoverage['plugins/link.js'][55] = 0;
  _$jscoverage['plugins/link.js'][56] = 0;
  _$jscoverage['plugins/link.js'][57] = 0;
  _$jscoverage['plugins/link.js'][58] = 0;
  _$jscoverage['plugins/link.js'][59] = 0;
  _$jscoverage['plugins/link.js'][63] = 0;
  _$jscoverage['plugins/link.js'][64] = 0;
  _$jscoverage['plugins/link.js'][65] = 0;
  _$jscoverage['plugins/link.js'][68] = 0;
  _$jscoverage['plugins/link.js'][69] = 0;
  _$jscoverage['plugins/link.js'][71] = 0;
  _$jscoverage['plugins/link.js'][73] = 0;
  _$jscoverage['plugins/link.js'][74] = 0;
  _$jscoverage['plugins/link.js'][76] = 0;
  _$jscoverage['plugins/link.js'][79] = 0;
  _$jscoverage['plugins/link.js'][80] = 0;
  _$jscoverage['plugins/link.js'][81] = 0;
  _$jscoverage['plugins/link.js'][82] = 0;
  _$jscoverage['plugins/link.js'][85] = 0;
  _$jscoverage['plugins/link.js'][86] = 0;
  _$jscoverage['plugins/link.js'][88] = 0;
  _$jscoverage['plugins/link.js'][92] = 0;
  _$jscoverage['plugins/link.js'][94] = 0;
  _$jscoverage['plugins/link.js'][95] = 0;
  _$jscoverage['plugins/link.js'][96] = 0;
  _$jscoverage['plugins/link.js'][97] = 0;
  _$jscoverage['plugins/link.js'][98] = 0;
  _$jscoverage['plugins/link.js'][100] = 0;
  _$jscoverage['plugins/link.js'][104] = 0;
  _$jscoverage['plugins/link.js'][106] = 0;
  _$jscoverage['plugins/link.js'][109] = 0;
  _$jscoverage['plugins/link.js'][110] = 0;
  _$jscoverage['plugins/link.js'][112] = 0;
  _$jscoverage['plugins/link.js'][114] = 0;
  _$jscoverage['plugins/link.js'][118] = 0;
  _$jscoverage['plugins/link.js'][119] = 0;
  _$jscoverage['plugins/link.js'][122] = 0;
  _$jscoverage['plugins/link.js'][123] = 0;
  _$jscoverage['plugins/link.js'][125] = 0;
  _$jscoverage['plugins/link.js'][128] = 0;
  _$jscoverage['plugins/link.js'][129] = 0;
  _$jscoverage['plugins/link.js'][130] = 0;
  _$jscoverage['plugins/link.js'][134] = 0;
  _$jscoverage['plugins/link.js'][135] = 0;
  _$jscoverage['plugins/link.js'][139] = 0;
  _$jscoverage['plugins/link.js'][146] = 0;
  _$jscoverage['plugins/link.js'][148] = 0;
}
_$jscoverage['plugins/link.js'].source = ["<span class=\"c\">///import core</span>","<span class=\"c\">///commands &#36229;&#38142;&#25509;,&#21462;&#28040;&#38142;&#25509;</span>","<span class=\"c\">///commandsName  Link,Unlink</span>","<span class=\"c\">///commandsTitle  &#36229;&#38142;&#25509;,&#21462;&#28040;&#38142;&#25509;</span>","<span class=\"c\">///commandsDialog  dialogs\\link</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#36229;&#38142;&#25509;</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @name baidu.editor.execCommand</span>","<span class=\"c\"> * @param   {String}   cmdName     link&#25554;&#20837;&#36229;&#38142;&#25509;</span>","<span class=\"c\"> * @param   {Object}  options         url&#22320;&#22336;&#65292;title&#26631;&#39064;&#65292;target&#26159;&#21542;&#25171;&#24320;&#26032;&#39029;</span>","<span class=\"c\"> * @author zhanyi</span>","<span class=\"c\"> */</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21462;&#28040;&#38142;&#25509;</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @name baidu.editor.execCommand</span>","<span class=\"c\"> * @param   {String}   cmdName     unlink&#21462;&#28040;&#38142;&#25509;</span>","<span class=\"c\"> * @author zhanyi</span>","<span class=\"c\"> */</span>","","UE<span class=\"k\">.</span>plugins<span class=\"k\">[</span><span class=\"s\">'link'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","    <span class=\"k\">function</span> optimize<span class=\"k\">(</span> range <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> start <span class=\"k\">=</span> range<span class=\"k\">.</span>startContainer<span class=\"k\">,</span>end <span class=\"k\">=</span> range<span class=\"k\">.</span>endContainer<span class=\"k\">;</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span> start <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span> start<span class=\"k\">,</span> <span class=\"s\">'a'</span><span class=\"k\">,</span> <span class=\"k\">true</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            range<span class=\"k\">.</span>setStartBefore<span class=\"k\">(</span> start <span class=\"k\">);</span>","        <span class=\"k\">}</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> end <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span> end<span class=\"k\">,</span> <span class=\"s\">'a'</span><span class=\"k\">,</span> <span class=\"k\">true</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            range<span class=\"k\">.</span>setEndAfter<span class=\"k\">(</span> end <span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","","    UE<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">'unlink'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","        execCommand <span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> range <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">(),</span>","                bookmark<span class=\"k\">;</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>range<span class=\"k\">.</span>collapsed <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span> range<span class=\"k\">.</span>startContainer<span class=\"k\">,</span> <span class=\"s\">'a'</span><span class=\"k\">,</span> <span class=\"k\">true</span> <span class=\"k\">))</span><span class=\"k\">{</span>","                <span class=\"k\">return</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","            bookmark <span class=\"k\">=</span> range<span class=\"k\">.</span>createBookmark<span class=\"k\">();</span>","            optimize<span class=\"k\">(</span> range <span class=\"k\">);</span>","            range<span class=\"k\">.</span>removeInlineStyle<span class=\"k\">(</span> <span class=\"s\">'a'</span> <span class=\"k\">).</span>moveToBookmark<span class=\"k\">(</span> bookmark <span class=\"k\">).</span>select<span class=\"k\">();</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        queryCommandState <span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">!</span><span class=\"k\">this</span><span class=\"k\">.</span>highlight <span class=\"k\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"k\">.</span>queryCommandValue<span class=\"k\">(</span><span class=\"s\">'link'</span><span class=\"k\">)</span> <span class=\"k\">?</span>  <span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","    <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">function</span> doLink<span class=\"k\">(</span>range<span class=\"k\">,</span>opt<span class=\"k\">,</span>me<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">var</span> rngClone <span class=\"k\">=</span> range<span class=\"k\">.</span>cloneRange<span class=\"k\">(),</span>","            link <span class=\"k\">=</span> me<span class=\"k\">.</span>queryCommandValue<span class=\"k\">(</span><span class=\"s\">'link'</span><span class=\"k\">);</span>","        optimize<span class=\"k\">(</span> range <span class=\"k\">=</span> range<span class=\"k\">.</span>adjustmentBoundary<span class=\"k\">()</span> <span class=\"k\">);</span>","        <span class=\"k\">var</span> start <span class=\"k\">=</span> range<span class=\"k\">.</span>startContainer<span class=\"k\">;</span>","        <span class=\"k\">if</span><span class=\"k\">(</span>start<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> link<span class=\"k\">)</span><span class=\"k\">{</span>","            start <span class=\"k\">=</span> start<span class=\"k\">.</span>childNodes<span class=\"k\">[</span>range<span class=\"k\">.</span>startOffset<span class=\"k\">];</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>start <span class=\"k\">&amp;&amp;</span> start<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> start<span class=\"k\">.</span>tagName <span class=\"k\">==</span> <span class=\"s\">'A'</span> <span class=\"k\">&amp;&amp;</span> <span class=\"s\">/^(?:https?|ftp|file)\\s*:\\s*\\/\\//</span><span class=\"k\">.</span>test<span class=\"k\">(</span>start<span class=\"k\">[</span>browser<span class=\"k\">.</span>ie<span class=\"k\">?</span><span class=\"s\">'innerText'</span><span class=\"k\">:</span><span class=\"s\">'textContent'</span><span class=\"k\">]))</span><span class=\"k\">{</span>","                start<span class=\"k\">[</span>browser<span class=\"k\">.</span>ie <span class=\"k\">?</span> <span class=\"s\">'innerText'</span> <span class=\"k\">:</span> <span class=\"s\">'textContent'</span><span class=\"k\">]</span> <span class=\"k\">=</span>  utils<span class=\"k\">.</span>html<span class=\"k\">(</span>opt<span class=\"k\">.</span>textValue<span class=\"k\">||</span>opt<span class=\"k\">.</span>href<span class=\"k\">);</span>","","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        <span class=\"k\">if</span><span class=\"k\">(</span> <span class=\"k\">!</span>rngClone<span class=\"k\">.</span>collapsed <span class=\"k\">||</span> link<span class=\"k\">)</span><span class=\"k\">{</span>","            range<span class=\"k\">.</span>removeInlineStyle<span class=\"k\">(</span> <span class=\"s\">'a'</span> <span class=\"k\">);</span>","            rngClone <span class=\"k\">=</span> range<span class=\"k\">.</span>cloneRange<span class=\"k\">();</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span> rngClone<span class=\"k\">.</span>collapsed <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> a <span class=\"k\">=</span> range<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span> <span class=\"s\">'a'</span><span class=\"k\">),</span>","                text <span class=\"k\">=</span> <span class=\"s\">''</span><span class=\"k\">;</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>opt<span class=\"k\">.</span>textValue<span class=\"k\">)</span><span class=\"k\">{</span>","","                text <span class=\"k\">=</span>   utils<span class=\"k\">.</span>html<span class=\"k\">(</span>opt<span class=\"k\">.</span>textValue<span class=\"k\">);</span>","                <span class=\"k\">delete</span> opt<span class=\"k\">.</span>textValue<span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","                text <span class=\"k\">=</span>   utils<span class=\"k\">.</span>html<span class=\"k\">(</span>opt<span class=\"k\">.</span>href<span class=\"k\">);</span>","","            <span class=\"k\">}</span>","            domUtils<span class=\"k\">.</span>setAttributes<span class=\"k\">(</span> a<span class=\"k\">,</span> opt <span class=\"k\">);</span>","            start <span class=\"k\">=</span>  domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span> rngClone<span class=\"k\">.</span>startContainer<span class=\"k\">,</span> <span class=\"s\">'a'</span><span class=\"k\">,</span> <span class=\"k\">true</span> <span class=\"k\">);</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>start <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>isInNodeEndBoundary<span class=\"k\">(</span>rngClone<span class=\"k\">,</span>start<span class=\"k\">))</span><span class=\"k\">{</span>","                range<span class=\"k\">.</span>setStartAfter<span class=\"k\">(</span>start<span class=\"k\">).</span>collapse<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","","            <span class=\"k\">}</span>","            a<span class=\"k\">[</span>browser<span class=\"k\">.</span>ie <span class=\"k\">?</span> <span class=\"s\">'innerText'</span> <span class=\"k\">:</span> <span class=\"s\">'textContent'</span><span class=\"k\">]</span> <span class=\"k\">=</span> text<span class=\"k\">;</span>","            range<span class=\"k\">.</span>insertNode<span class=\"k\">(</span>a<span class=\"k\">).</span>selectNode<span class=\"k\">(</span> a <span class=\"k\">);</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            range<span class=\"k\">.</span>applyInlineStyle<span class=\"k\">(</span> <span class=\"s\">'a'</span><span class=\"k\">,</span> opt <span class=\"k\">);</span>","","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    UE<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">'link'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","        execCommand <span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> cmdName<span class=\"k\">,</span> opt <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> range<span class=\"k\">;</span>","            opt<span class=\"k\">.</span>_href <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>opt<span class=\"k\">.</span>_href <span class=\"k\">=</span> utils<span class=\"k\">.</span>unhtml<span class=\"k\">(</span>opt<span class=\"k\">.</span>_href<span class=\"k\">,</span><span class=\"s\">/[&lt;\"&gt;]/g</span><span class=\"k\">));</span>","            opt<span class=\"k\">.</span>href <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>opt<span class=\"k\">.</span>href <span class=\"k\">=</span> utils<span class=\"k\">.</span>unhtml<span class=\"k\">(</span>opt<span class=\"k\">.</span>href<span class=\"k\">,</span><span class=\"s\">/[&lt;\"&gt;]/g</span><span class=\"k\">));</span>","            opt<span class=\"k\">.</span>textValue <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>opt<span class=\"k\">.</span>textValue <span class=\"k\">=</span> utils<span class=\"k\">.</span>unhtml<span class=\"k\">(</span>opt<span class=\"k\">.</span>textValue<span class=\"k\">,</span><span class=\"s\">/[&lt;\"&gt;]/g</span><span class=\"k\">));</span>","            doLink<span class=\"k\">(</span>range<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">(),</span>opt<span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">);</span>","            <span class=\"c\">//&#38381;&#21512;&#37117;&#19981;&#21152;&#21344;&#20301;&#31526;&#65292;&#22914;&#26524;&#21152;&#20102;&#20250;&#22312;a&#21518;&#36793;&#22810;&#20010;&#21344;&#20301;&#31526;&#33410;&#28857;&#65292;&#23548;&#33268;a&#26159;&#22270;&#29255;&#32972;&#26223;&#32452;&#25104;&#30340;&#21015;&#34920;&#65292;&#20986;&#29616;&#31354;&#30333;&#38382;&#39064;</span>","            range<span class=\"k\">.</span>collapse<span class=\"k\">().</span>select<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","","        <span class=\"k\">}</span><span class=\"k\">,</span>","        queryCommandValue <span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> range <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">(),</span>","                node<span class=\"k\">;</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> range<span class=\"k\">.</span>collapsed <span class=\"k\">)</span> <span class=\"k\">{</span>","<span class=\"c\">//                    node = this.selection.getStart();</span>","                <span class=\"c\">//&#22312;ie&#19979;getstart()&#21462;&#20540;&#20559;&#19978;&#20102;</span>","                node <span class=\"k\">=</span> range<span class=\"k\">.</span>startContainer<span class=\"k\">;</span>","                node <span class=\"k\">=</span> node<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">1</span> <span class=\"k\">?</span> node <span class=\"k\">:</span> node<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span> node <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>node <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span> node<span class=\"k\">,</span> <span class=\"s\">'a'</span><span class=\"k\">,</span> <span class=\"k\">true</span> <span class=\"k\">))</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span> domUtils<span class=\"k\">.</span>isInNodeEndBoundary<span class=\"k\">(</span>range<span class=\"k\">,</span>node<span class=\"k\">))</span> <span class=\"k\">{</span>","","                    <span class=\"k\">return</span> node<span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                <span class=\"c\">//trace:1111  &#22914;&#26524;&#26159;&lt;p&gt;&lt;a&gt;xx&lt;/a&gt;&lt;/p&gt; startContainer&#26159;p&#23601;&#20250;&#25214;&#19981;&#21040;a</span>","                range<span class=\"k\">.</span>shrinkBoundary<span class=\"k\">();</span>","                <span class=\"k\">var</span> start <span class=\"k\">=</span> range<span class=\"k\">.</span>startContainer<span class=\"k\">.</span>nodeType  <span class=\"k\">==</span> <span class=\"s\">3</span> <span class=\"k\">||</span> <span class=\"k\">!</span>range<span class=\"k\">.</span>startContainer<span class=\"k\">.</span>childNodes<span class=\"k\">[</span>range<span class=\"k\">.</span>startOffset<span class=\"k\">]</span> <span class=\"k\">?</span> range<span class=\"k\">.</span>startContainer <span class=\"k\">:</span> range<span class=\"k\">.</span>startContainer<span class=\"k\">.</span>childNodes<span class=\"k\">[</span>range<span class=\"k\">.</span>startOffset<span class=\"k\">],</span>","                    end <span class=\"k\">=</span>  range<span class=\"k\">.</span>endContainer<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">3</span> <span class=\"k\">||</span> range<span class=\"k\">.</span>endOffset <span class=\"k\">==</span> <span class=\"s\">0</span> <span class=\"k\">?</span> range<span class=\"k\">.</span>endContainer <span class=\"k\">:</span> range<span class=\"k\">.</span>endContainer<span class=\"k\">.</span>childNodes<span class=\"k\">[</span>range<span class=\"k\">.</span>endOffset<span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">],</span>","                    common <span class=\"k\">=</span> range<span class=\"k\">.</span>getCommonAncestor<span class=\"k\">();</span>","                node <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span> common<span class=\"k\">,</span> <span class=\"s\">'a'</span><span class=\"k\">,</span> <span class=\"k\">true</span> <span class=\"k\">);</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>node <span class=\"k\">&amp;&amp;</span> common<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">1</span><span class=\"k\">)</span><span class=\"k\">{</span>","","                    <span class=\"k\">var</span> as <span class=\"k\">=</span> common<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span> <span class=\"s\">'a'</span> <span class=\"k\">),</span>","                        ps<span class=\"k\">,</span>pe<span class=\"k\">;</span>","","                    <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>ci<span class=\"k\">;</span> ci <span class=\"k\">=</span> as<span class=\"k\">[</span>i<span class=\"k\">++];</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        ps <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getPosition<span class=\"k\">(</span> ci<span class=\"k\">,</span> start <span class=\"k\">),</span>pe <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getPosition<span class=\"k\">(</span> ci<span class=\"k\">,</span>end<span class=\"k\">);</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">(</span>ps <span class=\"k\">&amp;</span> domUtils<span class=\"k\">.</span>POSITION_FOLLOWING <span class=\"k\">||</span> ps <span class=\"k\">&amp;</span> domUtils<span class=\"k\">.</span>POSITION_CONTAINS<span class=\"k\">)</span>","                            <span class=\"k\">&amp;&amp;</span>","                            <span class=\"k\">(</span>pe <span class=\"k\">&amp;</span> domUtils<span class=\"k\">.</span>POSITION_PRECEDING <span class=\"k\">||</span> pe <span class=\"k\">&amp;</span> domUtils<span class=\"k\">.</span>POSITION_CONTAINS<span class=\"k\">)</span>","                            <span class=\"k\">)</span> <span class=\"k\">{</span>","                            node <span class=\"k\">=</span> ci<span class=\"k\">;</span>","                            <span class=\"k\">break</span><span class=\"k\">;</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","                <span class=\"k\">return</span> node<span class=\"k\">;</span>","            <span class=\"k\">}</span>","","        <span class=\"k\">}</span><span class=\"k\">,</span>","        queryCommandState <span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"c\">//&#21028;&#26029;&#22914;&#26524;&#26159;&#35270;&#39057;&#30340;&#35805;&#36830;&#25509;&#19981;&#21487;&#29992;</span>","            <span class=\"c\">//fix 853</span>","            <span class=\"k\">var</span> img <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">().</span>getClosedNode<span class=\"k\">(),</span>","                flag <span class=\"k\">=</span> img <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>img<span class=\"k\">.</span>className <span class=\"k\">==</span> <span class=\"s\">\"edui-faked-video\"</span><span class=\"k\">);</span>","            <span class=\"k\">return</span> flag <span class=\"k\">?</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"];
_$jscoverage['plugins/link.js'][22]++;
UE.plugins.link = (function () {
  _$jscoverage['plugins/link.js'][23]++;
  function optimize(range) {
    _$jscoverage['plugins/link.js'][24]++;
    var start = range.startContainer, end = range.endContainer;
    _$jscoverage['plugins/link.js'][26]++;
    if ((start = domUtils.findParentByTagName(start, "a", true))) {
      _$jscoverage['plugins/link.js'][27]++;
      range.setStartBefore(start);
    }
    _$jscoverage['plugins/link.js'][29]++;
    if ((end = domUtils.findParentByTagName(end, "a", true))) {
      _$jscoverage['plugins/link.js'][30]++;
      range.setEndAfter(end);
    }
}
  _$jscoverage['plugins/link.js'][35]++;
  UE.commands.unlink = {execCommand: (function () {
  _$jscoverage['plugins/link.js'][37]++;
  var range = this.selection.getRange(), bookmark;
  _$jscoverage['plugins/link.js'][39]++;
  if ((range.collapsed && (! domUtils.findParentByTagName(range.startContainer, "a", true)))) {
    _$jscoverage['plugins/link.js'][40]++;
    return;
  }
  _$jscoverage['plugins/link.js'][42]++;
  bookmark = range.createBookmark();
  _$jscoverage['plugins/link.js'][43]++;
  optimize(range);
  _$jscoverage['plugins/link.js'][44]++;
  range.removeInlineStyle("a").moveToBookmark(bookmark).select();
}), queryCommandState: (function () {
  _$jscoverage['plugins/link.js'][47]++;
  return (((! this.highlight) && this.queryCommandValue("link"))? 0: -1);
})};
  _$jscoverage['plugins/link.js'][51]++;
  function doLink(range, opt, me) {
    _$jscoverage['plugins/link.js'][52]++;
    var rngClone = range.cloneRange(), link = me.queryCommandValue("link");
    _$jscoverage['plugins/link.js'][54]++;
    optimize((range = range.adjustmentBoundary()));
    _$jscoverage['plugins/link.js'][55]++;
    var start = range.startContainer;
    _$jscoverage['plugins/link.js'][56]++;
    if (((start.nodeType == 1) && link)) {
      _$jscoverage['plugins/link.js'][57]++;
      start = start.childNodes[range.startOffset];
      _$jscoverage['plugins/link.js'][58]++;
      if ((start && (start.nodeType == 1) && (start.tagName == "A") && /^(?:https?|ftp|file)\s*:\s*\/\//.test(start[(browser.ie? "innerText": "textContent")]))) {
        _$jscoverage['plugins/link.js'][59]++;
        start[(browser.ie? "innerText": "textContent")] = utils.html((opt.textValue || opt.href));
      }
    }
    _$jscoverage['plugins/link.js'][63]++;
    if (((! rngClone.collapsed) || link)) {
      _$jscoverage['plugins/link.js'][64]++;
      range.removeInlineStyle("a");
      _$jscoverage['plugins/link.js'][65]++;
      rngClone = range.cloneRange();
    }
    _$jscoverage['plugins/link.js'][68]++;
    if (rngClone.collapsed) {
      _$jscoverage['plugins/link.js'][69]++;
      var a = range.document.createElement("a"), text = "";
      _$jscoverage['plugins/link.js'][71]++;
      if (opt.textValue) {
        _$jscoverage['plugins/link.js'][73]++;
        text = utils.html(opt.textValue);
        _$jscoverage['plugins/link.js'][74]++;
        (delete opt.textValue);
      }
      else {
        _$jscoverage['plugins/link.js'][76]++;
        text = utils.html(opt.href);
      }
      _$jscoverage['plugins/link.js'][79]++;
      domUtils.setAttributes(a, opt);
      _$jscoverage['plugins/link.js'][80]++;
      start = domUtils.findParentByTagName(rngClone.startContainer, "a", true);
      _$jscoverage['plugins/link.js'][81]++;
      if ((start && domUtils.isInNodeEndBoundary(rngClone, start))) {
        _$jscoverage['plugins/link.js'][82]++;
        range.setStartAfter(start).collapse(true);
      }
      _$jscoverage['plugins/link.js'][85]++;
      a[(browser.ie? "innerText": "textContent")] = text;
      _$jscoverage['plugins/link.js'][86]++;
      range.insertNode(a).selectNode(a);
    }
    else {
      _$jscoverage['plugins/link.js'][88]++;
      range.applyInlineStyle("a", opt);
    }
}
  _$jscoverage['plugins/link.js'][92]++;
  UE.commands.link = {execCommand: (function (cmdName, opt) {
  _$jscoverage['plugins/link.js'][94]++;
  var range;
  _$jscoverage['plugins/link.js'][95]++;
  (opt._href && (opt._href = utils.unhtml(opt._href, /[<">]/g)));
  _$jscoverage['plugins/link.js'][96]++;
  (opt.href && (opt.href = utils.unhtml(opt.href, /[<">]/g)));
  _$jscoverage['plugins/link.js'][97]++;
  (opt.textValue && (opt.textValue = utils.unhtml(opt.textValue, /[<">]/g)));
  _$jscoverage['plugins/link.js'][98]++;
  doLink((range = this.selection.getRange()), opt, this);
  _$jscoverage['plugins/link.js'][100]++;
  range.collapse().select(true);
}), queryCommandValue: (function () {
  _$jscoverage['plugins/link.js'][104]++;
  var range = this.selection.getRange(), node;
  _$jscoverage['plugins/link.js'][106]++;
  if (range.collapsed) {
    _$jscoverage['plugins/link.js'][109]++;
    node = range.startContainer;
    _$jscoverage['plugins/link.js'][110]++;
    node = ((node.nodeType == 1)? node: node.parentNode);
    _$jscoverage['plugins/link.js'][112]++;
    if ((node && (node = domUtils.findParentByTagName(node, "a", true)) && (! domUtils.isInNodeEndBoundary(range, node)))) {
      _$jscoverage['plugins/link.js'][114]++;
      return node;
    }
  }
  else {
    _$jscoverage['plugins/link.js'][118]++;
    range.shrinkBoundary();
    _$jscoverage['plugins/link.js'][119]++;
    var start = (((range.startContainer.nodeType == 3) || (! range.startContainer.childNodes[range.startOffset]))? range.startContainer: range.startContainer.childNodes[range.startOffset]), end = (((range.endContainer.nodeType == 3) || (range.endOffset == 0))? range.endContainer: range.endContainer.childNodes[(range.endOffset - 1)]), common = range.getCommonAncestor();
    _$jscoverage['plugins/link.js'][122]++;
    node = domUtils.findParentByTagName(common, "a", true);
    _$jscoverage['plugins/link.js'][123]++;
    if (((! node) && (common.nodeType == 1))) {
      _$jscoverage['plugins/link.js'][125]++;
      var as = common.getElementsByTagName("a"), ps, pe;
      _$jscoverage['plugins/link.js'][128]++;
      for (var i = 0, ci; (ci = as[(i++)]);) {
        _$jscoverage['plugins/link.js'][129]++;
        ((ps = domUtils.getPosition(ci, start)), (pe = domUtils.getPosition(ci, end)));
        _$jscoverage['plugins/link.js'][130]++;
        if ((((ps & domUtils.POSITION_FOLLOWING) || (ps & domUtils.POSITION_CONTAINS)) && ((pe & domUtils.POSITION_PRECEDING) || (pe & domUtils.POSITION_CONTAINS)))) {
          _$jscoverage['plugins/link.js'][134]++;
          node = ci;
          _$jscoverage['plugins/link.js'][135]++;
          break;
        }
}
    }
    _$jscoverage['plugins/link.js'][139]++;
    return node;
  }
}), queryCommandState: (function () {
  _$jscoverage['plugins/link.js'][146]++;
  var img = this.selection.getRange().getClosedNode(), flag = (img && (img.className == "edui-faked-video"));
  _$jscoverage['plugins/link.js'][148]++;
  return (flag? -1: 0);
})};
});
