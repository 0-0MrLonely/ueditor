/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['plugins/table.cmds.js']) {
  _$jscoverage['plugins/table.cmds.js'] = [];
  _$jscoverage['plugins/table.cmds.js'][8] = 0;
  _$jscoverage['plugins/table.cmds.js'][9] = 0;
  _$jscoverage['plugins/table.cmds.js'][10] = 0;
  _$jscoverage['plugins/table.cmds.js'][12] = 0;
  _$jscoverage['plugins/table.cmds.js'][15] = 0;
  _$jscoverage['plugins/table.cmds.js'][18] = 0;
  _$jscoverage['plugins/table.cmds.js'][21] = 0;
  _$jscoverage['plugins/table.cmds.js'][25] = 0;
  _$jscoverage['plugins/table.cmds.js'][27] = 0;
  _$jscoverage['plugins/table.cmds.js'][30] = 0;
  _$jscoverage['plugins/table.cmds.js'][31] = 0;
  _$jscoverage['plugins/table.cmds.js'][34] = 0;
  _$jscoverage['plugins/table.cmds.js'][35] = 0;
  _$jscoverage['plugins/table.cmds.js'][36] = 0;
  _$jscoverage['plugins/table.cmds.js'][37] = 0;
  _$jscoverage['plugins/table.cmds.js'][39] = 0;
  _$jscoverage['plugins/table.cmds.js'][41] = 0;
  _$jscoverage['plugins/table.cmds.js'][44] = 0;
  _$jscoverage['plugins/table.cmds.js'][45] = 0;
  _$jscoverage['plugins/table.cmds.js'][52] = 0;
  _$jscoverage['plugins/table.cmds.js'][55] = 0;
  _$jscoverage['plugins/table.cmds.js'][57] = 0;
  _$jscoverage['plugins/table.cmds.js'][62] = 0;
  _$jscoverage['plugins/table.cmds.js'][63] = 0;
  _$jscoverage['plugins/table.cmds.js'][67] = 0;
  _$jscoverage['plugins/table.cmds.js'][69] = 0;
  _$jscoverage['plugins/table.cmds.js'][72] = 0;
  _$jscoverage['plugins/table.cmds.js'][73] = 0;
  _$jscoverage['plugins/table.cmds.js'][74] = 0;
  _$jscoverage['plugins/table.cmds.js'][75] = 0;
  _$jscoverage['plugins/table.cmds.js'][76] = 0;
  _$jscoverage['plugins/table.cmds.js'][77] = 0;
  _$jscoverage['plugins/table.cmds.js'][82] = 0;
  _$jscoverage['plugins/table.cmds.js'][84] = 0;
  _$jscoverage['plugins/table.cmds.js'][85] = 0;
  _$jscoverage['plugins/table.cmds.js'][88] = 0;
  _$jscoverage['plugins/table.cmds.js'][89] = 0;
  _$jscoverage['plugins/table.cmds.js'][90] = 0;
  _$jscoverage['plugins/table.cmds.js'][91] = 0;
  _$jscoverage['plugins/table.cmds.js'][92] = 0;
  _$jscoverage['plugins/table.cmds.js'][93] = 0;
  _$jscoverage['plugins/table.cmds.js'][96] = 0;
  _$jscoverage['plugins/table.cmds.js'][98] = 0;
  _$jscoverage['plugins/table.cmds.js'][99] = 0;
  _$jscoverage['plugins/table.cmds.js'][100] = 0;
  _$jscoverage['plugins/table.cmds.js'][101] = 0;
  _$jscoverage['plugins/table.cmds.js'][103] = 0;
  _$jscoverage['plugins/table.cmds.js'][105] = 0;
  _$jscoverage['plugins/table.cmds.js'][106] = 0;
  _$jscoverage['plugins/table.cmds.js'][112] = 0;
  _$jscoverage['plugins/table.cmds.js'][114] = 0;
  _$jscoverage['plugins/table.cmds.js'][117] = 0;
  _$jscoverage['plugins/table.cmds.js'][118] = 0;
  _$jscoverage['plugins/table.cmds.js'][119] = 0;
  _$jscoverage['plugins/table.cmds.js'][120] = 0;
  _$jscoverage['plugins/table.cmds.js'][125] = 0;
  _$jscoverage['plugins/table.cmds.js'][127] = 0;
  _$jscoverage['plugins/table.cmds.js'][130] = 0;
  _$jscoverage['plugins/table.cmds.js'][131] = 0;
  _$jscoverage['plugins/table.cmds.js'][132] = 0;
  _$jscoverage['plugins/table.cmds.js'][133] = 0;
  _$jscoverage['plugins/table.cmds.js'][138] = 0;
  _$jscoverage['plugins/table.cmds.js'][140] = 0;
  _$jscoverage['plugins/table.cmds.js'][141] = 0;
  _$jscoverage['plugins/table.cmds.js'][142] = 0;
  _$jscoverage['plugins/table.cmds.js'][144] = 0;
  _$jscoverage['plugins/table.cmds.js'][147] = 0;
  _$jscoverage['plugins/table.cmds.js'][148] = 0;
  _$jscoverage['plugins/table.cmds.js'][149] = 0;
  _$jscoverage['plugins/table.cmds.js'][150] = 0;
  _$jscoverage['plugins/table.cmds.js'][151] = 0;
  _$jscoverage['plugins/table.cmds.js'][152] = 0;
  _$jscoverage['plugins/table.cmds.js'][153] = 0;
  _$jscoverage['plugins/table.cmds.js'][158] = 0;
  _$jscoverage['plugins/table.cmds.js'][160] = 0;
  _$jscoverage['plugins/table.cmds.js'][162] = 0;
  _$jscoverage['plugins/table.cmds.js'][163] = 0;
  _$jscoverage['plugins/table.cmds.js'][165] = 0;
  _$jscoverage['plugins/table.cmds.js'][168] = 0;
  _$jscoverage['plugins/table.cmds.js'][170] = 0;
  _$jscoverage['plugins/table.cmds.js'][171] = 0;
  _$jscoverage['plugins/table.cmds.js'][172] = 0;
  _$jscoverage['plugins/table.cmds.js'][173] = 0;
  _$jscoverage['plugins/table.cmds.js'][178] = 0;
  _$jscoverage['plugins/table.cmds.js'][180] = 0;
  _$jscoverage['plugins/table.cmds.js'][181] = 0;
  _$jscoverage['plugins/table.cmds.js'][182] = 0;
  _$jscoverage['plugins/table.cmds.js'][183] = 0;
  _$jscoverage['plugins/table.cmds.js'][185] = 0;
  _$jscoverage['plugins/table.cmds.js'][188] = 0;
  _$jscoverage['plugins/table.cmds.js'][189] = 0;
  _$jscoverage['plugins/table.cmds.js'][190] = 0;
  _$jscoverage['plugins/table.cmds.js'][192] = 0;
  _$jscoverage['plugins/table.cmds.js'][193] = 0;
  _$jscoverage['plugins/table.cmds.js'][196] = 0;
  _$jscoverage['plugins/table.cmds.js'][198] = 0;
  _$jscoverage['plugins/table.cmds.js'][199] = 0;
  _$jscoverage['plugins/table.cmds.js'][200] = 0;
  _$jscoverage['plugins/table.cmds.js'][201] = 0;
  _$jscoverage['plugins/table.cmds.js'][203] = 0;
  _$jscoverage['plugins/table.cmds.js'][206] = 0;
  _$jscoverage['plugins/table.cmds.js'][207] = 0;
  _$jscoverage['plugins/table.cmds.js'][208] = 0;
  _$jscoverage['plugins/table.cmds.js'][210] = 0;
  _$jscoverage['plugins/table.cmds.js'][211] = 0;
  _$jscoverage['plugins/table.cmds.js'][215] = 0;
  _$jscoverage['plugins/table.cmds.js'][217] = 0;
  _$jscoverage['plugins/table.cmds.js'][218] = 0;
  _$jscoverage['plugins/table.cmds.js'][219] = 0;
  _$jscoverage['plugins/table.cmds.js'][220] = 0;
  _$jscoverage['plugins/table.cmds.js'][221] = 0;
  _$jscoverage['plugins/table.cmds.js'][223] = 0;
  _$jscoverage['plugins/table.cmds.js'][224] = 0;
  _$jscoverage['plugins/table.cmds.js'][225] = 0;
  _$jscoverage['plugins/table.cmds.js'][229] = 0;
  _$jscoverage['plugins/table.cmds.js'][231] = 0;
  _$jscoverage['plugins/table.cmds.js'][233] = 0;
  _$jscoverage['plugins/table.cmds.js'][234] = 0;
  _$jscoverage['plugins/table.cmds.js'][237] = 0;
  _$jscoverage['plugins/table.cmds.js'][239] = 0;
  _$jscoverage['plugins/table.cmds.js'][241] = 0;
  _$jscoverage['plugins/table.cmds.js'][242] = 0;
  _$jscoverage['plugins/table.cmds.js'][243] = 0;
  _$jscoverage['plugins/table.cmds.js'][244] = 0;
  _$jscoverage['plugins/table.cmds.js'][247] = 0;
  _$jscoverage['plugins/table.cmds.js'][248] = 0;
  _$jscoverage['plugins/table.cmds.js'][250] = 0;
  _$jscoverage['plugins/table.cmds.js'][254] = 0;
  _$jscoverage['plugins/table.cmds.js'][256] = 0;
  _$jscoverage['plugins/table.cmds.js'][258] = 0;
  _$jscoverage['plugins/table.cmds.js'][259] = 0;
  _$jscoverage['plugins/table.cmds.js'][262] = 0;
  _$jscoverage['plugins/table.cmds.js'][264] = 0;
  _$jscoverage['plugins/table.cmds.js'][267] = 0;
  _$jscoverage['plugins/table.cmds.js'][268] = 0;
  _$jscoverage['plugins/table.cmds.js'][269] = 0;
  _$jscoverage['plugins/table.cmds.js'][270] = 0;
  _$jscoverage['plugins/table.cmds.js'][271] = 0;
  _$jscoverage['plugins/table.cmds.js'][272] = 0;
  _$jscoverage['plugins/table.cmds.js'][273] = 0;
  _$jscoverage['plugins/table.cmds.js'][275] = 0;
  _$jscoverage['plugins/table.cmds.js'][277] = 0;
  _$jscoverage['plugins/table.cmds.js'][283] = 0;
  _$jscoverage['plugins/table.cmds.js'][285] = 0;
  _$jscoverage['plugins/table.cmds.js'][287] = 0;
  _$jscoverage['plugins/table.cmds.js'][290] = 0;
  _$jscoverage['plugins/table.cmds.js'][292] = 0;
  _$jscoverage['plugins/table.cmds.js'][298] = 0;
  _$jscoverage['plugins/table.cmds.js'][299] = 0;
  _$jscoverage['plugins/table.cmds.js'][301] = 0;
  _$jscoverage['plugins/table.cmds.js'][302] = 0;
  _$jscoverage['plugins/table.cmds.js'][303] = 0;
  _$jscoverage['plugins/table.cmds.js'][306] = 0;
  _$jscoverage['plugins/table.cmds.js'][307] = 0;
  _$jscoverage['plugins/table.cmds.js'][311] = 0;
  _$jscoverage['plugins/table.cmds.js'][313] = 0;
  _$jscoverage['plugins/table.cmds.js'][315] = 0;
  _$jscoverage['plugins/table.cmds.js'][318] = 0;
  _$jscoverage['plugins/table.cmds.js'][320] = 0;
  _$jscoverage['plugins/table.cmds.js'][326] = 0;
  _$jscoverage['plugins/table.cmds.js'][327] = 0;
  _$jscoverage['plugins/table.cmds.js'][329] = 0;
  _$jscoverage['plugins/table.cmds.js'][330] = 0;
  _$jscoverage['plugins/table.cmds.js'][331] = 0;
  _$jscoverage['plugins/table.cmds.js'][334] = 0;
  _$jscoverage['plugins/table.cmds.js'][335] = 0;
  _$jscoverage['plugins/table.cmds.js'][338] = 0;
  _$jscoverage['plugins/table.cmds.js'][340] = 0;
  _$jscoverage['plugins/table.cmds.js'][341] = 0;
  _$jscoverage['plugins/table.cmds.js'][342] = 0;
  _$jscoverage['plugins/table.cmds.js'][346] = 0;
  _$jscoverage['plugins/table.cmds.js'][353] = 0;
  _$jscoverage['plugins/table.cmds.js'][354] = 0;
  _$jscoverage['plugins/table.cmds.js'][356] = 0;
  _$jscoverage['plugins/table.cmds.js'][357] = 0;
  _$jscoverage['plugins/table.cmds.js'][360] = 0;
  _$jscoverage['plugins/table.cmds.js'][361] = 0;
  _$jscoverage['plugins/table.cmds.js'][362] = 0;
  _$jscoverage['plugins/table.cmds.js'][363] = 0;
  _$jscoverage['plugins/table.cmds.js'][364] = 0;
  _$jscoverage['plugins/table.cmds.js'][365] = 0;
  _$jscoverage['plugins/table.cmds.js'][368] = 0;
  _$jscoverage['plugins/table.cmds.js'][369] = 0;
  _$jscoverage['plugins/table.cmds.js'][371] = 0;
  _$jscoverage['plugins/table.cmds.js'][372] = 0;
  _$jscoverage['plugins/table.cmds.js'][375] = 0;
  _$jscoverage['plugins/table.cmds.js'][378] = 0;
  _$jscoverage['plugins/table.cmds.js'][380] = 0;
  _$jscoverage['plugins/table.cmds.js'][382] = 0;
  _$jscoverage['plugins/table.cmds.js'][385] = 0;
  _$jscoverage['plugins/table.cmds.js'][387] = 0;
  _$jscoverage['plugins/table.cmds.js'][388] = 0;
  _$jscoverage['plugins/table.cmds.js'][392] = 0;
  _$jscoverage['plugins/table.cmds.js'][393] = 0;
  _$jscoverage['plugins/table.cmds.js'][395] = 0;
  _$jscoverage['plugins/table.cmds.js'][396] = 0;
  _$jscoverage['plugins/table.cmds.js'][397] = 0;
  _$jscoverage['plugins/table.cmds.js'][400] = 0;
  _$jscoverage['plugins/table.cmds.js'][403] = 0;
  _$jscoverage['plugins/table.cmds.js'][405] = 0;
  _$jscoverage['plugins/table.cmds.js'][407] = 0;
  _$jscoverage['plugins/table.cmds.js'][410] = 0;
  _$jscoverage['plugins/table.cmds.js'][412] = 0;
  _$jscoverage['plugins/table.cmds.js'][416] = 0;
  _$jscoverage['plugins/table.cmds.js'][417] = 0;
  _$jscoverage['plugins/table.cmds.js'][419] = 0;
  _$jscoverage['plugins/table.cmds.js'][420] = 0;
  _$jscoverage['plugins/table.cmds.js'][421] = 0;
  _$jscoverage['plugins/table.cmds.js'][424] = 0;
  _$jscoverage['plugins/table.cmds.js'][428] = 0;
  _$jscoverage['plugins/table.cmds.js'][430] = 0;
  _$jscoverage['plugins/table.cmds.js'][431] = 0;
  _$jscoverage['plugins/table.cmds.js'][434] = 0;
  _$jscoverage['plugins/table.cmds.js'][440] = 0;
  _$jscoverage['plugins/table.cmds.js'][441] = 0;
  _$jscoverage['plugins/table.cmds.js'][443] = 0;
  _$jscoverage['plugins/table.cmds.js'][444] = 0;
  _$jscoverage['plugins/table.cmds.js'][447] = 0;
  _$jscoverage['plugins/table.cmds.js'][450] = 0;
  _$jscoverage['plugins/table.cmds.js'][451] = 0;
  _$jscoverage['plugins/table.cmds.js'][452] = 0;
  _$jscoverage['plugins/table.cmds.js'][453] = 0;
  _$jscoverage['plugins/table.cmds.js'][454] = 0;
  _$jscoverage['plugins/table.cmds.js'][457] = 0;
  _$jscoverage['plugins/table.cmds.js'][458] = 0;
  _$jscoverage['plugins/table.cmds.js'][460] = 0;
  _$jscoverage['plugins/table.cmds.js'][461] = 0;
  _$jscoverage['plugins/table.cmds.js'][463] = 0;
  _$jscoverage['plugins/table.cmds.js'][464] = 0;
  _$jscoverage['plugins/table.cmds.js'][471] = 0;
  _$jscoverage['plugins/table.cmds.js'][473] = 0;
  _$jscoverage['plugins/table.cmds.js'][475] = 0;
  _$jscoverage['plugins/table.cmds.js'][476] = 0;
  _$jscoverage['plugins/table.cmds.js'][477] = 0;
  _$jscoverage['plugins/table.cmds.js'][478] = 0;
  _$jscoverage['plugins/table.cmds.js'][481] = 0;
  _$jscoverage['plugins/table.cmds.js'][483] = 0;
  _$jscoverage['plugins/table.cmds.js'][485] = 0;
  _$jscoverage['plugins/table.cmds.js'][486] = 0;
  _$jscoverage['plugins/table.cmds.js'][489] = 0;
  _$jscoverage['plugins/table.cmds.js'][491] = 0;
  _$jscoverage['plugins/table.cmds.js'][493] = 0;
  _$jscoverage['plugins/table.cmds.js'][494] = 0;
  _$jscoverage['plugins/table.cmds.js'][495] = 0;
  _$jscoverage['plugins/table.cmds.js'][496] = 0;
  _$jscoverage['plugins/table.cmds.js'][499] = 0;
  _$jscoverage['plugins/table.cmds.js'][501] = 0;
  _$jscoverage['plugins/table.cmds.js'][503] = 0;
  _$jscoverage['plugins/table.cmds.js'][504] = 0;
  _$jscoverage['plugins/table.cmds.js'][507] = 0;
  _$jscoverage['plugins/table.cmds.js'][509] = 0;
  _$jscoverage['plugins/table.cmds.js'][511] = 0;
  _$jscoverage['plugins/table.cmds.js'][512] = 0;
  _$jscoverage['plugins/table.cmds.js'][513] = 0;
  _$jscoverage['plugins/table.cmds.js'][514] = 0;
  _$jscoverage['plugins/table.cmds.js'][517] = 0;
  _$jscoverage['plugins/table.cmds.js'][519] = 0;
  _$jscoverage['plugins/table.cmds.js'][521] = 0;
  _$jscoverage['plugins/table.cmds.js'][522] = 0;
  _$jscoverage['plugins/table.cmds.js'][527] = 0;
  _$jscoverage['plugins/table.cmds.js'][530] = 0;
  _$jscoverage['plugins/table.cmds.js'][533] = 0;
  _$jscoverage['plugins/table.cmds.js'][535] = 0;
  _$jscoverage['plugins/table.cmds.js'][536] = 0;
  _$jscoverage['plugins/table.cmds.js'][537] = 0;
  _$jscoverage['plugins/table.cmds.js'][539] = 0;
  _$jscoverage['plugins/table.cmds.js'][540] = 0;
  _$jscoverage['plugins/table.cmds.js'][541] = 0;
  _$jscoverage['plugins/table.cmds.js'][543] = 0;
  _$jscoverage['plugins/table.cmds.js'][550] = 0;
  _$jscoverage['plugins/table.cmds.js'][552] = 0;
  _$jscoverage['plugins/table.cmds.js'][553] = 0;
  _$jscoverage['plugins/table.cmds.js'][554] = 0;
  _$jscoverage['plugins/table.cmds.js'][557] = 0;
  _$jscoverage['plugins/table.cmds.js'][560] = 0;
  _$jscoverage['plugins/table.cmds.js'][561] = 0;
  _$jscoverage['plugins/table.cmds.js'][565] = 0;
  _$jscoverage['plugins/table.cmds.js'][566] = 0;
  _$jscoverage['plugins/table.cmds.js'][567] = 0;
  _$jscoverage['plugins/table.cmds.js'][569] = 0;
  _$jscoverage['plugins/table.cmds.js'][572] = 0;
  _$jscoverage['plugins/table.cmds.js'][573] = 0;
  _$jscoverage['plugins/table.cmds.js'][574] = 0;
  _$jscoverage['plugins/table.cmds.js'][575] = 0;
  _$jscoverage['plugins/table.cmds.js'][576] = 0;
  _$jscoverage['plugins/table.cmds.js'][579] = 0;
  _$jscoverage['plugins/table.cmds.js'][580] = 0;
  _$jscoverage['plugins/table.cmds.js'][583] = 0;
  _$jscoverage['plugins/table.cmds.js'][584] = 0;
  _$jscoverage['plugins/table.cmds.js'][585] = 0;
  _$jscoverage['plugins/table.cmds.js'][587] = 0;
  _$jscoverage['plugins/table.cmds.js'][589] = 0;
  _$jscoverage['plugins/table.cmds.js'][590] = 0;
  _$jscoverage['plugins/table.cmds.js'][591] = 0;
  _$jscoverage['plugins/table.cmds.js'][596] = 0;
  _$jscoverage['plugins/table.cmds.js'][597] = 0;
  _$jscoverage['plugins/table.cmds.js'][602] = 0;
  _$jscoverage['plugins/table.cmds.js'][604] = 0;
  _$jscoverage['plugins/table.cmds.js'][605] = 0;
  _$jscoverage['plugins/table.cmds.js'][606] = 0;
  _$jscoverage['plugins/table.cmds.js'][607] = 0;
  _$jscoverage['plugins/table.cmds.js'][610] = 0;
  _$jscoverage['plugins/table.cmds.js'][613] = 0;
  _$jscoverage['plugins/table.cmds.js'][614] = 0;
  _$jscoverage['plugins/table.cmds.js'][619] = 0;
  _$jscoverage['plugins/table.cmds.js'][620] = 0;
  _$jscoverage['plugins/table.cmds.js'][624] = 0;
  _$jscoverage['plugins/table.cmds.js'][625] = 0;
  _$jscoverage['plugins/table.cmds.js'][627] = 0;
  _$jscoverage['plugins/table.cmds.js'][628] = 0;
  _$jscoverage['plugins/table.cmds.js'][631] = 0;
  _$jscoverage['plugins/table.cmds.js'][632] = 0;
  _$jscoverage['plugins/table.cmds.js'][634] = 0;
  _$jscoverage['plugins/table.cmds.js'][638] = 0;
  _$jscoverage['plugins/table.cmds.js'][639] = 0;
  _$jscoverage['plugins/table.cmds.js'][640] = 0;
  _$jscoverage['plugins/table.cmds.js'][642] = 0;
  _$jscoverage['plugins/table.cmds.js'][645] = 0;
  _$jscoverage['plugins/table.cmds.js'][646] = 0;
  _$jscoverage['plugins/table.cmds.js'][648] = 0;
  _$jscoverage['plugins/table.cmds.js'][650] = 0;
  _$jscoverage['plugins/table.cmds.js'][653] = 0;
  _$jscoverage['plugins/table.cmds.js'][654] = 0;
  _$jscoverage['plugins/table.cmds.js'][655] = 0;
  _$jscoverage['plugins/table.cmds.js'][656] = 0;
  _$jscoverage['plugins/table.cmds.js'][657] = 0;
  _$jscoverage['plugins/table.cmds.js'][662] = 0;
  _$jscoverage['plugins/table.cmds.js'][663] = 0;
  _$jscoverage['plugins/table.cmds.js'][669] = 0;
  _$jscoverage['plugins/table.cmds.js'][671] = 0;
  _$jscoverage['plugins/table.cmds.js'][674] = 0;
  _$jscoverage['plugins/table.cmds.js'][677] = 0;
  _$jscoverage['plugins/table.cmds.js'][678] = 0;
  _$jscoverage['plugins/table.cmds.js'][680] = 0;
  _$jscoverage['plugins/table.cmds.js'][681] = 0;
  _$jscoverage['plugins/table.cmds.js'][683] = 0;
  _$jscoverage['plugins/table.cmds.js'][684] = 0;
  _$jscoverage['plugins/table.cmds.js'][686] = 0;
  _$jscoverage['plugins/table.cmds.js'][688] = 0;
  _$jscoverage['plugins/table.cmds.js'][689] = 0;
  _$jscoverage['plugins/table.cmds.js'][695] = 0;
  _$jscoverage['plugins/table.cmds.js'][697] = 0;
  _$jscoverage['plugins/table.cmds.js'][700] = 0;
  _$jscoverage['plugins/table.cmds.js'][704] = 0;
  _$jscoverage['plugins/table.cmds.js'][705] = 0;
  _$jscoverage['plugins/table.cmds.js'][706] = 0;
  _$jscoverage['plugins/table.cmds.js'][707] = 0;
  _$jscoverage['plugins/table.cmds.js'][708] = 0;
  _$jscoverage['plugins/table.cmds.js'][709] = 0;
  _$jscoverage['plugins/table.cmds.js'][715] = 0;
  _$jscoverage['plugins/table.cmds.js'][717] = 0;
  _$jscoverage['plugins/table.cmds.js'][720] = 0;
  _$jscoverage['plugins/table.cmds.js'][722] = 0;
  _$jscoverage['plugins/table.cmds.js'][723] = 0;
  _$jscoverage['plugins/table.cmds.js'][727] = 0;
  _$jscoverage['plugins/table.cmds.js'][728] = 0;
  _$jscoverage['plugins/table.cmds.js'][734] = 0;
  _$jscoverage['plugins/table.cmds.js'][736] = 0;
  _$jscoverage['plugins/table.cmds.js'][739] = 0;
  _$jscoverage['plugins/table.cmds.js'][742] = 0;
  _$jscoverage['plugins/table.cmds.js'][743] = 0;
  _$jscoverage['plugins/table.cmds.js'][745] = 0;
  _$jscoverage['plugins/table.cmds.js'][746] = 0;
  _$jscoverage['plugins/table.cmds.js'][749] = 0;
  _$jscoverage['plugins/table.cmds.js'][750] = 0;
  _$jscoverage['plugins/table.cmds.js'][755] = 0;
  _$jscoverage['plugins/table.cmds.js'][757] = 0;
  _$jscoverage['plugins/table.cmds.js'][759] = 0;
  _$jscoverage['plugins/table.cmds.js'][760] = 0;
  _$jscoverage['plugins/table.cmds.js'][762] = 0;
  _$jscoverage['plugins/table.cmds.js'][763] = 0;
  _$jscoverage['plugins/table.cmds.js'][765] = 0;
  _$jscoverage['plugins/table.cmds.js'][768] = 0;
  _$jscoverage['plugins/table.cmds.js'][775] = 0;
  _$jscoverage['plugins/table.cmds.js'][776] = 0;
  _$jscoverage['plugins/table.cmds.js'][780] = 0;
  _$jscoverage['plugins/table.cmds.js'][782] = 0;
  _$jscoverage['plugins/table.cmds.js'][785] = 0;
  _$jscoverage['plugins/table.cmds.js'][786] = 0;
  _$jscoverage['plugins/table.cmds.js'][789] = 0;
  _$jscoverage['plugins/table.cmds.js'][791] = 0;
  _$jscoverage['plugins/table.cmds.js'][794] = 0;
  _$jscoverage['plugins/table.cmds.js'][795] = 0;
  _$jscoverage['plugins/table.cmds.js'][796] = 0;
  _$jscoverage['plugins/table.cmds.js'][797] = 0;
  _$jscoverage['plugins/table.cmds.js'][801] = 0;
  _$jscoverage['plugins/table.cmds.js'][803] = 0;
  _$jscoverage['plugins/table.cmds.js'][804] = 0;
  _$jscoverage['plugins/table.cmds.js'][805] = 0;
  _$jscoverage['plugins/table.cmds.js'][806] = 0;
  _$jscoverage['plugins/table.cmds.js'][808] = 0;
  _$jscoverage['plugins/table.cmds.js'][811] = 0;
  _$jscoverage['plugins/table.cmds.js'][813] = 0;
  _$jscoverage['plugins/table.cmds.js'][817] = 0;
  _$jscoverage['plugins/table.cmds.js'][819] = 0;
  _$jscoverage['plugins/table.cmds.js'][820] = 0;
  _$jscoverage['plugins/table.cmds.js'][821] = 0;
  _$jscoverage['plugins/table.cmds.js'][822] = 0;
  _$jscoverage['plugins/table.cmds.js'][824] = 0;
  _$jscoverage['plugins/table.cmds.js'][826] = 0;
  _$jscoverage['plugins/table.cmds.js'][830] = 0;
  _$jscoverage['plugins/table.cmds.js'][831] = 0;
  _$jscoverage['plugins/table.cmds.js'][832] = 0;
  _$jscoverage['plugins/table.cmds.js'][833] = 0;
  _$jscoverage['plugins/table.cmds.js'][835] = 0;
  _$jscoverage['plugins/table.cmds.js'][836] = 0;
  _$jscoverage['plugins/table.cmds.js'][841] = 0;
  _$jscoverage['plugins/table.cmds.js'][842] = 0;
  _$jscoverage['plugins/table.cmds.js'][843] = 0;
  _$jscoverage['plugins/table.cmds.js'][844] = 0;
  _$jscoverage['plugins/table.cmds.js'][846] = 0;
  _$jscoverage['plugins/table.cmds.js'][847] = 0;
  _$jscoverage['plugins/table.cmds.js'][848] = 0;
  _$jscoverage['plugins/table.cmds.js'][849] = 0;
  _$jscoverage['plugins/table.cmds.js'][854] = 0;
  _$jscoverage['plugins/table.cmds.js'][855] = 0;
  _$jscoverage['plugins/table.cmds.js'][856] = 0;
  _$jscoverage['plugins/table.cmds.js'][859] = 0;
  _$jscoverage['plugins/table.cmds.js'][860] = 0;
  _$jscoverage['plugins/table.cmds.js'][862] = 0;
}
_$jscoverage['plugins/table.cmds.js'].source = ["<span class=\"c\">/**</span>","<span class=\"c\"> * Created with JetBrains PhpStorm.</span>","<span class=\"c\"> * User: taoqili</span>","<span class=\"c\"> * Date: 13-2-20</span>","<span class=\"c\"> * Time: &#19979;&#21320;6:25</span>","<span class=\"c\"> * To change this template use File | Settings | File Templates.</span>","<span class=\"c\"> */</span>","<span class=\"k\">;</span>","<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> UT <span class=\"k\">=</span> UE<span class=\"k\">.</span>UETable<span class=\"k\">,</span>","        getTableItemsByRange <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>editor<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> UT<span class=\"k\">.</span>getTableItemsByRange<span class=\"k\">(</span>editor<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        getUETableBySelected <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>editor<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> UT<span class=\"k\">.</span>getUETableBySelected<span class=\"k\">(</span>editor<span class=\"k\">)</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        getDefaultValue <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>editor<span class=\"k\">,</span> table<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> UT<span class=\"k\">.</span>getDefaultValue<span class=\"k\">(</span>editor<span class=\"k\">,</span> table<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        getUETable <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>tdOrTable<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> UT<span class=\"k\">.</span>getUETable<span class=\"k\">(</span>tdOrTable<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","","","    UE<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">'inserttable'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","        queryCommandState<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> getTableItemsByRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>table <span class=\"k\">?</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        execCommand<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>cmd<span class=\"k\">,</span> opt<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">function</span> createTable<span class=\"k\">(</span>opt<span class=\"k\">,</span> tableWidth<span class=\"k\">,</span> tdWidth<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> html <span class=\"k\">=</span> <span class=\"k\">[],</span>","                    rowsNum <span class=\"k\">=</span> opt<span class=\"k\">.</span>numRows<span class=\"k\">,</span>","                    colsNum <span class=\"k\">=</span> opt<span class=\"k\">.</span>numCols<span class=\"k\">;</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> r <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> r <span class=\"k\">&lt;</span> rowsNum<span class=\"k\">;</span> r<span class=\"k\">++)</span> <span class=\"k\">{</span>","                    html<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'&lt;tr&gt;'</span><span class=\"k\">);</span>","                    <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> c <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> c <span class=\"k\">&lt;</span> colsNum<span class=\"k\">;</span> c<span class=\"k\">++)</span> <span class=\"k\">{</span>","                        html<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'&lt;td width=\"'</span> <span class=\"k\">+</span> tdWidth <span class=\"k\">+</span> <span class=\"s\">'\"  vAlign=\"'</span> <span class=\"k\">+</span> opt<span class=\"k\">.</span>tdvalign <span class=\"k\">+</span> <span class=\"s\">'\" &gt;'</span> <span class=\"k\">+</span> <span class=\"k\">(</span>browser<span class=\"k\">.</span>ie <span class=\"k\">?</span> domUtils<span class=\"k\">.</span>fillChar <span class=\"k\">:</span> <span class=\"s\">'&lt;br/&gt;'</span><span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">'&lt;/td&gt;'</span><span class=\"k\">)</span>","                    <span class=\"k\">}</span>","                    html<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'&lt;/tr&gt;'</span><span class=\"k\">)</span>","                <span class=\"k\">}</span>","                <span class=\"k\">return</span> <span class=\"s\">'&lt;table width=\"'</span> <span class=\"k\">+</span> tableWidth <span class=\"k\">+</span> <span class=\"s\">'\"   &gt;&lt;tbody&gt;'</span> <span class=\"k\">+</span> html<span class=\"k\">.</span>join<span class=\"k\">(</span><span class=\"s\">''</span><span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">'&lt;/tbody&gt;&lt;/table&gt;'</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">if</span> <span class=\"k\">(!</span>opt<span class=\"k\">)</span> <span class=\"k\">{</span>","                opt <span class=\"k\">=</span> utils<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{}</span><span class=\"k\">,</span> <span class=\"k\">{</span>","                    numCols<span class=\"k\">:</span><span class=\"k\">this</span><span class=\"k\">.</span>options<span class=\"k\">.</span>defaultCols<span class=\"k\">,</span>","                    numRows<span class=\"k\">:</span><span class=\"k\">this</span><span class=\"k\">.</span>options<span class=\"k\">.</span>defaultRows<span class=\"k\">,</span>","                    tdvalign<span class=\"k\">:</span><span class=\"k\">this</span><span class=\"k\">.</span>options<span class=\"k\">.</span>tdvalign","                <span class=\"k\">}</span><span class=\"k\">)</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">var</span> range <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">(),</span>","                start <span class=\"k\">=</span> range<span class=\"k\">.</span>startContainer<span class=\"k\">,</span>","                firstParentBlock <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParent<span class=\"k\">(</span>start<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> domUtils<span class=\"k\">.</span>isBlockElm<span class=\"k\">(</span>node<span class=\"k\">);</span>","                <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","            <span class=\"k\">var</span> me <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">,</span>","                defaultValue <span class=\"k\">=</span> getDefaultValue<span class=\"k\">(</span>me<span class=\"k\">),</span>","                tableWidth <span class=\"k\">=</span> getTableWidth<span class=\"k\">(</span>me<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">,</span> defaultValue<span class=\"k\">)</span> <span class=\"k\">-</span> <span class=\"k\">(</span>firstParentBlock <span class=\"k\">?</span> parseInt<span class=\"k\">(</span>domUtils<span class=\"k\">.</span>getXY<span class=\"k\">(</span>firstParentBlock<span class=\"k\">).</span>x<span class=\"k\">,</span> <span class=\"s\">10</span><span class=\"k\">)</span> <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">),</span>","                tdWidth <span class=\"k\">=</span> Math<span class=\"k\">.</span>floor<span class=\"k\">(</span>tableWidth <span class=\"k\">/</span> opt<span class=\"k\">.</span>numCols <span class=\"k\">-</span> defaultValue<span class=\"k\">.</span>tdPadding <span class=\"k\">*</span> <span class=\"s\">2</span> <span class=\"k\">-</span> defaultValue<span class=\"k\">.</span>tdBorder<span class=\"k\">);</span>","            <span class=\"c\">//todo&#20854;&#20182;&#23646;&#24615;</span>","            <span class=\"k\">!</span>opt<span class=\"k\">.</span>tdvalign <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>opt<span class=\"k\">.</span>tdvalign <span class=\"k\">=</span> me<span class=\"k\">.</span>options<span class=\"k\">.</span>tdvalign<span class=\"k\">);</span>","            me<span class=\"k\">.</span>execCommand<span class=\"k\">(</span><span class=\"s\">\"inserthtml\"</span><span class=\"k\">,</span> createTable<span class=\"k\">(</span>opt<span class=\"k\">,</span> tableWidth<span class=\"k\">,</span> tdWidth<span class=\"k\">));</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    UE<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">'insertparagraphbeforetable'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","        queryCommandState<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> getTableItemsByRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>cell <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        execCommand<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> table <span class=\"k\">=</span> getTableItemsByRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>table<span class=\"k\">;</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>table<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> p <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">\"p\"</span><span class=\"k\">);</span>","                p<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> browser<span class=\"k\">.</span>ie <span class=\"k\">?</span> <span class=\"s\">'&amp;nbsp;'</span> <span class=\"k\">:</span> <span class=\"s\">'&lt;br /&gt;'</span><span class=\"k\">;</span>","                table<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>p<span class=\"k\">,</span> table<span class=\"k\">);</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">().</span>setStart<span class=\"k\">(</span>p<span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">).</span>setCursor<span class=\"k\">();</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    UE<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">'deletetable'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","        queryCommandState<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> rng <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">();</span>","            <span class=\"k\">return</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>rng<span class=\"k\">.</span>startContainer<span class=\"k\">,</span> <span class=\"s\">'table'</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">)</span> <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        execCommand<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>cmd<span class=\"k\">,</span> table<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> rng <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">();</span>","            table <span class=\"k\">=</span> table <span class=\"k\">||</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>rng<span class=\"k\">.</span>startContainer<span class=\"k\">,</span> <span class=\"s\">'table'</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>table<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> next <span class=\"k\">=</span> table<span class=\"k\">.</span>nextSibling<span class=\"k\">;</span>","                <span class=\"k\">if</span> <span class=\"k\">(!</span>next<span class=\"k\">)</span> <span class=\"k\">{</span>","                    next <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>document<span class=\"k\">,</span> <span class=\"s\">'p'</span><span class=\"k\">,</span> <span class=\"k\">{</span>","                        <span class=\"s\">'innerHTML'</span><span class=\"k\">:</span>browser<span class=\"k\">.</span>ie <span class=\"k\">?</span> domUtils<span class=\"k\">.</span>fillChar <span class=\"k\">:</span> <span class=\"s\">'&lt;br/&gt;'</span>","                    <span class=\"k\">}</span><span class=\"k\">);</span>","                    table<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>next<span class=\"k\">,</span> table<span class=\"k\">);</span>","                <span class=\"k\">}</span>","                domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>table<span class=\"k\">);</span>","                rng <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">();</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>next<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">3</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                    rng<span class=\"k\">.</span>setStartBefore<span class=\"k\">(</span>next<span class=\"k\">)</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    rng<span class=\"k\">.</span>setStart<span class=\"k\">(</span>next<span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">)</span>","                <span class=\"k\">}</span>","                rng<span class=\"k\">.</span>setCursor<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">)</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">\"tablehasdeleted\"</span><span class=\"k\">)</span>","","            <span class=\"k\">}</span>","","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","    UE<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">'cellalign'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","        queryCommandState<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> getSelectedArr<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>length <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"k\">-</span><span class=\"s\">1</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        execCommand<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>cmd<span class=\"k\">,</span> align<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> selectedTds <span class=\"k\">=</span> getSelectedArr<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>selectedTds<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> ci<span class=\"k\">;</span> ci <span class=\"k\">=</span> selectedTds<span class=\"k\">[</span>i<span class=\"k\">++];)</span> <span class=\"k\">{</span>","                    ci<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">'align'</span><span class=\"k\">,</span> align<span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","    UE<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">'cellvalign'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","        queryCommandState<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> getSelectedArr<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>length <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        execCommand<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>cmd<span class=\"k\">,</span> valign<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> selectedTds <span class=\"k\">=</span> getSelectedArr<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>selectedTds<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> ci<span class=\"k\">;</span> ci <span class=\"k\">=</span> selectedTds<span class=\"k\">[</span>i<span class=\"k\">++];)</span> <span class=\"k\">{</span>","                    ci<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">'vAlign'</span><span class=\"k\">,</span> valign<span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","    UE<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">'insertcaption'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","        queryCommandState<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> table <span class=\"k\">=</span> getTableItemsByRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>table<span class=\"k\">;</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>table<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> table<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">'caption'</span><span class=\"k\">).</span>length <span class=\"k\">==</span> <span class=\"s\">0</span> <span class=\"k\">?</span> <span class=\"s\">1</span> <span class=\"k\">:</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","            <span class=\"k\">return</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        execCommand<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> table <span class=\"k\">=</span> getTableItemsByRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>table<span class=\"k\">;</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>table<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> caption <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'caption'</span><span class=\"k\">);</span>","                caption<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> browser<span class=\"k\">.</span>ie <span class=\"k\">?</span> domUtils<span class=\"k\">.</span>fillChar <span class=\"k\">:</span> <span class=\"s\">'&lt;br/&gt;'</span><span class=\"k\">;</span>","                table<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>caption<span class=\"k\">,</span> table<span class=\"k\">.</span>firstChild<span class=\"k\">);</span>","                <span class=\"k\">var</span> range <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">();</span>","                range<span class=\"k\">.</span>setStart<span class=\"k\">(</span>caption<span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">).</span>setCursor<span class=\"k\">();</span>","            <span class=\"k\">}</span>","","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","    UE<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">'deletecaption'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","        queryCommandState<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> rng <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">(),</span>","                table <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>rng<span class=\"k\">.</span>startContainer<span class=\"k\">,</span> <span class=\"s\">'table'</span><span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>table<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> table<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">'caption'</span><span class=\"k\">).</span>length <span class=\"k\">==</span> <span class=\"s\">0</span> <span class=\"k\">?</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","            <span class=\"k\">return</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        execCommand<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> rng <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">(),</span>","                table <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>rng<span class=\"k\">.</span>startContainer<span class=\"k\">,</span> <span class=\"s\">'table'</span><span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>table<span class=\"k\">)</span> <span class=\"k\">{</span>","                domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>table<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">'caption'</span><span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">]);</span>","                <span class=\"k\">var</span> range <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">();</span>","                range<span class=\"k\">.</span>setStart<span class=\"k\">(</span>table<span class=\"k\">.</span>rows<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>cells<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span> <span class=\"s\">0</span><span class=\"k\">).</span>setCursor<span class=\"k\">();</span>","            <span class=\"k\">}</span>","","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","    UE<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">'inserttitle'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","        queryCommandState<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> table <span class=\"k\">=</span> getTableItemsByRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>table<span class=\"k\">;</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>table<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> firstRow <span class=\"k\">=</span> table<span class=\"k\">.</span>rows<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","                <span class=\"k\">return</span> firstRow<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">'th'</span><span class=\"k\">).</span>length <span class=\"k\">==</span> <span class=\"s\">0</span> <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"k\">-</span><span class=\"s\">1</span>","            <span class=\"k\">}</span>","            <span class=\"k\">return</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        execCommand<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> table <span class=\"k\">=</span> getTableItemsByRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>table<span class=\"k\">;</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>table<span class=\"k\">)</span> <span class=\"k\">{</span>","                getUETable<span class=\"k\">(</span>table<span class=\"k\">).</span>insertRow<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">'th'</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","            <span class=\"k\">var</span> th <span class=\"k\">=</span> table<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">'th'</span><span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">];</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">().</span>setStart<span class=\"k\">(</span>th<span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">).</span>setCursor<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","    UE<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">'deletetitle'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","        queryCommandState<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> table <span class=\"k\">=</span> getTableItemsByRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>table<span class=\"k\">;</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>table<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> firstRow <span class=\"k\">=</span> table<span class=\"k\">.</span>rows<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","                <span class=\"k\">return</span> firstRow<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">'th'</span><span class=\"k\">).</span>length <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"k\">-</span><span class=\"s\">1</span>","            <span class=\"k\">}</span>","            <span class=\"k\">return</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        execCommand<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> table <span class=\"k\">=</span> getTableItemsByRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>table<span class=\"k\">;</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>table<span class=\"k\">)</span> <span class=\"k\">{</span>","                domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>table<span class=\"k\">.</span>rows<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">])</span>","            <span class=\"k\">}</span>","            <span class=\"k\">var</span> td <span class=\"k\">=</span> table<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">'td'</span><span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">];</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">().</span>setStart<span class=\"k\">(</span>td<span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">).</span>setCursor<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    UE<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">\"mergeright\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","        queryCommandState<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>cmd<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> tableItems <span class=\"k\">=</span> getTableItemsByRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span>tableItems<span class=\"k\">.</span>cell<span class=\"k\">)</span> <span class=\"k\">return</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","            <span class=\"k\">var</span> ut <span class=\"k\">=</span> getUETable<span class=\"k\">(</span>tableItems<span class=\"k\">.</span>table<span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>ut<span class=\"k\">.</span>selectedTds<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">return</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","            <span class=\"k\">var</span> cellInfo <span class=\"k\">=</span> ut<span class=\"k\">.</span>getCellInfo<span class=\"k\">(</span>tableItems<span class=\"k\">.</span>cell<span class=\"k\">),</span>","                rightColIndex <span class=\"k\">=</span> cellInfo<span class=\"k\">.</span>colIndex <span class=\"k\">+</span> cellInfo<span class=\"k\">.</span>colSpan<span class=\"k\">;</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>rightColIndex <span class=\"k\">&gt;=</span> ut<span class=\"k\">.</span>colsNum<span class=\"k\">)</span> <span class=\"k\">return</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","            <span class=\"k\">var</span> rightCellInfo <span class=\"k\">=</span> ut<span class=\"k\">.</span>indexTable<span class=\"k\">[</span>cellInfo<span class=\"k\">.</span>rowIndex<span class=\"k\">][</span>rightColIndex<span class=\"k\">];</span>","            <span class=\"k\">return</span> <span class=\"k\">(</span>rightCellInfo<span class=\"k\">.</span>rowIndex <span class=\"k\">==</span> cellInfo<span class=\"k\">.</span>rowIndex","                <span class=\"k\">&amp;&amp;</span> rightCellInfo<span class=\"k\">.</span>rowSpan <span class=\"k\">==</span> cellInfo<span class=\"k\">.</span>rowSpan<span class=\"k\">)</span> <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        execCommand<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>cmd<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> rng <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">(),</span>","                bk <span class=\"k\">=</span> rng<span class=\"k\">.</span>createBookmark<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","            <span class=\"k\">var</span> cell <span class=\"k\">=</span> getTableItemsByRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>cell<span class=\"k\">,</span>","                ut <span class=\"k\">=</span> getUETable<span class=\"k\">(</span>cell<span class=\"k\">);</span>","            ut<span class=\"k\">.</span>mergeRight<span class=\"k\">(</span>cell<span class=\"k\">);</span>","            rng<span class=\"k\">.</span>moveToBookmark<span class=\"k\">(</span>bk<span class=\"k\">).</span>select<span class=\"k\">();</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","    UE<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">\"mergedown\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","        queryCommandState<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>cmd<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> tableItems <span class=\"k\">=</span> getTableItemsByRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">),</span>","                cell <span class=\"k\">=</span> tableItems<span class=\"k\">.</span>cell<span class=\"k\">;</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span>cell <span class=\"k\">||</span> cell<span class=\"k\">.</span>tagName <span class=\"k\">==</span> <span class=\"s\">\"TH\"</span><span class=\"k\">)</span> <span class=\"k\">return</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","            <span class=\"k\">var</span> ut <span class=\"k\">=</span> getUETable<span class=\"k\">(</span>tableItems<span class=\"k\">.</span>table<span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>ut<span class=\"k\">.</span>selectedTds<span class=\"k\">.</span>length<span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","            <span class=\"k\">var</span> cellInfo <span class=\"k\">=</span> ut<span class=\"k\">.</span>getCellInfo<span class=\"k\">(</span>tableItems<span class=\"k\">.</span>cell<span class=\"k\">),</span>","                downRowIndex <span class=\"k\">=</span> cellInfo<span class=\"k\">.</span>rowIndex <span class=\"k\">+</span> cellInfo<span class=\"k\">.</span>rowSpan<span class=\"k\">;</span>","            <span class=\"c\">// &#22914;&#26524;&#22788;&#20110;&#26368;&#19979;&#36793;&#21017;&#19981;&#33021;f&#21521;&#21491;&#21512;&#24182;</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>downRowIndex <span class=\"k\">&gt;=</span> ut<span class=\"k\">.</span>rowsNum<span class=\"k\">)</span> <span class=\"k\">return</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","            <span class=\"k\">var</span> downCellInfo <span class=\"k\">=</span> ut<span class=\"k\">.</span>indexTable<span class=\"k\">[</span>downRowIndex<span class=\"k\">][</span>cellInfo<span class=\"k\">.</span>colIndex<span class=\"k\">];</span>","            <span class=\"c\">// &#24403;&#19988;&#20165;&#24403;&#20004;&#20010;Cell&#30340;&#24320;&#22987;&#21015;&#21495;&#21644;&#32467;&#26463;&#21015;&#21495;&#19968;&#33268;&#26102;&#33021;&#36827;&#34892;&#21512;&#24182;</span>","            <span class=\"k\">return</span> <span class=\"k\">(</span>downCellInfo<span class=\"k\">.</span>colIndex <span class=\"k\">==</span> cellInfo<span class=\"k\">.</span>colIndex","                <span class=\"k\">&amp;&amp;</span> downCellInfo<span class=\"k\">.</span>colSpan <span class=\"k\">==</span> cellInfo<span class=\"k\">.</span>colSpan<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> tableItems<span class=\"k\">.</span>cell<span class=\"k\">.</span>tagName <span class=\"k\">!==</span> <span class=\"s\">'TH'</span> <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        execCommand<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> rng <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">(),</span>","                bk <span class=\"k\">=</span> rng<span class=\"k\">.</span>createBookmark<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","            <span class=\"k\">var</span> cell <span class=\"k\">=</span> getTableItemsByRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>cell<span class=\"k\">,</span>","                ut <span class=\"k\">=</span> getUETable<span class=\"k\">(</span>cell<span class=\"k\">);</span>","            ut<span class=\"k\">.</span>mergeDown<span class=\"k\">(</span>cell<span class=\"k\">);</span>","            rng<span class=\"k\">.</span>moveToBookmark<span class=\"k\">(</span>bk<span class=\"k\">).</span>select<span class=\"k\">();</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","    UE<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">\"mergecells\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","        queryCommandState<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> getUETableBySelected<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">)</span> <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        execCommand<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> ut <span class=\"k\">=</span> getUETableBySelected<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>ut <span class=\"k\">&amp;&amp;</span> ut<span class=\"k\">.</span>selectedTds<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> cell <span class=\"k\">=</span> ut<span class=\"k\">.</span>selectedTds<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","                getUETableBySelected<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>mergeRange<span class=\"k\">();</span>","                <span class=\"k\">var</span> rng <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">();</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isEmptyBlock<span class=\"k\">(</span>cell<span class=\"k\">))</span> <span class=\"k\">{</span>","                    rng<span class=\"k\">.</span>setStart<span class=\"k\">(</span>cell<span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">).</span>collapse<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">)</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    rng<span class=\"k\">.</span>selectNodeContents<span class=\"k\">(</span>cell<span class=\"k\">)</span>","                <span class=\"k\">}</span>","                rng<span class=\"k\">.</span>select<span class=\"k\">();</span>","            <span class=\"k\">}</span>","","","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","    UE<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">\"insertrow\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","        queryCommandState<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> tableItems <span class=\"k\">=</span> getTableItemsByRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">),</span>","                cell <span class=\"k\">=</span> tableItems<span class=\"k\">.</span>cell<span class=\"k\">;</span>","            <span class=\"k\">return</span> cell <span class=\"k\">&amp;&amp;</span> cell<span class=\"k\">.</span>tagName <span class=\"k\">==</span> <span class=\"s\">\"TD\"</span> <span class=\"k\">&amp;&amp;</span> getUETable<span class=\"k\">(</span>tableItems<span class=\"k\">.</span>table<span class=\"k\">).</span>rowsNum <span class=\"k\">&lt;</span> <span class=\"k\">this</span><span class=\"k\">.</span>options<span class=\"k\">.</span>maxRowNum <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        execCommand<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> rng <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">(),</span>","                bk <span class=\"k\">=</span> rng<span class=\"k\">.</span>createBookmark<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","            <span class=\"k\">var</span> tableItems <span class=\"k\">=</span> getTableItemsByRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">),</span>","                cell <span class=\"k\">=</span> tableItems<span class=\"k\">.</span>cell<span class=\"k\">,</span>","                table <span class=\"k\">=</span> tableItems<span class=\"k\">.</span>table<span class=\"k\">,</span>","                ut <span class=\"k\">=</span> getUETable<span class=\"k\">(</span>table<span class=\"k\">),</span>","                cellInfo <span class=\"k\">=</span> ut<span class=\"k\">.</span>getCellInfo<span class=\"k\">(</span>cell<span class=\"k\">);</span>","            <span class=\"c\">//ut.insertRow(!ut.selectedTds.length ? cellInfo.rowIndex:ut.cellsRange.beginRowIndex,'');</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span>ut<span class=\"k\">.</span>selectedTds<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","                ut<span class=\"k\">.</span>insertRow<span class=\"k\">(</span>cellInfo<span class=\"k\">.</span>rowIndex<span class=\"k\">,</span> cell<span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> range <span class=\"k\">=</span> ut<span class=\"k\">.</span>cellsRange<span class=\"k\">;</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> len <span class=\"k\">=</span> range<span class=\"k\">.</span>endRowIndex <span class=\"k\">-</span> range<span class=\"k\">.</span>beginRowIndex <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","                    ut<span class=\"k\">.</span>insertRow<span class=\"k\">(</span>range<span class=\"k\">.</span>beginRowIndex<span class=\"k\">,</span> cell<span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","            rng<span class=\"k\">.</span>moveToBookmark<span class=\"k\">(</span>bk<span class=\"k\">).</span>select<span class=\"k\">();</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>table<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"interlaced\"</span><span class=\"k\">)===</span><span class=\"s\">\"enabled\"</span><span class=\"k\">)</span><span class=\"k\">this</span><span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">\"interlacetable\"</span><span class=\"k\">,</span>table<span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"c\">//&#21518;&#25554;&#20837;&#34892;</span>","    UE<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">\"insertrownext\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","        queryCommandState<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> tableItems <span class=\"k\">=</span> getTableItemsByRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">),</span>","                cell <span class=\"k\">=</span> tableItems<span class=\"k\">.</span>cell<span class=\"k\">;</span>","            <span class=\"k\">return</span> cell <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>cell<span class=\"k\">.</span>tagName <span class=\"k\">==</span> <span class=\"s\">\"TD\"</span><span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> getUETable<span class=\"k\">(</span>tableItems<span class=\"k\">.</span>table<span class=\"k\">).</span>rowsNum <span class=\"k\">&lt;</span> <span class=\"k\">this</span><span class=\"k\">.</span>options<span class=\"k\">.</span>maxRowNum <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        execCommand<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> rng <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">(),</span>","                bk <span class=\"k\">=</span> rng<span class=\"k\">.</span>createBookmark<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","            <span class=\"k\">var</span> tableItems <span class=\"k\">=</span> getTableItemsByRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">),</span>","                cell <span class=\"k\">=</span> tableItems<span class=\"k\">.</span>cell<span class=\"k\">,</span>","                table <span class=\"k\">=</span> tableItems<span class=\"k\">.</span>table<span class=\"k\">,</span>","                ut <span class=\"k\">=</span> getUETable<span class=\"k\">(</span>table<span class=\"k\">),</span>","                cellInfo <span class=\"k\">=</span> ut<span class=\"k\">.</span>getCellInfo<span class=\"k\">(</span>cell<span class=\"k\">);</span>","            <span class=\"c\">//ut.insertRow(!ut.selectedTds.length? cellInfo.rowIndex + cellInfo.rowSpan : ut.cellsRange.endRowIndex + 1,'');</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span>ut<span class=\"k\">.</span>selectedTds<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","                ut<span class=\"k\">.</span>insertRow<span class=\"k\">(</span>cellInfo<span class=\"k\">.</span>rowIndex <span class=\"k\">+</span> cellInfo<span class=\"k\">.</span>rowSpan<span class=\"k\">,</span> cell<span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> range <span class=\"k\">=</span> ut<span class=\"k\">.</span>cellsRange<span class=\"k\">;</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> len <span class=\"k\">=</span> range<span class=\"k\">.</span>endRowIndex <span class=\"k\">-</span> range<span class=\"k\">.</span>beginRowIndex <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","                    ut<span class=\"k\">.</span>insertRow<span class=\"k\">(</span>range<span class=\"k\">.</span>endRowIndex <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">,</span> cell<span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","            rng<span class=\"k\">.</span>moveToBookmark<span class=\"k\">(</span>bk<span class=\"k\">).</span>select<span class=\"k\">();</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>table<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"interlaced\"</span><span class=\"k\">)===</span><span class=\"s\">\"enabled\"</span><span class=\"k\">)</span><span class=\"k\">this</span><span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">\"interlacetable\"</span><span class=\"k\">,</span>table<span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","    UE<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">\"deleterow\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","        queryCommandState<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> tableItems <span class=\"k\">=</span> getTableItemsByRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span>tableItems<span class=\"k\">.</span>cell<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        execCommand<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> cell <span class=\"k\">=</span> getTableItemsByRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>cell<span class=\"k\">,</span>","                ut <span class=\"k\">=</span> getUETable<span class=\"k\">(</span>cell<span class=\"k\">),</span>","                cellsRange <span class=\"k\">=</span> ut<span class=\"k\">.</span>cellsRange<span class=\"k\">,</span>","                cellInfo <span class=\"k\">=</span> ut<span class=\"k\">.</span>getCellInfo<span class=\"k\">(</span>cell<span class=\"k\">),</span>","                preCell <span class=\"k\">=</span> ut<span class=\"k\">.</span>getVSideCell<span class=\"k\">(</span>cell<span class=\"k\">),</span>","                nextCell <span class=\"k\">=</span> ut<span class=\"k\">.</span>getVSideCell<span class=\"k\">(</span>cell<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">),</span>","                rng <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">();</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>utils<span class=\"k\">.</span>isEmptyObject<span class=\"k\">(</span>cellsRange<span class=\"k\">))</span> <span class=\"k\">{</span>","                ut<span class=\"k\">.</span>deleteRow<span class=\"k\">(</span>cellInfo<span class=\"k\">.</span>rowIndex<span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> cellsRange<span class=\"k\">.</span>beginRowIndex<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> cellsRange<span class=\"k\">.</span>endRowIndex <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","                    ut<span class=\"k\">.</span>deleteRow<span class=\"k\">(</span>cellsRange<span class=\"k\">.</span>beginRowIndex<span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","            <span class=\"k\">var</span> table <span class=\"k\">=</span> ut<span class=\"k\">.</span>table<span class=\"k\">;</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span>table<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">'td'</span><span class=\"k\">).</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> nextSibling <span class=\"k\">=</span> table<span class=\"k\">.</span>nextSibling<span class=\"k\">;</span>","                domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>table<span class=\"k\">);</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>nextSibling<span class=\"k\">)</span> <span class=\"k\">{</span>","                    rng<span class=\"k\">.</span>setStart<span class=\"k\">(</span>nextSibling<span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">).</span>setCursor<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>cellInfo<span class=\"k\">.</span>rowSpan <span class=\"k\">==</span> <span class=\"s\">1</span> <span class=\"k\">||</span> cellInfo<span class=\"k\">.</span>rowSpan <span class=\"k\">==</span> cellsRange<span class=\"k\">.</span>endRowIndex <span class=\"k\">-</span> cellsRange<span class=\"k\">.</span>beginRowIndex <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>nextCell <span class=\"k\">||</span> preCell<span class=\"k\">)</span> rng<span class=\"k\">.</span>selectNodeContents<span class=\"k\">(</span>nextCell <span class=\"k\">||</span> preCell<span class=\"k\">).</span>setCursor<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> newCell <span class=\"k\">=</span> ut<span class=\"k\">.</span>getCell<span class=\"k\">(</span>cellInfo<span class=\"k\">.</span>rowIndex<span class=\"k\">,</span> ut<span class=\"k\">.</span>indexTable<span class=\"k\">[</span>cellInfo<span class=\"k\">.</span>rowIndex<span class=\"k\">][</span>cellInfo<span class=\"k\">.</span>colIndex<span class=\"k\">].</span>cellIndex<span class=\"k\">);</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>newCell<span class=\"k\">)</span> rng<span class=\"k\">.</span>selectNodeContents<span class=\"k\">(</span>newCell<span class=\"k\">).</span>setCursor<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>table<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"interlaced\"</span><span class=\"k\">)===</span><span class=\"s\">\"enabled\"</span><span class=\"k\">)</span><span class=\"k\">this</span><span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">\"interlacetable\"</span><span class=\"k\">,</span>table<span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","    UE<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">\"insertcol\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","        queryCommandState<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>cmd<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> tableItems <span class=\"k\">=</span> getTableItemsByRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">),</span>","                cell <span class=\"k\">=</span> tableItems<span class=\"k\">.</span>cell<span class=\"k\">;</span>","            <span class=\"k\">return</span> cell <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>cell<span class=\"k\">.</span>tagName <span class=\"k\">==</span> <span class=\"s\">\"TD\"</span> <span class=\"k\">||</span> cell<span class=\"k\">.</span>tagName <span class=\"k\">==</span> <span class=\"s\">'TH'</span><span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> getUETable<span class=\"k\">(</span>tableItems<span class=\"k\">.</span>table<span class=\"k\">).</span>colsNum <span class=\"k\">&lt;</span> <span class=\"k\">this</span><span class=\"k\">.</span>options<span class=\"k\">.</span>maxColNum <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        execCommand<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>cmd<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> rng <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">(),</span>","                bk <span class=\"k\">=</span> rng<span class=\"k\">.</span>createBookmark<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>queryCommandState<span class=\"k\">(</span>cmd<span class=\"k\">)</span> <span class=\"k\">==</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">)</span><span class=\"k\">return</span><span class=\"k\">;</span>","            <span class=\"k\">var</span> cell <span class=\"k\">=</span> getTableItemsByRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>cell<span class=\"k\">,</span>","                ut <span class=\"k\">=</span> getUETable<span class=\"k\">(</span>cell<span class=\"k\">),</span>","                cellInfo <span class=\"k\">=</span> ut<span class=\"k\">.</span>getCellInfo<span class=\"k\">(</span>cell<span class=\"k\">);</span>","            <span class=\"c\">//ut.insertCol(!ut.selectedTds.length ? cellInfo.colIndex:ut.cellsRange.beginColIndex);</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span>ut<span class=\"k\">.</span>selectedTds<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","                ut<span class=\"k\">.</span>insertCol<span class=\"k\">(</span>cellInfo<span class=\"k\">.</span>colIndex<span class=\"k\">,</span> cell<span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> range <span class=\"k\">=</span> ut<span class=\"k\">.</span>cellsRange<span class=\"k\">;</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> len <span class=\"k\">=</span> range<span class=\"k\">.</span>endColIndex <span class=\"k\">-</span> range<span class=\"k\">.</span>beginColIndex <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","                    ut<span class=\"k\">.</span>insertCol<span class=\"k\">(</span>range<span class=\"k\">.</span>beginColIndex<span class=\"k\">,</span> cell<span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","            rng<span class=\"k\">.</span>moveToBookmark<span class=\"k\">(</span>bk<span class=\"k\">).</span>select<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","    UE<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">\"insertcolnext\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","        queryCommandState<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> tableItems <span class=\"k\">=</span> getTableItemsByRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">),</span>","                cell <span class=\"k\">=</span> tableItems<span class=\"k\">.</span>cell<span class=\"k\">;</span>","            <span class=\"k\">return</span> cell <span class=\"k\">&amp;&amp;</span> getUETable<span class=\"k\">(</span>tableItems<span class=\"k\">.</span>table<span class=\"k\">).</span>colsNum <span class=\"k\">&lt;</span> <span class=\"k\">this</span><span class=\"k\">.</span>options<span class=\"k\">.</span>maxColNum <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        execCommand<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> rng <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">(),</span>","                bk <span class=\"k\">=</span> rng<span class=\"k\">.</span>createBookmark<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","            <span class=\"k\">var</span> cell <span class=\"k\">=</span> getTableItemsByRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>cell<span class=\"k\">,</span>","                ut <span class=\"k\">=</span> getUETable<span class=\"k\">(</span>cell<span class=\"k\">),</span>","                cellInfo <span class=\"k\">=</span> ut<span class=\"k\">.</span>getCellInfo<span class=\"k\">(</span>cell<span class=\"k\">);</span>","            <span class=\"c\">//ut.insertCol(!ut.selectedTds.length ? cellInfo.colIndex + cellInfo.colSpan:ut.cellsRange.endColIndex +1);</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span>ut<span class=\"k\">.</span>selectedTds<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","                ut<span class=\"k\">.</span>insertCol<span class=\"k\">(</span>cellInfo<span class=\"k\">.</span>colIndex <span class=\"k\">+</span> cellInfo<span class=\"k\">.</span>colSpan<span class=\"k\">,</span> cell<span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> range <span class=\"k\">=</span> ut<span class=\"k\">.</span>cellsRange<span class=\"k\">;</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> len <span class=\"k\">=</span> range<span class=\"k\">.</span>endColIndex <span class=\"k\">-</span> range<span class=\"k\">.</span>beginColIndex <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","                    ut<span class=\"k\">.</span>insertCol<span class=\"k\">(</span>range<span class=\"k\">.</span>endColIndex <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">,</span> cell<span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","            rng<span class=\"k\">.</span>moveToBookmark<span class=\"k\">(</span>bk<span class=\"k\">).</span>select<span class=\"k\">();</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    UE<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">\"deletecol\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","        queryCommandState<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> tableItems <span class=\"k\">=</span> getTableItemsByRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span>tableItems<span class=\"k\">.</span>cell<span class=\"k\">)</span> <span class=\"k\">return</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        execCommand<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> cell <span class=\"k\">=</span> getTableItemsByRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>cell<span class=\"k\">,</span>","                ut <span class=\"k\">=</span> getUETable<span class=\"k\">(</span>cell<span class=\"k\">),</span>","                range <span class=\"k\">=</span> ut<span class=\"k\">.</span>cellsRange<span class=\"k\">,</span>","                cellInfo <span class=\"k\">=</span> ut<span class=\"k\">.</span>getCellInfo<span class=\"k\">(</span>cell<span class=\"k\">),</span>","                preCell <span class=\"k\">=</span> ut<span class=\"k\">.</span>getHSideCell<span class=\"k\">(</span>cell<span class=\"k\">),</span>","                nextCell <span class=\"k\">=</span> ut<span class=\"k\">.</span>getHSideCell<span class=\"k\">(</span>cell<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>utils<span class=\"k\">.</span>isEmptyObject<span class=\"k\">(</span>range<span class=\"k\">))</span> <span class=\"k\">{</span>","                ut<span class=\"k\">.</span>deleteCol<span class=\"k\">(</span>cellInfo<span class=\"k\">.</span>colIndex<span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> range<span class=\"k\">.</span>beginColIndex<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> range<span class=\"k\">.</span>endColIndex <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","                    ut<span class=\"k\">.</span>deleteCol<span class=\"k\">(</span>range<span class=\"k\">.</span>beginColIndex<span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","            <span class=\"k\">var</span> table <span class=\"k\">=</span> ut<span class=\"k\">.</span>table<span class=\"k\">,</span>","                rng <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">();</span>","","            <span class=\"k\">if</span> <span class=\"k\">(!</span>table<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">'td'</span><span class=\"k\">).</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> nextSibling <span class=\"k\">=</span> table<span class=\"k\">.</span>nextSibling<span class=\"k\">;</span>","                domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>table<span class=\"k\">);</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>nextSibling<span class=\"k\">)</span> <span class=\"k\">{</span>","                    rng<span class=\"k\">.</span>setStart<span class=\"k\">(</span>nextSibling<span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">).</span>setCursor<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>domUtils<span class=\"k\">.</span>inDoc<span class=\"k\">(</span>cell<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>document<span class=\"k\">))</span> <span class=\"k\">{</span>","                    rng<span class=\"k\">.</span>setStart<span class=\"k\">(</span>cell<span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">).</span>setCursor<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>nextCell <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>inDoc<span class=\"k\">(</span>nextCell<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>document<span class=\"k\">))</span> <span class=\"k\">{</span>","                        rng<span class=\"k\">.</span>selectNodeContents<span class=\"k\">(</span>nextCell<span class=\"k\">).</span>setCursor<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>preCell <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>inDoc<span class=\"k\">(</span>preCell<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>document<span class=\"k\">))</span> <span class=\"k\">{</span>","                            rng<span class=\"k\">.</span>selectNodeContents<span class=\"k\">(</span>preCell<span class=\"k\">).</span>setCursor<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","    UE<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">\"splittocells\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","        queryCommandState<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> tableItems <span class=\"k\">=</span> getTableItemsByRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">),</span>","                cell <span class=\"k\">=</span> tableItems<span class=\"k\">.</span>cell<span class=\"k\">;</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span>cell<span class=\"k\">)</span> <span class=\"k\">return</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","            <span class=\"k\">var</span> ut <span class=\"k\">=</span> getUETable<span class=\"k\">(</span>tableItems<span class=\"k\">.</span>table<span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>ut<span class=\"k\">.</span>selectedTds<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">return</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","            <span class=\"k\">return</span> cell <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>cell<span class=\"k\">.</span>colSpan <span class=\"k\">&gt;</span> <span class=\"s\">1</span> <span class=\"k\">||</span> cell<span class=\"k\">.</span>rowSpan <span class=\"k\">&gt;</span> <span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        execCommand<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> rng <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">(),</span>","                bk <span class=\"k\">=</span> rng<span class=\"k\">.</span>createBookmark<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","            <span class=\"k\">var</span> cell <span class=\"k\">=</span> getTableItemsByRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>cell<span class=\"k\">,</span>","                ut <span class=\"k\">=</span> getUETable<span class=\"k\">(</span>cell<span class=\"k\">);</span>","            ut<span class=\"k\">.</span>splitToCells<span class=\"k\">(</span>cell<span class=\"k\">);</span>","            rng<span class=\"k\">.</span>moveToBookmark<span class=\"k\">(</span>bk<span class=\"k\">).</span>select<span class=\"k\">();</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","    UE<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">\"splittorows\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","        queryCommandState<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> tableItems <span class=\"k\">=</span> getTableItemsByRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">),</span>","                cell <span class=\"k\">=</span> tableItems<span class=\"k\">.</span>cell<span class=\"k\">;</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span>cell<span class=\"k\">)</span> <span class=\"k\">return</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","            <span class=\"k\">var</span> ut <span class=\"k\">=</span> getUETable<span class=\"k\">(</span>tableItems<span class=\"k\">.</span>table<span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>ut<span class=\"k\">.</span>selectedTds<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">return</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","            <span class=\"k\">return</span> cell <span class=\"k\">&amp;&amp;</span> cell<span class=\"k\">.</span>rowSpan <span class=\"k\">&gt;</span> <span class=\"s\">1</span> <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        execCommand<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> rng <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">(),</span>","                bk <span class=\"k\">=</span> rng<span class=\"k\">.</span>createBookmark<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","            <span class=\"k\">var</span> cell <span class=\"k\">=</span> getTableItemsByRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>cell<span class=\"k\">,</span>","                ut <span class=\"k\">=</span> getUETable<span class=\"k\">(</span>cell<span class=\"k\">);</span>","            ut<span class=\"k\">.</span>splitToRows<span class=\"k\">(</span>cell<span class=\"k\">);</span>","            rng<span class=\"k\">.</span>moveToBookmark<span class=\"k\">(</span>bk<span class=\"k\">).</span>select<span class=\"k\">();</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","    UE<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">\"splittocols\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","        queryCommandState<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> tableItems <span class=\"k\">=</span> getTableItemsByRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">),</span>","                cell <span class=\"k\">=</span> tableItems<span class=\"k\">.</span>cell<span class=\"k\">;</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span>cell<span class=\"k\">)</span> <span class=\"k\">return</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","            <span class=\"k\">var</span> ut <span class=\"k\">=</span> getUETable<span class=\"k\">(</span>tableItems<span class=\"k\">.</span>table<span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>ut<span class=\"k\">.</span>selectedTds<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">return</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","            <span class=\"k\">return</span> cell <span class=\"k\">&amp;&amp;</span> cell<span class=\"k\">.</span>colSpan <span class=\"k\">&gt;</span> <span class=\"s\">1</span> <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        execCommand<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> rng <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">(),</span>","                bk <span class=\"k\">=</span> rng<span class=\"k\">.</span>createBookmark<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","            <span class=\"k\">var</span> cell <span class=\"k\">=</span> getTableItemsByRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>cell<span class=\"k\">,</span>","                ut <span class=\"k\">=</span> getUETable<span class=\"k\">(</span>cell<span class=\"k\">);</span>","            ut<span class=\"k\">.</span>splitToCols<span class=\"k\">(</span>cell<span class=\"k\">);</span>","            rng<span class=\"k\">.</span>moveToBookmark<span class=\"k\">(</span>bk<span class=\"k\">).</span>select<span class=\"k\">();</span>","","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    UE<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">\"adaptbytext\"</span><span class=\"k\">]</span> <span class=\"k\">=</span>","        UE<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">\"adaptbywindow\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","            queryCommandState<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> getTableItemsByRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>table <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"k\">-</span><span class=\"s\">1</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","            execCommand<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>cmd<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> tableItems <span class=\"k\">=</span> getTableItemsByRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">),</span>","                    table <span class=\"k\">=</span> tableItems<span class=\"k\">.</span>table<span class=\"k\">;</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>table<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>cmd <span class=\"k\">==</span> <span class=\"s\">'adaptbywindow'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                        resetTdWidth<span class=\"k\">(</span>table<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> cells <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span>table<span class=\"k\">,</span> <span class=\"s\">\"td th\"</span><span class=\"k\">);</span>","                        utils<span class=\"k\">.</span>each<span class=\"k\">(</span>cells<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>cell<span class=\"k\">)</span> <span class=\"k\">{</span>","                            cell<span class=\"k\">.</span>removeAttribute<span class=\"k\">(</span><span class=\"s\">\"width\"</span><span class=\"k\">);</span>","                        <span class=\"k\">}</span><span class=\"k\">);</span>","                        table<span class=\"k\">.</span>removeAttribute<span class=\"k\">(</span><span class=\"s\">\"width\"</span><span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"c\">//&#24179;&#22343;&#20998;&#37197;&#21508;&#21015;</span>","    UE<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">'averagedistributecol'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","        queryCommandState<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> ut <span class=\"k\">=</span> getUETableBySelected<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span>ut<span class=\"k\">)</span> <span class=\"k\">return</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","            <span class=\"k\">return</span> ut<span class=\"k\">.</span>isFullRow<span class=\"k\">()</span> <span class=\"k\">||</span> ut<span class=\"k\">.</span>isFullCol<span class=\"k\">()</span> <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        execCommand<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>cmd<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> me <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">,</span>","                ut <span class=\"k\">=</span> getUETableBySelected<span class=\"k\">(</span>me<span class=\"k\">);</span>","","            <span class=\"k\">function</span> getAverageWidth<span class=\"k\">()</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> tb <span class=\"k\">=</span> ut<span class=\"k\">.</span>table<span class=\"k\">,</span>","                    averageWidth<span class=\"k\">,</span> sumWidth <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> colsNum <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","                    tbAttr <span class=\"k\">=</span> getDefaultValue<span class=\"k\">(</span>me<span class=\"k\">,</span> tb<span class=\"k\">);</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span>ut<span class=\"k\">.</span>isFullRow<span class=\"k\">())</span> <span class=\"k\">{</span>","                    sumWidth <span class=\"k\">=</span> tb<span class=\"k\">.</span>offsetWidth<span class=\"k\">;</span>","                    colsNum <span class=\"k\">=</span> ut<span class=\"k\">.</span>colsNum<span class=\"k\">;</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> begin <span class=\"k\">=</span> ut<span class=\"k\">.</span>cellsRange<span class=\"k\">.</span>beginColIndex<span class=\"k\">,</span>","                        end <span class=\"k\">=</span> ut<span class=\"k\">.</span>cellsRange<span class=\"k\">.</span>endColIndex<span class=\"k\">,</span>","                        node<span class=\"k\">;</span>","                    <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> begin<span class=\"k\">;</span> i <span class=\"k\">&lt;=</span> end<span class=\"k\">;)</span> <span class=\"k\">{</span>","                        node <span class=\"k\">=</span> ut<span class=\"k\">.</span>selectedTds<span class=\"k\">[</span>i<span class=\"k\">];</span>","                        sumWidth <span class=\"k\">+=</span> node<span class=\"k\">.</span>offsetWidth<span class=\"k\">;</span>","                        i <span class=\"k\">+=</span> node<span class=\"k\">.</span>colSpan<span class=\"k\">;</span>","                        colsNum <span class=\"k\">+=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","                averageWidth <span class=\"k\">=</span> Math<span class=\"k\">.</span>ceil<span class=\"k\">(</span>sumWidth <span class=\"k\">/</span> colsNum<span class=\"k\">)</span> <span class=\"k\">-</span> tbAttr<span class=\"k\">.</span>tdBorder <span class=\"k\">*</span> <span class=\"s\">2</span> <span class=\"k\">-</span> tbAttr<span class=\"k\">.</span>tdPadding <span class=\"k\">*</span> <span class=\"s\">2</span><span class=\"k\">;</span>","                <span class=\"k\">return</span> averageWidth<span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">function</span> setAverageWidth<span class=\"k\">(</span>averageWidth<span class=\"k\">)</span> <span class=\"k\">{</span>","                utils<span class=\"k\">.</span>each<span class=\"k\">(</span>domUtils<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span>ut<span class=\"k\">.</span>table<span class=\"k\">,</span> <span class=\"s\">\"th\"</span><span class=\"k\">),</span> <span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","                    node<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">\"width\"</span><span class=\"k\">,</span> <span class=\"s\">\"\"</span><span class=\"k\">);</span>","                <span class=\"k\">}</span><span class=\"k\">);</span>","                <span class=\"k\">var</span> cells <span class=\"k\">=</span> ut<span class=\"k\">.</span>isFullRow<span class=\"k\">()</span> <span class=\"k\">?</span> domUtils<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span>ut<span class=\"k\">.</span>table<span class=\"k\">,</span> <span class=\"s\">\"td\"</span><span class=\"k\">)</span> <span class=\"k\">:</span> ut<span class=\"k\">.</span>selectedTds<span class=\"k\">;</span>","","                utils<span class=\"k\">.</span>each<span class=\"k\">(</span>cells<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>node<span class=\"k\">.</span>colSpan <span class=\"k\">==</span> <span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                        node<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">\"width\"</span><span class=\"k\">,</span> averageWidth<span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>ut <span class=\"k\">&amp;&amp;</span> ut<span class=\"k\">.</span>selectedTds<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","                setAverageWidth<span class=\"k\">(</span>getAverageWidth<span class=\"k\">());</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"c\">//&#24179;&#22343;&#20998;&#37197;&#21508;&#34892;</span>","    UE<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">'averagedistributerow'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","        queryCommandState<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> ut <span class=\"k\">=</span> getUETableBySelected<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span>ut<span class=\"k\">)</span> <span class=\"k\">return</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>ut<span class=\"k\">.</span>selectedTds <span class=\"k\">&amp;&amp;</span> <span class=\"s\">/th/ig</span><span class=\"k\">.</span>test<span class=\"k\">(</span>ut<span class=\"k\">.</span>selectedTds<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>tagName<span class=\"k\">))</span> <span class=\"k\">return</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","            <span class=\"k\">return</span> ut<span class=\"k\">.</span>isFullRow<span class=\"k\">()</span> <span class=\"k\">||</span> ut<span class=\"k\">.</span>isFullCol<span class=\"k\">()</span> <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        execCommand<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>cmd<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> me <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">,</span>","                ut <span class=\"k\">=</span> getUETableBySelected<span class=\"k\">(</span>me<span class=\"k\">);</span>","","            <span class=\"k\">function</span> getAverageHeight<span class=\"k\">()</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> averageHeight<span class=\"k\">,</span> rowNum<span class=\"k\">,</span> sumHeight <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","                    tb <span class=\"k\">=</span> ut<span class=\"k\">.</span>table<span class=\"k\">,</span>","                    tbAttr <span class=\"k\">=</span> getDefaultValue<span class=\"k\">(</span>me<span class=\"k\">,</span> tb<span class=\"k\">),</span>","                    tdpadding <span class=\"k\">=</span> parseInt<span class=\"k\">(</span>domUtils<span class=\"k\">.</span>getComputedStyle<span class=\"k\">(</span>tb<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">'td'</span><span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">],</span> <span class=\"s\">\"padding-top\"</span><span class=\"k\">));</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span>ut<span class=\"k\">.</span>isFullCol<span class=\"k\">())</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> captionArr <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span>tb<span class=\"k\">,</span> <span class=\"s\">\"caption\"</span><span class=\"k\">),</span>","                        thArr <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span>tb<span class=\"k\">,</span> <span class=\"s\">\"th\"</span><span class=\"k\">),</span>","                        captionHeight<span class=\"k\">,</span> thHeight<span class=\"k\">;</span>","","                    <span class=\"k\">if</span> <span class=\"k\">(</span>captionArr<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                        captionHeight <span class=\"k\">=</span> captionArr<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>offsetHeight<span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>thArr<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                        thHeight <span class=\"k\">=</span> thArr<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>offsetHeight<span class=\"k\">;</span>","                    <span class=\"k\">}</span>","","                    sumHeight <span class=\"k\">=</span> tb<span class=\"k\">.</span>offsetHeight <span class=\"k\">-</span> <span class=\"k\">(</span>captionHeight <span class=\"k\">||</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">-</span> <span class=\"k\">(</span>thHeight <span class=\"k\">||</span> <span class=\"s\">0</span><span class=\"k\">);</span>","                    rowNum <span class=\"k\">=</span> thArr<span class=\"k\">.</span>length <span class=\"k\">==</span> <span class=\"s\">0</span> <span class=\"k\">?</span> ut<span class=\"k\">.</span>rowsNum <span class=\"k\">:</span> <span class=\"k\">(</span>ut<span class=\"k\">.</span>rowsNum <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">);</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> begin <span class=\"k\">=</span> ut<span class=\"k\">.</span>cellsRange<span class=\"k\">.</span>beginRowIndex<span class=\"k\">,</span>","                        end <span class=\"k\">=</span> ut<span class=\"k\">.</span>cellsRange<span class=\"k\">.</span>endRowIndex<span class=\"k\">,</span>","                        count <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","                        trs <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span>tb<span class=\"k\">,</span> <span class=\"s\">\"tr\"</span><span class=\"k\">);</span>","                    <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> begin<span class=\"k\">;</span> i <span class=\"k\">&lt;=</span> end<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","                        sumHeight <span class=\"k\">+=</span> trs<span class=\"k\">[</span>i<span class=\"k\">].</span>offsetHeight<span class=\"k\">;</span>","                        count <span class=\"k\">+=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                    rowNum <span class=\"k\">=</span> count<span class=\"k\">;</span>","                <span class=\"k\">}</span>","                <span class=\"c\">//ie8&#19979;&#26159;&#28151;&#26434;&#27169;&#24335;</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>browser<span class=\"k\">.</span>ie <span class=\"k\">&amp;&amp;</span> browser<span class=\"k\">.</span>version <span class=\"k\">&lt;</span> <span class=\"s\">9</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                    averageHeight <span class=\"k\">=</span> Math<span class=\"k\">.</span>ceil<span class=\"k\">(</span>sumHeight <span class=\"k\">/</span> rowNum<span class=\"k\">);</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    averageHeight <span class=\"k\">=</span> Math<span class=\"k\">.</span>ceil<span class=\"k\">(</span>sumHeight <span class=\"k\">/</span> rowNum<span class=\"k\">)</span> <span class=\"k\">-</span> tbAttr<span class=\"k\">.</span>tdBorder <span class=\"k\">*</span> <span class=\"s\">2</span> <span class=\"k\">-</span> tdpadding <span class=\"k\">*</span> <span class=\"s\">2</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","                <span class=\"k\">return</span> averageHeight<span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">function</span> setAverageHeight<span class=\"k\">(</span>averageHeight<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> cells <span class=\"k\">=</span> ut<span class=\"k\">.</span>isFullCol<span class=\"k\">()</span> <span class=\"k\">?</span> domUtils<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span>ut<span class=\"k\">.</span>table<span class=\"k\">,</span> <span class=\"s\">\"td\"</span><span class=\"k\">)</span> <span class=\"k\">:</span> ut<span class=\"k\">.</span>selectedTds<span class=\"k\">;</span>","                utils<span class=\"k\">.</span>each<span class=\"k\">(</span>cells<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>node<span class=\"k\">.</span>rowSpan <span class=\"k\">==</span> <span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                        node<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">\"height\"</span><span class=\"k\">,</span> averageHeight<span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>ut <span class=\"k\">&amp;&amp;</span> ut<span class=\"k\">.</span>selectedTds<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","                setAverageHeight<span class=\"k\">(</span>getAverageHeight<span class=\"k\">());</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"c\">//&#21333;&#20803;&#26684;&#23545;&#40784;&#26041;&#24335;</span>","    UE<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">'cellalignment'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","        queryCommandState<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> getTableItemsByRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>table <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"k\">-</span><span class=\"s\">1</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        execCommand<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>cmd<span class=\"k\">,</span> data<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> me <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">,</span>","                ut <span class=\"k\">=</span> getUETableBySelected<span class=\"k\">(</span>me<span class=\"k\">);</span>","","            <span class=\"k\">if</span> <span class=\"k\">(!</span>ut<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> start <span class=\"k\">=</span> me<span class=\"k\">.</span>selection<span class=\"k\">.</span>getStart<span class=\"k\">(),</span>","                    cell <span class=\"k\">=</span> start <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>start<span class=\"k\">,</span> <span class=\"k\">[</span><span class=\"s\">\"td\"</span><span class=\"k\">,</span> <span class=\"s\">\"th\"</span><span class=\"k\">,</span> <span class=\"s\">\"caption\"</span><span class=\"k\">],</span> <span class=\"k\">true</span><span class=\"k\">);</span>","                <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"s\">/caption/ig</span><span class=\"k\">.</span>test<span class=\"k\">(</span>cell<span class=\"k\">.</span>tagName<span class=\"k\">))</span> <span class=\"k\">{</span>","                    domUtils<span class=\"k\">.</span>setAttributes<span class=\"k\">(</span>cell<span class=\"k\">,</span> data<span class=\"k\">);</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    cell<span class=\"k\">.</span>style<span class=\"k\">.</span>textAlign <span class=\"k\">=</span> data<span class=\"k\">.</span>align<span class=\"k\">;</span>","                    cell<span class=\"k\">.</span>style<span class=\"k\">.</span>verticalAlign <span class=\"k\">=</span> data<span class=\"k\">.</span>vAlign<span class=\"k\">;</span>","                <span class=\"k\">}</span>","                me<span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">().</span>setCursor<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                utils<span class=\"k\">.</span>each<span class=\"k\">(</span>ut<span class=\"k\">.</span>selectedTds<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>cell<span class=\"k\">)</span> <span class=\"k\">{</span>","                    domUtils<span class=\"k\">.</span>setAttributes<span class=\"k\">(</span>cell<span class=\"k\">,</span> data<span class=\"k\">);</span>","                <span class=\"k\">}</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"c\">//&#34920;&#26684;&#23545;&#40784;&#26041;&#24335;</span>","    UE<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">'tablealignment'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","        queryCommandState<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> getTableItemsByRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>table <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"k\">-</span><span class=\"s\">1</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        execCommand<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>cmd<span class=\"k\">,</span> data<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> me <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">,</span>","                start <span class=\"k\">=</span> me<span class=\"k\">.</span>selection<span class=\"k\">.</span>getStart<span class=\"k\">(),</span>","                table <span class=\"k\">=</span> start <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>start<span class=\"k\">,</span> <span class=\"k\">[</span><span class=\"s\">\"table\"</span><span class=\"k\">],</span> <span class=\"k\">true</span><span class=\"k\">);</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>table<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> obj <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","                obj<span class=\"k\">[</span>data<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]]</span> <span class=\"k\">=</span> data<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">];</span>","                table<span class=\"k\">.</span>style<span class=\"k\">[</span>utils<span class=\"k\">.</span>cssStyleToDomStyle<span class=\"k\">(</span><span class=\"s\">\"float\"</span><span class=\"k\">)]</span> <span class=\"k\">=</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","                table<span class=\"k\">.</span>style<span class=\"k\">.</span>margin <span class=\"k\">=</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","                domUtils<span class=\"k\">.</span>setStyles<span class=\"k\">(</span>table<span class=\"k\">,</span> obj<span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"c\">//&#34920;&#26684;&#23646;&#24615;</span>","    UE<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">'edittable'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","        queryCommandState<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> getTableItemsByRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>table <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"k\">-</span><span class=\"s\">1</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        execCommand<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>cmd<span class=\"k\">,</span> color<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> rng <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">(),</span>","                table <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>rng<span class=\"k\">.</span>startContainer<span class=\"k\">,</span> <span class=\"s\">'table'</span><span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>table<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> arr <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span>table<span class=\"k\">,</span> <span class=\"s\">\"td\"</span><span class=\"k\">).</span>concat<span class=\"k\">(</span>","                    domUtils<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span>table<span class=\"k\">,</span> <span class=\"s\">\"th\"</span><span class=\"k\">),</span>","                    domUtils<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span>table<span class=\"k\">,</span> <span class=\"s\">\"caption\"</span><span class=\"k\">)</span>","                <span class=\"k\">);</span>","                utils<span class=\"k\">.</span>each<span class=\"k\">(</span>arr<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","                    node<span class=\"k\">.</span>style<span class=\"k\">.</span>borderColor <span class=\"k\">=</span> color<span class=\"k\">;</span>","                <span class=\"k\">}</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"c\">//&#21333;&#20803;&#26684;&#23646;&#24615;</span>","    UE<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">'edittd'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","        queryCommandState<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> getTableItemsByRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>table <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"k\">-</span><span class=\"s\">1</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        execCommand<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>cmd<span class=\"k\">,</span> bkColor<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> me <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">,</span>","                ut <span class=\"k\">=</span> getUETableBySelected<span class=\"k\">(</span>me<span class=\"k\">);</span>","","            <span class=\"k\">if</span> <span class=\"k\">(!</span>ut<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> start <span class=\"k\">=</span> me<span class=\"k\">.</span>selection<span class=\"k\">.</span>getStart<span class=\"k\">(),</span>","                    cell <span class=\"k\">=</span> start <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>start<span class=\"k\">,</span> <span class=\"k\">[</span><span class=\"s\">\"td\"</span><span class=\"k\">,</span> <span class=\"s\">\"th\"</span><span class=\"k\">,</span> <span class=\"s\">\"caption\"</span><span class=\"k\">],</span> <span class=\"k\">true</span><span class=\"k\">);</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>cell<span class=\"k\">)</span> <span class=\"k\">{</span>","                    cell<span class=\"k\">.</span>style<span class=\"k\">.</span>backgroundColor <span class=\"k\">=</span> bkColor<span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                utils<span class=\"k\">.</span>each<span class=\"k\">(</span>ut<span class=\"k\">.</span>selectedTds<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>cell<span class=\"k\">)</span> <span class=\"k\">{</span>","                    cell<span class=\"k\">.</span>style<span class=\"k\">.</span>backgroundColor <span class=\"k\">=</span> bkColor<span class=\"k\">;</span>","                <span class=\"k\">}</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","    UE<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">'sorttable'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","        queryCommandState<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> me <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">,</span>","                tableItems <span class=\"k\">=</span> getTableItemsByRange<span class=\"k\">(</span>me<span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span>tableItems<span class=\"k\">.</span>cell<span class=\"k\">)</span> <span class=\"k\">return</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","            <span class=\"k\">var</span> table <span class=\"k\">=</span> tableItems<span class=\"k\">.</span>table<span class=\"k\">,</span>","                cells <span class=\"k\">=</span> table<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">\"td\"</span><span class=\"k\">);</span>","            <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> cell<span class=\"k\">;</span> cell <span class=\"k\">=</span> cells<span class=\"k\">[</span>i<span class=\"k\">++];)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>cell<span class=\"k\">.</span>rowSpan <span class=\"k\">!=</span> <span class=\"s\">1</span> <span class=\"k\">||</span> cell<span class=\"k\">.</span>colSpan <span class=\"k\">!=</span> <span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">return</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","            <span class=\"k\">return</span> <span class=\"s\">0</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        execCommand<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>cmd<span class=\"k\">,</span> fn<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> me <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">,</span>","                range <span class=\"k\">=</span> me<span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">(),</span>","                bk <span class=\"k\">=</span> range<span class=\"k\">.</span>createBookmark<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">),</span>","                tableItems <span class=\"k\">=</span> getTableItemsByRange<span class=\"k\">(</span>me<span class=\"k\">),</span>","                cell <span class=\"k\">=</span> tableItems<span class=\"k\">.</span>cell<span class=\"k\">,</span>","                ut <span class=\"k\">=</span> getUETable<span class=\"k\">(</span>tableItems<span class=\"k\">.</span>table<span class=\"k\">),</span>","                cellInfo <span class=\"k\">=</span> ut<span class=\"k\">.</span>getCellInfo<span class=\"k\">(</span>cell<span class=\"k\">);</span>","            ut<span class=\"k\">.</span>sortTable<span class=\"k\">(</span>cellInfo<span class=\"k\">.</span>cellIndex<span class=\"k\">,</span> fn<span class=\"k\">);</span>","            range<span class=\"k\">.</span>moveToBookmark<span class=\"k\">(</span>bk<span class=\"k\">).</span>select<span class=\"k\">();</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    UE<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">\"enablesort\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> UE<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">\"disablesort\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","        queryCommandState<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> getTableItemsByRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>table <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        execCommand<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>cmd<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> table <span class=\"k\">=</span> getTableItemsByRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>table<span class=\"k\">;</span>","            table<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">\"data-sort\"</span><span class=\"k\">,</span> cmd <span class=\"k\">==</span> <span class=\"s\">\"enablesort\"</span> <span class=\"k\">?</span> <span class=\"s\">\"sortEnabled\"</span> <span class=\"k\">:</span> <span class=\"s\">\"sortDisabled\"</span><span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","    UE<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">\"settablebackground\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","        queryCommandState<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> getSelectedArr<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>length<span class=\"k\">&gt;</span><span class=\"s\">1</span><span class=\"k\">?</span><span class=\"s\">0</span><span class=\"k\">:-</span><span class=\"s\">1</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        execCommand<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>cmd<span class=\"k\">,</span> value<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> table<span class=\"k\">,</span> cells<span class=\"k\">,</span> ut<span class=\"k\">;</span>","            cells <span class=\"k\">=</span> getSelectedArr<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","            ut <span class=\"k\">=</span> getUETable<span class=\"k\">(</span>cells<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]);</span>","            ut<span class=\"k\">.</span>setBackground<span class=\"k\">(</span>cells<span class=\"k\">,</span> value<span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    UE<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">\"cleartablebackground\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","        queryCommandState<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","            <span class=\"k\">var</span> cells <span class=\"k\">=</span> getSelectedArr<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","            <span class=\"k\">if</span><span class=\"k\">(!</span>cells<span class=\"k\">.</span>length<span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","            <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> i<span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>cell<span class=\"k\">;</span>cell <span class=\"k\">=</span> cells<span class=\"k\">[</span>i<span class=\"k\">++];)</span><span class=\"k\">{</span>","                <span class=\"k\">if</span><span class=\"k\">(</span>cell<span class=\"k\">.</span>style<span class=\"k\">.</span>backgroundColor<span class=\"k\">!==</span><span class=\"s\">\"\"</span><span class=\"k\">)</span> <span class=\"k\">return</span> <span class=\"s\">0</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","            <span class=\"k\">return</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        execCommand<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> cells <span class=\"k\">=</span> getSelectedArr<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">),</span>","                ut <span class=\"k\">=</span> getUETable<span class=\"k\">(</span>cells<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]);</span>","            ut<span class=\"k\">.</span>removeBackground<span class=\"k\">(</span>cells<span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    UE<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">\"interlacetable\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> UE<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">\"uninterlacetable\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","        queryCommandState<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>cmd<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">var</span> table <span class=\"k\">=</span> getTableItemsByRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>table<span class=\"k\">;</span>","            <span class=\"k\">if</span><span class=\"k\">(!</span>table<span class=\"k\">)</span> <span class=\"k\">return</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","            <span class=\"k\">var</span> interlaced <span class=\"k\">=</span> table<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"interlaced\"</span><span class=\"k\">);</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>cmd <span class=\"k\">==</span><span class=\"s\">\"interlacetable\"</span><span class=\"k\">)</span><span class=\"k\">{</span>","                <span class=\"c\">//&#26159;&#21542;&#38656;&#35201;&#24453;&#23450;&#65292;&#22914;&#26524;&#35774;&#32622;&#65292;&#21017;&#21629;&#20196;&#21482;&#33021;&#21333;&#27425;&#25191;&#34892;&#25104;&#21151;&#65292;&#20294;&#21453;&#23556;&#20855;&#22791;toggle&#25928;&#26524;&#65307;&#21542;&#21017;&#21487;&#20197;&#35206;&#30422;&#21069;&#27425;&#21629;&#20196;&#65292;&#20294;&#21453;&#23556;&#23558;&#19981;&#23384;&#22312;toggle&#25928;&#26524;</span>","                <span class=\"k\">return</span> <span class=\"c\">/*(interlaced === \"enabled\") ? -1:*/</span><span class=\"s\">0</span><span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","                <span class=\"k\">return</span> <span class=\"k\">(!</span>interlaced<span class=\"k\">||</span>interlaced <span class=\"k\">===</span> <span class=\"s\">\"disabled\"</span><span class=\"k\">)</span> <span class=\"k\">?</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">:</span><span class=\"s\">0</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        execCommand<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>cmd<span class=\"k\">,</span>classList<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> table <span class=\"k\">=</span> getTableItemsByRange<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>table<span class=\"k\">;</span>","            <span class=\"k\">if</span><span class=\"k\">(</span> cmd <span class=\"k\">==</span> <span class=\"s\">\"interlacetable\"</span> <span class=\"k\">)</span><span class=\"k\">{</span>","                table<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">\"interlaced\"</span><span class=\"k\">,</span><span class=\"s\">\"enabled\"</span><span class=\"k\">);</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">\"interlacetable\"</span><span class=\"k\">,</span>table<span class=\"k\">,</span>classList<span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","                table<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">\"interlaced\"</span><span class=\"k\">,</span><span class=\"s\">\"disabled\"</span><span class=\"k\">);</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">\"uninterlacetable\"</span><span class=\"k\">,</span>table<span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"k\">function</span> resetTdWidth<span class=\"k\">(</span>table<span class=\"k\">,</span> editor<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> tds <span class=\"k\">=</span> table<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">\"td\"</span><span class=\"k\">);</span>","        utils<span class=\"k\">.</span>each<span class=\"k\">(</span>tds<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>td<span class=\"k\">)</span> <span class=\"k\">{</span>","            td<span class=\"k\">.</span>removeAttribute<span class=\"k\">(</span><span class=\"s\">\"width\"</span><span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","        table<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">'width'</span><span class=\"k\">,</span> getTableWidth<span class=\"k\">(</span>editor<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">,</span> getDefaultValue<span class=\"k\">(</span>editor<span class=\"k\">,</span> table<span class=\"k\">)));</span>","        setTimeout<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            utils<span class=\"k\">.</span>each<span class=\"k\">(</span>tds<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>td<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">(</span>td<span class=\"k\">.</span>colSpan <span class=\"k\">==</span> <span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> td<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">\"width\"</span><span class=\"k\">,</span> td<span class=\"k\">.</span>offsetWidth <span class=\"k\">+</span> <span class=\"s\">\"\"</span><span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">)</span>","        <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> getTableWidth<span class=\"k\">(</span>editor<span class=\"k\">,</span> needIEHack<span class=\"k\">,</span> defaultValue<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> body <span class=\"k\">=</span> editor<span class=\"k\">.</span>body<span class=\"k\">;</span>","        <span class=\"k\">return</span> body<span class=\"k\">.</span>offsetWidth <span class=\"k\">-</span> <span class=\"k\">(</span>needIEHack <span class=\"k\">?</span> parseInt<span class=\"k\">(</span>domUtils<span class=\"k\">.</span>getComputedStyle<span class=\"k\">(</span>body<span class=\"k\">,</span> <span class=\"s\">'margin-left'</span><span class=\"k\">),</span> <span class=\"s\">10</span><span class=\"k\">)</span> <span class=\"k\">*</span> <span class=\"s\">2</span> <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">-</span> defaultValue<span class=\"k\">.</span>tableBorder <span class=\"k\">*</span> <span class=\"s\">2</span> <span class=\"k\">-</span> <span class=\"k\">(</span>editor<span class=\"k\">.</span>options<span class=\"k\">.</span>offsetWidth <span class=\"k\">||</span> <span class=\"s\">0</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> getSelectedArr<span class=\"k\">(</span>editor<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> cell <span class=\"k\">=</span> getTableItemsByRange<span class=\"k\">(</span>editor<span class=\"k\">).</span>cell<span class=\"k\">,</span>","            ut <span class=\"k\">=</span> getUETable<span class=\"k\">(</span>cell<span class=\"k\">);</span>","        <span class=\"k\">return</span> ut<span class=\"k\">.</span>selectedTds<span class=\"k\">.</span>length <span class=\"k\">?</span> ut<span class=\"k\">.</span>selectedTds <span class=\"k\">:</span> <span class=\"k\">[</span>cell<span class=\"k\">];</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">)();</span>"];
_$jscoverage['plugins/table.cmds.js'][8]++;
;
_$jscoverage['plugins/table.cmds.js'][9]++;
(function () {
  _$jscoverage['plugins/table.cmds.js'][10]++;
  var UT = UE.UETable, getTableItemsByRange = (function (editor) {
  _$jscoverage['plugins/table.cmds.js'][12]++;
  return UT.getTableItemsByRange(editor);
}), getUETableBySelected = (function (editor) {
  _$jscoverage['plugins/table.cmds.js'][15]++;
  return UT.getUETableBySelected(editor);
}), getDefaultValue = (function (editor, table) {
  _$jscoverage['plugins/table.cmds.js'][18]++;
  return UT.getDefaultValue(editor, table);
}), getUETable = (function (tdOrTable) {
  _$jscoverage['plugins/table.cmds.js'][21]++;
  return UT.getUETable(tdOrTable);
});
  _$jscoverage['plugins/table.cmds.js'][25]++;
  UE.commands.inserttable = {queryCommandState: (function () {
  _$jscoverage['plugins/table.cmds.js'][27]++;
  return (getTableItemsByRange(this).table? -1: 0);
}), execCommand: (function (cmd, opt) {
  _$jscoverage['plugins/table.cmds.js'][30]++;
  function createTable(opt, tableWidth, tdWidth) {
    _$jscoverage['plugins/table.cmds.js'][31]++;
    var html = [], rowsNum = opt.numRows, colsNum = opt.numCols;
    _$jscoverage['plugins/table.cmds.js'][34]++;
    for (var r = 0; (r < rowsNum); (r++)) {
      _$jscoverage['plugins/table.cmds.js'][35]++;
      html.push("<tr>");
      _$jscoverage['plugins/table.cmds.js'][36]++;
      for (var c = 0; (c < colsNum); (c++)) {
        _$jscoverage['plugins/table.cmds.js'][37]++;
        html.push(("<td width=\"" + tdWidth + "\"  vAlign=\"" + opt.tdvalign + "\" >" + (browser.ie? domUtils.fillChar: "<br/>") + "</td>"));
}
      _$jscoverage['plugins/table.cmds.js'][39]++;
      html.push("</tr>");
}
    _$jscoverage['plugins/table.cmds.js'][41]++;
    return ("<table width=\"" + tableWidth + "\"   ><tbody>" + html.join("") + "</tbody></table>");
}
  _$jscoverage['plugins/table.cmds.js'][44]++;
  if ((! opt)) {
    _$jscoverage['plugins/table.cmds.js'][45]++;
    opt = utils.extend({}, {numCols: this.options.defaultCols, numRows: this.options.defaultRows, tdvalign: this.options.tdvalign});
  }
  _$jscoverage['plugins/table.cmds.js'][52]++;
  var range = this.selection.getRange(), start = range.startContainer, firstParentBlock = domUtils.findParent(start, (function (node) {
  _$jscoverage['plugins/table.cmds.js'][55]++;
  return domUtils.isBlockElm(node);
}), true);
  _$jscoverage['plugins/table.cmds.js'][57]++;
  var me = this, defaultValue = getDefaultValue(me), tableWidth = (getTableWidth(me, true, defaultValue) - (firstParentBlock? parseInt(domUtils.getXY(firstParentBlock).x, 10): 0)), tdWidth = Math.floor(((tableWidth / opt.numCols) - (defaultValue.tdPadding * 2) - defaultValue.tdBorder));
  _$jscoverage['plugins/table.cmds.js'][62]++;
  ((! opt.tdvalign) && (opt.tdvalign = me.options.tdvalign));
  _$jscoverage['plugins/table.cmds.js'][63]++;
  me.execCommand("inserthtml", createTable(opt, tableWidth, tdWidth));
})};
  _$jscoverage['plugins/table.cmds.js'][67]++;
  UE.commands.insertparagraphbeforetable = {queryCommandState: (function () {
  _$jscoverage['plugins/table.cmds.js'][69]++;
  return (getTableItemsByRange(this).cell? 0: -1);
}), execCommand: (function () {
  _$jscoverage['plugins/table.cmds.js'][72]++;
  var table = getTableItemsByRange(this).table;
  _$jscoverage['plugins/table.cmds.js'][73]++;
  if (table) {
    _$jscoverage['plugins/table.cmds.js'][74]++;
    var p = this.document.createElement("p");
    _$jscoverage['plugins/table.cmds.js'][75]++;
    p.innerHTML = (browser.ie? "&nbsp;": "<br />");
    _$jscoverage['plugins/table.cmds.js'][76]++;
    table.parentNode.insertBefore(p, table);
    _$jscoverage['plugins/table.cmds.js'][77]++;
    this.selection.getRange().setStart(p, 0).setCursor();
  }
})};
  _$jscoverage['plugins/table.cmds.js'][82]++;
  UE.commands.deletetable = {queryCommandState: (function () {
  _$jscoverage['plugins/table.cmds.js'][84]++;
  var rng = this.selection.getRange();
  _$jscoverage['plugins/table.cmds.js'][85]++;
  return (domUtils.findParentByTagName(rng.startContainer, "table", true)? 0: -1);
}), execCommand: (function (cmd, table) {
  _$jscoverage['plugins/table.cmds.js'][88]++;
  var rng = this.selection.getRange();
  _$jscoverage['plugins/table.cmds.js'][89]++;
  table = (table || domUtils.findParentByTagName(rng.startContainer, "table", true));
  _$jscoverage['plugins/table.cmds.js'][90]++;
  if (table) {
    _$jscoverage['plugins/table.cmds.js'][91]++;
    var next = table.nextSibling;
    _$jscoverage['plugins/table.cmds.js'][92]++;
    if ((! next)) {
      _$jscoverage['plugins/table.cmds.js'][93]++;
      next = domUtils.createElement(this.document, "p", {"innerHTML": (browser.ie? domUtils.fillChar: "<br/>")});
      _$jscoverage['plugins/table.cmds.js'][96]++;
      table.parentNode.insertBefore(next, table);
    }
    _$jscoverage['plugins/table.cmds.js'][98]++;
    domUtils.remove(table);
    _$jscoverage['plugins/table.cmds.js'][99]++;
    rng = this.selection.getRange();
    _$jscoverage['plugins/table.cmds.js'][100]++;
    if ((next.nodeType == 3)) {
      _$jscoverage['plugins/table.cmds.js'][101]++;
      rng.setStartBefore(next);
    }
    else {
      _$jscoverage['plugins/table.cmds.js'][103]++;
      rng.setStart(next, 0);
    }
    _$jscoverage['plugins/table.cmds.js'][105]++;
    rng.setCursor(false, true);
    _$jscoverage['plugins/table.cmds.js'][106]++;
    this.fireEvent("tablehasdeleted");
  }
})};
  _$jscoverage['plugins/table.cmds.js'][112]++;
  UE.commands.cellalign = {queryCommandState: (function () {
  _$jscoverage['plugins/table.cmds.js'][114]++;
  return (getSelectedArr(this).length? 0: -1);
}), execCommand: (function (cmd, align) {
  _$jscoverage['plugins/table.cmds.js'][117]++;
  var selectedTds = getSelectedArr(this);
  _$jscoverage['plugins/table.cmds.js'][118]++;
  if (selectedTds.length) {
    _$jscoverage['plugins/table.cmds.js'][119]++;
    for (var i = 0, ci; (ci = selectedTds[(i++)]);) {
      _$jscoverage['plugins/table.cmds.js'][120]++;
      ci.setAttribute("align", align);
}
  }
})};
  _$jscoverage['plugins/table.cmds.js'][125]++;
  UE.commands.cellvalign = {queryCommandState: (function () {
  _$jscoverage['plugins/table.cmds.js'][127]++;
  return (getSelectedArr(this).length? 0: -1);
}), execCommand: (function (cmd, valign) {
  _$jscoverage['plugins/table.cmds.js'][130]++;
  var selectedTds = getSelectedArr(this);
  _$jscoverage['plugins/table.cmds.js'][131]++;
  if (selectedTds.length) {
    _$jscoverage['plugins/table.cmds.js'][132]++;
    for (var i = 0, ci; (ci = selectedTds[(i++)]);) {
      _$jscoverage['plugins/table.cmds.js'][133]++;
      ci.setAttribute("vAlign", valign);
}
  }
})};
  _$jscoverage['plugins/table.cmds.js'][138]++;
  UE.commands.insertcaption = {queryCommandState: (function () {
  _$jscoverage['plugins/table.cmds.js'][140]++;
  var table = getTableItemsByRange(this).table;
  _$jscoverage['plugins/table.cmds.js'][141]++;
  if (table) {
    _$jscoverage['plugins/table.cmds.js'][142]++;
    return ((table.getElementsByTagName("caption").length == 0)? 1: -1);
  }
  _$jscoverage['plugins/table.cmds.js'][144]++;
  return -1;
}), execCommand: (function () {
  _$jscoverage['plugins/table.cmds.js'][147]++;
  var table = getTableItemsByRange(this).table;
  _$jscoverage['plugins/table.cmds.js'][148]++;
  if (table) {
    _$jscoverage['plugins/table.cmds.js'][149]++;
    var caption = this.document.createElement("caption");
    _$jscoverage['plugins/table.cmds.js'][150]++;
    caption.innerHTML = (browser.ie? domUtils.fillChar: "<br/>");
    _$jscoverage['plugins/table.cmds.js'][151]++;
    table.insertBefore(caption, table.firstChild);
    _$jscoverage['plugins/table.cmds.js'][152]++;
    var range = this.selection.getRange();
    _$jscoverage['plugins/table.cmds.js'][153]++;
    range.setStart(caption, 0).setCursor();
  }
})};
  _$jscoverage['plugins/table.cmds.js'][158]++;
  UE.commands.deletecaption = {queryCommandState: (function () {
  _$jscoverage['plugins/table.cmds.js'][160]++;
  var rng = this.selection.getRange(), table = domUtils.findParentByTagName(rng.startContainer, "table");
  _$jscoverage['plugins/table.cmds.js'][162]++;
  if (table) {
    _$jscoverage['plugins/table.cmds.js'][163]++;
    return ((table.getElementsByTagName("caption").length == 0)? -1: 1);
  }
  _$jscoverage['plugins/table.cmds.js'][165]++;
  return -1;
}), execCommand: (function () {
  _$jscoverage['plugins/table.cmds.js'][168]++;
  var rng = this.selection.getRange(), table = domUtils.findParentByTagName(rng.startContainer, "table");
  _$jscoverage['plugins/table.cmds.js'][170]++;
  if (table) {
    _$jscoverage['plugins/table.cmds.js'][171]++;
    domUtils.remove(table.getElementsByTagName("caption")[0]);
    _$jscoverage['plugins/table.cmds.js'][172]++;
    var range = this.selection.getRange();
    _$jscoverage['plugins/table.cmds.js'][173]++;
    range.setStart(table.rows[0].cells[0], 0).setCursor();
  }
})};
  _$jscoverage['plugins/table.cmds.js'][178]++;
  UE.commands.inserttitle = {queryCommandState: (function () {
  _$jscoverage['plugins/table.cmds.js'][180]++;
  var table = getTableItemsByRange(this).table;
  _$jscoverage['plugins/table.cmds.js'][181]++;
  if (table) {
    _$jscoverage['plugins/table.cmds.js'][182]++;
    var firstRow = table.rows[0];
    _$jscoverage['plugins/table.cmds.js'][183]++;
    return ((firstRow.getElementsByTagName("th").length == 0)? 0: -1);
  }
  _$jscoverage['plugins/table.cmds.js'][185]++;
  return -1;
}), execCommand: (function () {
  _$jscoverage['plugins/table.cmds.js'][188]++;
  var table = getTableItemsByRange(this).table;
  _$jscoverage['plugins/table.cmds.js'][189]++;
  if (table) {
    _$jscoverage['plugins/table.cmds.js'][190]++;
    getUETable(table).insertRow(0, "th");
  }
  _$jscoverage['plugins/table.cmds.js'][192]++;
  var th = table.getElementsByTagName("th")[0];
  _$jscoverage['plugins/table.cmds.js'][193]++;
  this.selection.getRange().setStart(th, 0).setCursor(false, true);
})};
  _$jscoverage['plugins/table.cmds.js'][196]++;
  UE.commands.deletetitle = {queryCommandState: (function () {
  _$jscoverage['plugins/table.cmds.js'][198]++;
  var table = getTableItemsByRange(this).table;
  _$jscoverage['plugins/table.cmds.js'][199]++;
  if (table) {
    _$jscoverage['plugins/table.cmds.js'][200]++;
    var firstRow = table.rows[0];
    _$jscoverage['plugins/table.cmds.js'][201]++;
    return (firstRow.getElementsByTagName("th").length? 0: -1);
  }
  _$jscoverage['plugins/table.cmds.js'][203]++;
  return -1;
}), execCommand: (function () {
  _$jscoverage['plugins/table.cmds.js'][206]++;
  var table = getTableItemsByRange(this).table;
  _$jscoverage['plugins/table.cmds.js'][207]++;
  if (table) {
    _$jscoverage['plugins/table.cmds.js'][208]++;
    domUtils.remove(table.rows[0]);
  }
  _$jscoverage['plugins/table.cmds.js'][210]++;
  var td = table.getElementsByTagName("td")[0];
  _$jscoverage['plugins/table.cmds.js'][211]++;
  this.selection.getRange().setStart(td, 0).setCursor(false, true);
})};
  _$jscoverage['plugins/table.cmds.js'][215]++;
  UE.commands.mergeright = {queryCommandState: (function (cmd) {
  _$jscoverage['plugins/table.cmds.js'][217]++;
  var tableItems = getTableItemsByRange(this);
  _$jscoverage['plugins/table.cmds.js'][218]++;
  if ((! tableItems.cell)) {
    _$jscoverage['plugins/table.cmds.js'][218]++;
    return -1;
  }
  _$jscoverage['plugins/table.cmds.js'][219]++;
  var ut = getUETable(tableItems.table);
  _$jscoverage['plugins/table.cmds.js'][220]++;
  if (ut.selectedTds.length) {
    _$jscoverage['plugins/table.cmds.js'][220]++;
    return -1;
  }
  _$jscoverage['plugins/table.cmds.js'][221]++;
  var cellInfo = ut.getCellInfo(tableItems.cell), rightColIndex = (cellInfo.colIndex + cellInfo.colSpan);
  _$jscoverage['plugins/table.cmds.js'][223]++;
  if ((rightColIndex >= ut.colsNum)) {
    _$jscoverage['plugins/table.cmds.js'][223]++;
    return -1;
  }
  _$jscoverage['plugins/table.cmds.js'][224]++;
  var rightCellInfo = ut.indexTable[cellInfo.rowIndex][rightColIndex];
  _$jscoverage['plugins/table.cmds.js'][225]++;
  return (((rightCellInfo.rowIndex == cellInfo.rowIndex) && (rightCellInfo.rowSpan == cellInfo.rowSpan))? 0: -1);
}), execCommand: (function (cmd) {
  _$jscoverage['plugins/table.cmds.js'][229]++;
  var rng = this.selection.getRange(), bk = rng.createBookmark(true);
  _$jscoverage['plugins/table.cmds.js'][231]++;
  var cell = getTableItemsByRange(this).cell, ut = getUETable(cell);
  _$jscoverage['plugins/table.cmds.js'][233]++;
  ut.mergeRight(cell);
  _$jscoverage['plugins/table.cmds.js'][234]++;
  rng.moveToBookmark(bk).select();
})};
  _$jscoverage['plugins/table.cmds.js'][237]++;
  UE.commands.mergedown = {queryCommandState: (function (cmd) {
  _$jscoverage['plugins/table.cmds.js'][239]++;
  var tableItems = getTableItemsByRange(this), cell = tableItems.cell;
  _$jscoverage['plugins/table.cmds.js'][241]++;
  if (((! cell) || (cell.tagName == "TH"))) {
    _$jscoverage['plugins/table.cmds.js'][241]++;
    return -1;
  }
  _$jscoverage['plugins/table.cmds.js'][242]++;
  var ut = getUETable(tableItems.table);
  _$jscoverage['plugins/table.cmds.js'][243]++;
  if (ut.selectedTds.length) {
    _$jscoverage['plugins/table.cmds.js'][243]++;
    return -1;
  }
  _$jscoverage['plugins/table.cmds.js'][244]++;
  var cellInfo = ut.getCellInfo(tableItems.cell), downRowIndex = (cellInfo.rowIndex + cellInfo.rowSpan);
  _$jscoverage['plugins/table.cmds.js'][247]++;
  if ((downRowIndex >= ut.rowsNum)) {
    _$jscoverage['plugins/table.cmds.js'][247]++;
    return -1;
  }
  _$jscoverage['plugins/table.cmds.js'][248]++;
  var downCellInfo = ut.indexTable[downRowIndex][cellInfo.colIndex];
  _$jscoverage['plugins/table.cmds.js'][250]++;
  return (((downCellInfo.colIndex == cellInfo.colIndex) && (downCellInfo.colSpan == cellInfo.colSpan) && (tableItems.cell.tagName !== "TH"))? 0: -1);
}), execCommand: (function () {
  _$jscoverage['plugins/table.cmds.js'][254]++;
  var rng = this.selection.getRange(), bk = rng.createBookmark(true);
  _$jscoverage['plugins/table.cmds.js'][256]++;
  var cell = getTableItemsByRange(this).cell, ut = getUETable(cell);
  _$jscoverage['plugins/table.cmds.js'][258]++;
  ut.mergeDown(cell);
  _$jscoverage['plugins/table.cmds.js'][259]++;
  rng.moveToBookmark(bk).select();
})};
  _$jscoverage['plugins/table.cmds.js'][262]++;
  UE.commands.mergecells = {queryCommandState: (function () {
  _$jscoverage['plugins/table.cmds.js'][264]++;
  return (getUETableBySelected(this)? 0: -1);
}), execCommand: (function () {
  _$jscoverage['plugins/table.cmds.js'][267]++;
  var ut = getUETableBySelected(this);
  _$jscoverage['plugins/table.cmds.js'][268]++;
  if ((ut && ut.selectedTds.length)) {
    _$jscoverage['plugins/table.cmds.js'][269]++;
    var cell = ut.selectedTds[0];
    _$jscoverage['plugins/table.cmds.js'][270]++;
    getUETableBySelected(this).mergeRange();
    _$jscoverage['plugins/table.cmds.js'][271]++;
    var rng = this.selection.getRange();
    _$jscoverage['plugins/table.cmds.js'][272]++;
    if (domUtils.isEmptyBlock(cell)) {
      _$jscoverage['plugins/table.cmds.js'][273]++;
      rng.setStart(cell, 0).collapse(true);
    }
    else {
      _$jscoverage['plugins/table.cmds.js'][275]++;
      rng.selectNodeContents(cell);
    }
    _$jscoverage['plugins/table.cmds.js'][277]++;
    rng.select();
  }
})};
  _$jscoverage['plugins/table.cmds.js'][283]++;
  UE.commands.insertrow = {queryCommandState: (function () {
  _$jscoverage['plugins/table.cmds.js'][285]++;
  var tableItems = getTableItemsByRange(this), cell = tableItems.cell;
  _$jscoverage['plugins/table.cmds.js'][287]++;
  return ((cell && (cell.tagName == "TD") && (getUETable(tableItems.table).rowsNum < this.options.maxRowNum))? 0: -1);
}), execCommand: (function () {
  _$jscoverage['plugins/table.cmds.js'][290]++;
  var rng = this.selection.getRange(), bk = rng.createBookmark(true);
  _$jscoverage['plugins/table.cmds.js'][292]++;
  var tableItems = getTableItemsByRange(this), cell = tableItems.cell, table = tableItems.table, ut = getUETable(table), cellInfo = ut.getCellInfo(cell);
  _$jscoverage['plugins/table.cmds.js'][298]++;
  if ((! ut.selectedTds.length)) {
    _$jscoverage['plugins/table.cmds.js'][299]++;
    ut.insertRow(cellInfo.rowIndex, cell);
  }
  else {
    _$jscoverage['plugins/table.cmds.js'][301]++;
    var range = ut.cellsRange;
    _$jscoverage['plugins/table.cmds.js'][302]++;
    for (var i = 0, len = ((range.endRowIndex - range.beginRowIndex) + 1); (i < len); (i++)) {
      _$jscoverage['plugins/table.cmds.js'][303]++;
      ut.insertRow(range.beginRowIndex, cell);
}
  }
  _$jscoverage['plugins/table.cmds.js'][306]++;
  rng.moveToBookmark(bk).select();
  _$jscoverage['plugins/table.cmds.js'][307]++;
  if ((table.getAttribute("interlaced") === "enabled")) {
    _$jscoverage['plugins/table.cmds.js'][307]++;
    this.fireEvent("interlacetable", table);
  }
})};
  _$jscoverage['plugins/table.cmds.js'][311]++;
  UE.commands.insertrownext = {queryCommandState: (function () {
  _$jscoverage['plugins/table.cmds.js'][313]++;
  var tableItems = getTableItemsByRange(this), cell = tableItems.cell;
  _$jscoverage['plugins/table.cmds.js'][315]++;
  return ((cell && (cell.tagName == "TD") && (getUETable(tableItems.table).rowsNum < this.options.maxRowNum))? 0: -1);
}), execCommand: (function () {
  _$jscoverage['plugins/table.cmds.js'][318]++;
  var rng = this.selection.getRange(), bk = rng.createBookmark(true);
  _$jscoverage['plugins/table.cmds.js'][320]++;
  var tableItems = getTableItemsByRange(this), cell = tableItems.cell, table = tableItems.table, ut = getUETable(table), cellInfo = ut.getCellInfo(cell);
  _$jscoverage['plugins/table.cmds.js'][326]++;
  if ((! ut.selectedTds.length)) {
    _$jscoverage['plugins/table.cmds.js'][327]++;
    ut.insertRow((cellInfo.rowIndex + cellInfo.rowSpan), cell);
  }
  else {
    _$jscoverage['plugins/table.cmds.js'][329]++;
    var range = ut.cellsRange;
    _$jscoverage['plugins/table.cmds.js'][330]++;
    for (var i = 0, len = ((range.endRowIndex - range.beginRowIndex) + 1); (i < len); (i++)) {
      _$jscoverage['plugins/table.cmds.js'][331]++;
      ut.insertRow((range.endRowIndex + 1), cell);
}
  }
  _$jscoverage['plugins/table.cmds.js'][334]++;
  rng.moveToBookmark(bk).select();
  _$jscoverage['plugins/table.cmds.js'][335]++;
  if ((table.getAttribute("interlaced") === "enabled")) {
    _$jscoverage['plugins/table.cmds.js'][335]++;
    this.fireEvent("interlacetable", table);
  }
})};
  _$jscoverage['plugins/table.cmds.js'][338]++;
  UE.commands.deleterow = {queryCommandState: (function () {
  _$jscoverage['plugins/table.cmds.js'][340]++;
  var tableItems = getTableItemsByRange(this);
  _$jscoverage['plugins/table.cmds.js'][341]++;
  if ((! tableItems.cell)) {
    _$jscoverage['plugins/table.cmds.js'][342]++;
    return -1;
  }
}), execCommand: (function () {
  _$jscoverage['plugins/table.cmds.js'][346]++;
  var cell = getTableItemsByRange(this).cell, ut = getUETable(cell), cellsRange = ut.cellsRange, cellInfo = ut.getCellInfo(cell), preCell = ut.getVSideCell(cell), nextCell = ut.getVSideCell(cell, true), rng = this.selection.getRange();
  _$jscoverage['plugins/table.cmds.js'][353]++;
  if (utils.isEmptyObject(cellsRange)) {
    _$jscoverage['plugins/table.cmds.js'][354]++;
    ut.deleteRow(cellInfo.rowIndex);
  }
  else {
    _$jscoverage['plugins/table.cmds.js'][356]++;
    for (var i = cellsRange.beginRowIndex; (i < (cellsRange.endRowIndex + 1)); (i++)) {
      _$jscoverage['plugins/table.cmds.js'][357]++;
      ut.deleteRow(cellsRange.beginRowIndex);
}
  }
  _$jscoverage['plugins/table.cmds.js'][360]++;
  var table = ut.table;
  _$jscoverage['plugins/table.cmds.js'][361]++;
  if ((! table.getElementsByTagName("td").length)) {
    _$jscoverage['plugins/table.cmds.js'][362]++;
    var nextSibling = table.nextSibling;
    _$jscoverage['plugins/table.cmds.js'][363]++;
    domUtils.remove(table);
    _$jscoverage['plugins/table.cmds.js'][364]++;
    if (nextSibling) {
      _$jscoverage['plugins/table.cmds.js'][365]++;
      rng.setStart(nextSibling, 0).setCursor(false, true);
    }
  }
  else {
    _$jscoverage['plugins/table.cmds.js'][368]++;
    if (((cellInfo.rowSpan == 1) || (cellInfo.rowSpan == ((cellsRange.endRowIndex - cellsRange.beginRowIndex) + 1)))) {
      _$jscoverage['plugins/table.cmds.js'][369]++;
      if ((nextCell || preCell)) {
        _$jscoverage['plugins/table.cmds.js'][369]++;
        rng.selectNodeContents((nextCell || preCell)).setCursor(false, true);
      }
    }
    else {
      _$jscoverage['plugins/table.cmds.js'][371]++;
      var newCell = ut.getCell(cellInfo.rowIndex, ut.indexTable[cellInfo.rowIndex][cellInfo.colIndex].cellIndex);
      _$jscoverage['plugins/table.cmds.js'][372]++;
      if (newCell) {
        _$jscoverage['plugins/table.cmds.js'][372]++;
        rng.selectNodeContents(newCell).setCursor(false, true);
      }
    }
  }
  _$jscoverage['plugins/table.cmds.js'][375]++;
  if ((table.getAttribute("interlaced") === "enabled")) {
    _$jscoverage['plugins/table.cmds.js'][375]++;
    this.fireEvent("interlacetable", table);
  }
})};
  _$jscoverage['plugins/table.cmds.js'][378]++;
  UE.commands.insertcol = {queryCommandState: (function (cmd) {
  _$jscoverage['plugins/table.cmds.js'][380]++;
  var tableItems = getTableItemsByRange(this), cell = tableItems.cell;
  _$jscoverage['plugins/table.cmds.js'][382]++;
  return ((cell && ((cell.tagName == "TD") || (cell.tagName == "TH")) && (getUETable(tableItems.table).colsNum < this.options.maxColNum))? 0: -1);
}), execCommand: (function (cmd) {
  _$jscoverage['plugins/table.cmds.js'][385]++;
  var rng = this.selection.getRange(), bk = rng.createBookmark(true);
  _$jscoverage['plugins/table.cmds.js'][387]++;
  if ((this.queryCommandState(cmd) == -1)) {
    _$jscoverage['plugins/table.cmds.js'][387]++;
    return;
  }
  _$jscoverage['plugins/table.cmds.js'][388]++;
  var cell = getTableItemsByRange(this).cell, ut = getUETable(cell), cellInfo = ut.getCellInfo(cell);
  _$jscoverage['plugins/table.cmds.js'][392]++;
  if ((! ut.selectedTds.length)) {
    _$jscoverage['plugins/table.cmds.js'][393]++;
    ut.insertCol(cellInfo.colIndex, cell);
  }
  else {
    _$jscoverage['plugins/table.cmds.js'][395]++;
    var range = ut.cellsRange;
    _$jscoverage['plugins/table.cmds.js'][396]++;
    for (var i = 0, len = ((range.endColIndex - range.beginColIndex) + 1); (i < len); (i++)) {
      _$jscoverage['plugins/table.cmds.js'][397]++;
      ut.insertCol(range.beginColIndex, cell);
}
  }
  _$jscoverage['plugins/table.cmds.js'][400]++;
  rng.moveToBookmark(bk).select(true);
})};
  _$jscoverage['plugins/table.cmds.js'][403]++;
  UE.commands.insertcolnext = {queryCommandState: (function () {
  _$jscoverage['plugins/table.cmds.js'][405]++;
  var tableItems = getTableItemsByRange(this), cell = tableItems.cell;
  _$jscoverage['plugins/table.cmds.js'][407]++;
  return ((cell && (getUETable(tableItems.table).colsNum < this.options.maxColNum))? 0: -1);
}), execCommand: (function () {
  _$jscoverage['plugins/table.cmds.js'][410]++;
  var rng = this.selection.getRange(), bk = rng.createBookmark(true);
  _$jscoverage['plugins/table.cmds.js'][412]++;
  var cell = getTableItemsByRange(this).cell, ut = getUETable(cell), cellInfo = ut.getCellInfo(cell);
  _$jscoverage['plugins/table.cmds.js'][416]++;
  if ((! ut.selectedTds.length)) {
    _$jscoverage['plugins/table.cmds.js'][417]++;
    ut.insertCol((cellInfo.colIndex + cellInfo.colSpan), cell);
  }
  else {
    _$jscoverage['plugins/table.cmds.js'][419]++;
    var range = ut.cellsRange;
    _$jscoverage['plugins/table.cmds.js'][420]++;
    for (var i = 0, len = ((range.endColIndex - range.beginColIndex) + 1); (i < len); (i++)) {
      _$jscoverage['plugins/table.cmds.js'][421]++;
      ut.insertCol((range.endColIndex + 1), cell);
}
  }
  _$jscoverage['plugins/table.cmds.js'][424]++;
  rng.moveToBookmark(bk).select();
})};
  _$jscoverage['plugins/table.cmds.js'][428]++;
  UE.commands.deletecol = {queryCommandState: (function () {
  _$jscoverage['plugins/table.cmds.js'][430]++;
  var tableItems = getTableItemsByRange(this);
  _$jscoverage['plugins/table.cmds.js'][431]++;
  if ((! tableItems.cell)) {
    _$jscoverage['plugins/table.cmds.js'][431]++;
    return -1;
  }
}), execCommand: (function () {
  _$jscoverage['plugins/table.cmds.js'][434]++;
  var cell = getTableItemsByRange(this).cell, ut = getUETable(cell), range = ut.cellsRange, cellInfo = ut.getCellInfo(cell), preCell = ut.getHSideCell(cell), nextCell = ut.getHSideCell(cell, true);
  _$jscoverage['plugins/table.cmds.js'][440]++;
  if (utils.isEmptyObject(range)) {
    _$jscoverage['plugins/table.cmds.js'][441]++;
    ut.deleteCol(cellInfo.colIndex);
  }
  else {
    _$jscoverage['plugins/table.cmds.js'][443]++;
    for (var i = range.beginColIndex; (i < (range.endColIndex + 1)); (i++)) {
      _$jscoverage['plugins/table.cmds.js'][444]++;
      ut.deleteCol(range.beginColIndex);
}
  }
  _$jscoverage['plugins/table.cmds.js'][447]++;
  var table = ut.table, rng = this.selection.getRange();
  _$jscoverage['plugins/table.cmds.js'][450]++;
  if ((! table.getElementsByTagName("td").length)) {
    _$jscoverage['plugins/table.cmds.js'][451]++;
    var nextSibling = table.nextSibling;
    _$jscoverage['plugins/table.cmds.js'][452]++;
    domUtils.remove(table);
    _$jscoverage['plugins/table.cmds.js'][453]++;
    if (nextSibling) {
      _$jscoverage['plugins/table.cmds.js'][454]++;
      rng.setStart(nextSibling, 0).setCursor(false, true);
    }
  }
  else {
    _$jscoverage['plugins/table.cmds.js'][457]++;
    if (domUtils.inDoc(cell, this.document)) {
      _$jscoverage['plugins/table.cmds.js'][458]++;
      rng.setStart(cell, 0).setCursor(false, true);
    }
    else {
      _$jscoverage['plugins/table.cmds.js'][460]++;
      if ((nextCell && domUtils.inDoc(nextCell, this.document))) {
        _$jscoverage['plugins/table.cmds.js'][461]++;
        rng.selectNodeContents(nextCell).setCursor(false, true);
      }
      else {
        _$jscoverage['plugins/table.cmds.js'][463]++;
        if ((preCell && domUtils.inDoc(preCell, this.document))) {
          _$jscoverage['plugins/table.cmds.js'][464]++;
          rng.selectNodeContents(preCell).setCursor(true, true);
        }
      }
    }
  }
})};
  _$jscoverage['plugins/table.cmds.js'][471]++;
  UE.commands.splittocells = {queryCommandState: (function () {
  _$jscoverage['plugins/table.cmds.js'][473]++;
  var tableItems = getTableItemsByRange(this), cell = tableItems.cell;
  _$jscoverage['plugins/table.cmds.js'][475]++;
  if ((! cell)) {
    _$jscoverage['plugins/table.cmds.js'][475]++;
    return -1;
  }
  _$jscoverage['plugins/table.cmds.js'][476]++;
  var ut = getUETable(tableItems.table);
  _$jscoverage['plugins/table.cmds.js'][477]++;
  if ((ut.selectedTds.length > 0)) {
    _$jscoverage['plugins/table.cmds.js'][477]++;
    return -1;
  }
  _$jscoverage['plugins/table.cmds.js'][478]++;
  return ((cell && ((cell.colSpan > 1) || (cell.rowSpan > 1)))? 0: -1);
}), execCommand: (function () {
  _$jscoverage['plugins/table.cmds.js'][481]++;
  var rng = this.selection.getRange(), bk = rng.createBookmark(true);
  _$jscoverage['plugins/table.cmds.js'][483]++;
  var cell = getTableItemsByRange(this).cell, ut = getUETable(cell);
  _$jscoverage['plugins/table.cmds.js'][485]++;
  ut.splitToCells(cell);
  _$jscoverage['plugins/table.cmds.js'][486]++;
  rng.moveToBookmark(bk).select();
})};
  _$jscoverage['plugins/table.cmds.js'][489]++;
  UE.commands.splittorows = {queryCommandState: (function () {
  _$jscoverage['plugins/table.cmds.js'][491]++;
  var tableItems = getTableItemsByRange(this), cell = tableItems.cell;
  _$jscoverage['plugins/table.cmds.js'][493]++;
  if ((! cell)) {
    _$jscoverage['plugins/table.cmds.js'][493]++;
    return -1;
  }
  _$jscoverage['plugins/table.cmds.js'][494]++;
  var ut = getUETable(tableItems.table);
  _$jscoverage['plugins/table.cmds.js'][495]++;
  if ((ut.selectedTds.length > 0)) {
    _$jscoverage['plugins/table.cmds.js'][495]++;
    return -1;
  }
  _$jscoverage['plugins/table.cmds.js'][496]++;
  return ((cell && (cell.rowSpan > 1))? 0: -1);
}), execCommand: (function () {
  _$jscoverage['plugins/table.cmds.js'][499]++;
  var rng = this.selection.getRange(), bk = rng.createBookmark(true);
  _$jscoverage['plugins/table.cmds.js'][501]++;
  var cell = getTableItemsByRange(this).cell, ut = getUETable(cell);
  _$jscoverage['plugins/table.cmds.js'][503]++;
  ut.splitToRows(cell);
  _$jscoverage['plugins/table.cmds.js'][504]++;
  rng.moveToBookmark(bk).select();
})};
  _$jscoverage['plugins/table.cmds.js'][507]++;
  UE.commands.splittocols = {queryCommandState: (function () {
  _$jscoverage['plugins/table.cmds.js'][509]++;
  var tableItems = getTableItemsByRange(this), cell = tableItems.cell;
  _$jscoverage['plugins/table.cmds.js'][511]++;
  if ((! cell)) {
    _$jscoverage['plugins/table.cmds.js'][511]++;
    return -1;
  }
  _$jscoverage['plugins/table.cmds.js'][512]++;
  var ut = getUETable(tableItems.table);
  _$jscoverage['plugins/table.cmds.js'][513]++;
  if ((ut.selectedTds.length > 0)) {
    _$jscoverage['plugins/table.cmds.js'][513]++;
    return -1;
  }
  _$jscoverage['plugins/table.cmds.js'][514]++;
  return ((cell && (cell.colSpan > 1))? 0: -1);
}), execCommand: (function () {
  _$jscoverage['plugins/table.cmds.js'][517]++;
  var rng = this.selection.getRange(), bk = rng.createBookmark(true);
  _$jscoverage['plugins/table.cmds.js'][519]++;
  var cell = getTableItemsByRange(this).cell, ut = getUETable(cell);
  _$jscoverage['plugins/table.cmds.js'][521]++;
  ut.splitToCols(cell);
  _$jscoverage['plugins/table.cmds.js'][522]++;
  rng.moveToBookmark(bk).select();
})};
  _$jscoverage['plugins/table.cmds.js'][527]++;
  UE.commands.adaptbytext = (UE.commands.adaptbywindow = {queryCommandState: (function () {
  _$jscoverage['plugins/table.cmds.js'][530]++;
  return (getTableItemsByRange(this).table? 0: -1);
}), execCommand: (function (cmd) {
  _$jscoverage['plugins/table.cmds.js'][533]++;
  var tableItems = getTableItemsByRange(this), table = tableItems.table;
  _$jscoverage['plugins/table.cmds.js'][535]++;
  if (table) {
    _$jscoverage['plugins/table.cmds.js'][536]++;
    if ((cmd == "adaptbywindow")) {
      _$jscoverage['plugins/table.cmds.js'][537]++;
      resetTdWidth(table, this);
    }
    else {
      _$jscoverage['plugins/table.cmds.js'][539]++;
      var cells = domUtils.getElementsByTagName(table, "td th");
      _$jscoverage['plugins/table.cmds.js'][540]++;
      utils.each(cells, (function (cell) {
  _$jscoverage['plugins/table.cmds.js'][541]++;
  cell.removeAttribute("width");
}));
      _$jscoverage['plugins/table.cmds.js'][543]++;
      table.removeAttribute("width");
    }
  }
})});
  _$jscoverage['plugins/table.cmds.js'][550]++;
  UE.commands.averagedistributecol = {queryCommandState: (function () {
  _$jscoverage['plugins/table.cmds.js'][552]++;
  var ut = getUETableBySelected(this);
  _$jscoverage['plugins/table.cmds.js'][553]++;
  if ((! ut)) {
    _$jscoverage['plugins/table.cmds.js'][553]++;
    return -1;
  }
  _$jscoverage['plugins/table.cmds.js'][554]++;
  return ((ut.isFullRow() || ut.isFullCol())? 0: -1);
}), execCommand: (function (cmd) {
  _$jscoverage['plugins/table.cmds.js'][557]++;
  var me = this, ut = getUETableBySelected(me);
  _$jscoverage['plugins/table.cmds.js'][560]++;
  function getAverageWidth() {
    _$jscoverage['plugins/table.cmds.js'][561]++;
    var tb = ut.table, averageWidth, sumWidth = 0, colsNum = 0, tbAttr = getDefaultValue(me, tb);
    _$jscoverage['plugins/table.cmds.js'][565]++;
    if (ut.isFullRow()) {
      _$jscoverage['plugins/table.cmds.js'][566]++;
      sumWidth = tb.offsetWidth;
      _$jscoverage['plugins/table.cmds.js'][567]++;
      colsNum = ut.colsNum;
    }
    else {
      _$jscoverage['plugins/table.cmds.js'][569]++;
      var begin = ut.cellsRange.beginColIndex, end = ut.cellsRange.endColIndex, node;
      _$jscoverage['plugins/table.cmds.js'][572]++;
      for (var i = begin; (i <= end);) {
        _$jscoverage['plugins/table.cmds.js'][573]++;
        node = ut.selectedTds[i];
        _$jscoverage['plugins/table.cmds.js'][574]++;
        sumWidth += node.offsetWidth;
        _$jscoverage['plugins/table.cmds.js'][575]++;
        i += node.colSpan;
        _$jscoverage['plugins/table.cmds.js'][576]++;
        colsNum += 1;
}
    }
    _$jscoverage['plugins/table.cmds.js'][579]++;
    averageWidth = (Math.ceil((sumWidth / colsNum)) - (tbAttr.tdBorder * 2) - (tbAttr.tdPadding * 2));
    _$jscoverage['plugins/table.cmds.js'][580]++;
    return averageWidth;
}
  _$jscoverage['plugins/table.cmds.js'][583]++;
  function setAverageWidth(averageWidth) {
    _$jscoverage['plugins/table.cmds.js'][584]++;
    utils.each(domUtils.getElementsByTagName(ut.table, "th"), (function (node) {
  _$jscoverage['plugins/table.cmds.js'][585]++;
  node.setAttribute("width", "");
}));
    _$jscoverage['plugins/table.cmds.js'][587]++;
    var cells = (ut.isFullRow()? domUtils.getElementsByTagName(ut.table, "td"): ut.selectedTds);
    _$jscoverage['plugins/table.cmds.js'][589]++;
    utils.each(cells, (function (node) {
  _$jscoverage['plugins/table.cmds.js'][590]++;
  if ((node.colSpan == 1)) {
    _$jscoverage['plugins/table.cmds.js'][591]++;
    node.setAttribute("width", averageWidth);
  }
}));
}
  _$jscoverage['plugins/table.cmds.js'][596]++;
  if ((ut && ut.selectedTds.length)) {
    _$jscoverage['plugins/table.cmds.js'][597]++;
    setAverageWidth(getAverageWidth());
  }
})};
  _$jscoverage['plugins/table.cmds.js'][602]++;
  UE.commands.averagedistributerow = {queryCommandState: (function () {
  _$jscoverage['plugins/table.cmds.js'][604]++;
  var ut = getUETableBySelected(this);
  _$jscoverage['plugins/table.cmds.js'][605]++;
  if ((! ut)) {
    _$jscoverage['plugins/table.cmds.js'][605]++;
    return -1;
  }
  _$jscoverage['plugins/table.cmds.js'][606]++;
  if ((ut.selectedTds && /th/gi.test(ut.selectedTds[0].tagName))) {
    _$jscoverage['plugins/table.cmds.js'][606]++;
    return -1;
  }
  _$jscoverage['plugins/table.cmds.js'][607]++;
  return ((ut.isFullRow() || ut.isFullCol())? 0: -1);
}), execCommand: (function (cmd) {
  _$jscoverage['plugins/table.cmds.js'][610]++;
  var me = this, ut = getUETableBySelected(me);
  _$jscoverage['plugins/table.cmds.js'][613]++;
  function getAverageHeight() {
    _$jscoverage['plugins/table.cmds.js'][614]++;
    var averageHeight, rowNum, sumHeight = 0, tb = ut.table, tbAttr = getDefaultValue(me, tb), tdpadding = parseInt(domUtils.getComputedStyle(tb.getElementsByTagName("td")[0], "padding-top"));
    _$jscoverage['plugins/table.cmds.js'][619]++;
    if (ut.isFullCol()) {
      _$jscoverage['plugins/table.cmds.js'][620]++;
      var captionArr = domUtils.getElementsByTagName(tb, "caption"), thArr = domUtils.getElementsByTagName(tb, "th"), captionHeight, thHeight;
      _$jscoverage['plugins/table.cmds.js'][624]++;
      if ((captionArr.length > 0)) {
        _$jscoverage['plugins/table.cmds.js'][625]++;
        captionHeight = captionArr[0].offsetHeight;
      }
      _$jscoverage['plugins/table.cmds.js'][627]++;
      if ((thArr.length > 0)) {
        _$jscoverage['plugins/table.cmds.js'][628]++;
        thHeight = thArr[0].offsetHeight;
      }
      _$jscoverage['plugins/table.cmds.js'][631]++;
      sumHeight = (tb.offsetHeight - (captionHeight || 0) - (thHeight || 0));
      _$jscoverage['plugins/table.cmds.js'][632]++;
      rowNum = ((thArr.length == 0)? ut.rowsNum: (ut.rowsNum - 1));
    }
    else {
      _$jscoverage['plugins/table.cmds.js'][634]++;
      var begin = ut.cellsRange.beginRowIndex, end = ut.cellsRange.endRowIndex, count = 0, trs = domUtils.getElementsByTagName(tb, "tr");
      _$jscoverage['plugins/table.cmds.js'][638]++;
      for (var i = begin; (i <= end); (i++)) {
        _$jscoverage['plugins/table.cmds.js'][639]++;
        sumHeight += trs[i].offsetHeight;
        _$jscoverage['plugins/table.cmds.js'][640]++;
        count += 1;
}
      _$jscoverage['plugins/table.cmds.js'][642]++;
      rowNum = count;
    }
    _$jscoverage['plugins/table.cmds.js'][645]++;
    if ((browser.ie && (browser.version < 9))) {
      _$jscoverage['plugins/table.cmds.js'][646]++;
      averageHeight = Math.ceil((sumHeight / rowNum));
    }
    else {
      _$jscoverage['plugins/table.cmds.js'][648]++;
      averageHeight = (Math.ceil((sumHeight / rowNum)) - (tbAttr.tdBorder * 2) - (tdpadding * 2));
    }
    _$jscoverage['plugins/table.cmds.js'][650]++;
    return averageHeight;
}
  _$jscoverage['plugins/table.cmds.js'][653]++;
  function setAverageHeight(averageHeight) {
    _$jscoverage['plugins/table.cmds.js'][654]++;
    var cells = (ut.isFullCol()? domUtils.getElementsByTagName(ut.table, "td"): ut.selectedTds);
    _$jscoverage['plugins/table.cmds.js'][655]++;
    utils.each(cells, (function (node) {
  _$jscoverage['plugins/table.cmds.js'][656]++;
  if ((node.rowSpan == 1)) {
    _$jscoverage['plugins/table.cmds.js'][657]++;
    node.setAttribute("height", averageHeight);
  }
}));
}
  _$jscoverage['plugins/table.cmds.js'][662]++;
  if ((ut && ut.selectedTds.length)) {
    _$jscoverage['plugins/table.cmds.js'][663]++;
    setAverageHeight(getAverageHeight());
  }
})};
  _$jscoverage['plugins/table.cmds.js'][669]++;
  UE.commands.cellalignment = {queryCommandState: (function () {
  _$jscoverage['plugins/table.cmds.js'][671]++;
  return (getTableItemsByRange(this).table? 0: -1);
}), execCommand: (function (cmd, data) {
  _$jscoverage['plugins/table.cmds.js'][674]++;
  var me = this, ut = getUETableBySelected(me);
  _$jscoverage['plugins/table.cmds.js'][677]++;
  if ((! ut)) {
    _$jscoverage['plugins/table.cmds.js'][678]++;
    var start = me.selection.getStart(), cell = (start && domUtils.findParentByTagName(start, ["td", "th", "caption"], true));
    _$jscoverage['plugins/table.cmds.js'][680]++;
    if ((! /caption/gi.test(cell.tagName))) {
      _$jscoverage['plugins/table.cmds.js'][681]++;
      domUtils.setAttributes(cell, data);
    }
    else {
      _$jscoverage['plugins/table.cmds.js'][683]++;
      cell.style.textAlign = data.align;
      _$jscoverage['plugins/table.cmds.js'][684]++;
      cell.style.verticalAlign = data.vAlign;
    }
    _$jscoverage['plugins/table.cmds.js'][686]++;
    me.selection.getRange().setCursor(true);
  }
  else {
    _$jscoverage['plugins/table.cmds.js'][688]++;
    utils.each(ut.selectedTds, (function (cell) {
  _$jscoverage['plugins/table.cmds.js'][689]++;
  domUtils.setAttributes(cell, data);
}));
  }
})};
  _$jscoverage['plugins/table.cmds.js'][695]++;
  UE.commands.tablealignment = {queryCommandState: (function () {
  _$jscoverage['plugins/table.cmds.js'][697]++;
  return (getTableItemsByRange(this).table? 0: -1);
}), execCommand: (function (cmd, data) {
  _$jscoverage['plugins/table.cmds.js'][700]++;
  var me = this, start = me.selection.getStart(), table = (start && domUtils.findParentByTagName(start, ["table"], true));
  _$jscoverage['plugins/table.cmds.js'][704]++;
  if (table) {
    _$jscoverage['plugins/table.cmds.js'][705]++;
    var obj = {};
    _$jscoverage['plugins/table.cmds.js'][706]++;
    obj[data[0]] = data[1];
    _$jscoverage['plugins/table.cmds.js'][707]++;
    table.style[utils.cssStyleToDomStyle("float")] = "";
    _$jscoverage['plugins/table.cmds.js'][708]++;
    table.style.margin = "";
    _$jscoverage['plugins/table.cmds.js'][709]++;
    domUtils.setStyles(table, obj);
  }
})};
  _$jscoverage['plugins/table.cmds.js'][715]++;
  UE.commands.edittable = {queryCommandState: (function () {
  _$jscoverage['plugins/table.cmds.js'][717]++;
  return (getTableItemsByRange(this).table? 0: -1);
}), execCommand: (function (cmd, color) {
  _$jscoverage['plugins/table.cmds.js'][720]++;
  var rng = this.selection.getRange(), table = domUtils.findParentByTagName(rng.startContainer, "table");
  _$jscoverage['plugins/table.cmds.js'][722]++;
  if (table) {
    _$jscoverage['plugins/table.cmds.js'][723]++;
    var arr = domUtils.getElementsByTagName(table, "td").concat(domUtils.getElementsByTagName(table, "th"), domUtils.getElementsByTagName(table, "caption"));
    _$jscoverage['plugins/table.cmds.js'][727]++;
    utils.each(arr, (function (node) {
  _$jscoverage['plugins/table.cmds.js'][728]++;
  node.style.borderColor = color;
}));
  }
})};
  _$jscoverage['plugins/table.cmds.js'][734]++;
  UE.commands.edittd = {queryCommandState: (function () {
  _$jscoverage['plugins/table.cmds.js'][736]++;
  return (getTableItemsByRange(this).table? 0: -1);
}), execCommand: (function (cmd, bkColor) {
  _$jscoverage['plugins/table.cmds.js'][739]++;
  var me = this, ut = getUETableBySelected(me);
  _$jscoverage['plugins/table.cmds.js'][742]++;
  if ((! ut)) {
    _$jscoverage['plugins/table.cmds.js'][743]++;
    var start = me.selection.getStart(), cell = (start && domUtils.findParentByTagName(start, ["td", "th", "caption"], true));
    _$jscoverage['plugins/table.cmds.js'][745]++;
    if (cell) {
      _$jscoverage['plugins/table.cmds.js'][746]++;
      cell.style.backgroundColor = bkColor;
    }
  }
  else {
    _$jscoverage['plugins/table.cmds.js'][749]++;
    utils.each(ut.selectedTds, (function (cell) {
  _$jscoverage['plugins/table.cmds.js'][750]++;
  cell.style.backgroundColor = bkColor;
}));
  }
})};
  _$jscoverage['plugins/table.cmds.js'][755]++;
  UE.commands.sorttable = {queryCommandState: (function () {
  _$jscoverage['plugins/table.cmds.js'][757]++;
  var me = this, tableItems = getTableItemsByRange(me);
  _$jscoverage['plugins/table.cmds.js'][759]++;
  if ((! tableItems.cell)) {
    _$jscoverage['plugins/table.cmds.js'][759]++;
    return -1;
  }
  _$jscoverage['plugins/table.cmds.js'][760]++;
  var table = tableItems.table, cells = table.getElementsByTagName("td");
  _$jscoverage['plugins/table.cmds.js'][762]++;
  for (var i = 0, cell; (cell = cells[(i++)]);) {
    _$jscoverage['plugins/table.cmds.js'][763]++;
    if (((cell.rowSpan != 1) || (cell.colSpan != 1))) {
      _$jscoverage['plugins/table.cmds.js'][763]++;
      return -1;
    }
}
  _$jscoverage['plugins/table.cmds.js'][765]++;
  return 0;
}), execCommand: (function (cmd, fn) {
  _$jscoverage['plugins/table.cmds.js'][768]++;
  var me = this, range = me.selection.getRange(), bk = range.createBookmark(true), tableItems = getTableItemsByRange(me), cell = tableItems.cell, ut = getUETable(tableItems.table), cellInfo = ut.getCellInfo(cell);
  _$jscoverage['plugins/table.cmds.js'][775]++;
  ut.sortTable(cellInfo.cellIndex, fn);
  _$jscoverage['plugins/table.cmds.js'][776]++;
  range.moveToBookmark(bk).select();
})};
  _$jscoverage['plugins/table.cmds.js'][780]++;
  UE.commands.enablesort = (UE.commands.disablesort = {queryCommandState: (function () {
  _$jscoverage['plugins/table.cmds.js'][782]++;
  return (getTableItemsByRange(this).table? 0: -1);
}), execCommand: (function (cmd) {
  _$jscoverage['plugins/table.cmds.js'][785]++;
  var table = getTableItemsByRange(this).table;
  _$jscoverage['plugins/table.cmds.js'][786]++;
  table.setAttribute("data-sort", ((cmd == "enablesort")? "sortEnabled": "sortDisabled"));
})});
  _$jscoverage['plugins/table.cmds.js'][789]++;
  UE.commands.settablebackground = {queryCommandState: (function () {
  _$jscoverage['plugins/table.cmds.js'][791]++;
  return ((getSelectedArr(this).length > 1)? 0: -1);
}), execCommand: (function (cmd, value) {
  _$jscoverage['plugins/table.cmds.js'][794]++;
  var table, cells, ut;
  _$jscoverage['plugins/table.cmds.js'][795]++;
  cells = getSelectedArr(this);
  _$jscoverage['plugins/table.cmds.js'][796]++;
  ut = getUETable(cells[0]);
  _$jscoverage['plugins/table.cmds.js'][797]++;
  ut.setBackground(cells, value);
})};
  _$jscoverage['plugins/table.cmds.js'][801]++;
  UE.commands.cleartablebackground = {queryCommandState: (function () {
  _$jscoverage['plugins/table.cmds.js'][803]++;
  var cells = getSelectedArr(this);
  _$jscoverage['plugins/table.cmds.js'][804]++;
  if ((! cells.length)) {
    _$jscoverage['plugins/table.cmds.js'][804]++;
    return -1;
  }
  _$jscoverage['plugins/table.cmds.js'][805]++;
  for (var i = 0, cell; (cell = cells[(i++)]);) {
    _$jscoverage['plugins/table.cmds.js'][806]++;
    if ((cell.style.backgroundColor !== "")) {
      _$jscoverage['plugins/table.cmds.js'][806]++;
      return 0;
    }
}
  _$jscoverage['plugins/table.cmds.js'][808]++;
  return -1;
}), execCommand: (function () {
  _$jscoverage['plugins/table.cmds.js'][811]++;
  var cells = getSelectedArr(this), ut = getUETable(cells[0]);
  _$jscoverage['plugins/table.cmds.js'][813]++;
  ut.removeBackground(cells);
})};
  _$jscoverage['plugins/table.cmds.js'][817]++;
  UE.commands.interlacetable = (UE.commands.uninterlacetable = {queryCommandState: (function (cmd) {
  _$jscoverage['plugins/table.cmds.js'][819]++;
  var table = getTableItemsByRange(this).table;
  _$jscoverage['plugins/table.cmds.js'][820]++;
  if ((! table)) {
    _$jscoverage['plugins/table.cmds.js'][820]++;
    return -1;
  }
  _$jscoverage['plugins/table.cmds.js'][821]++;
  var interlaced = table.getAttribute("interlaced");
  _$jscoverage['plugins/table.cmds.js'][822]++;
  if ((cmd == "interlacetable")) {
    _$jscoverage['plugins/table.cmds.js'][824]++;
    return 0;
  }
  else {
    _$jscoverage['plugins/table.cmds.js'][826]++;
    return (((! interlaced) || (interlaced === "disabled"))? -1: 0);
  }
}), execCommand: (function (cmd, classList) {
  _$jscoverage['plugins/table.cmds.js'][830]++;
  var table = getTableItemsByRange(this).table;
  _$jscoverage['plugins/table.cmds.js'][831]++;
  if ((cmd == "interlacetable")) {
    _$jscoverage['plugins/table.cmds.js'][832]++;
    table.setAttribute("interlaced", "enabled");
    _$jscoverage['plugins/table.cmds.js'][833]++;
    this.fireEvent("interlacetable", table, classList);
  }
  else {
    _$jscoverage['plugins/table.cmds.js'][835]++;
    table.setAttribute("interlaced", "disabled");
    _$jscoverage['plugins/table.cmds.js'][836]++;
    this.fireEvent("uninterlacetable", table);
  }
})});
  _$jscoverage['plugins/table.cmds.js'][841]++;
  function resetTdWidth(table, editor) {
    _$jscoverage['plugins/table.cmds.js'][842]++;
    var tds = table.getElementsByTagName("td");
    _$jscoverage['plugins/table.cmds.js'][843]++;
    utils.each(tds, (function (td) {
  _$jscoverage['plugins/table.cmds.js'][844]++;
  td.removeAttribute("width");
}));
    _$jscoverage['plugins/table.cmds.js'][846]++;
    table.setAttribute("width", getTableWidth(editor, true, getDefaultValue(editor, table)));
    _$jscoverage['plugins/table.cmds.js'][847]++;
    setTimeout((function () {
  _$jscoverage['plugins/table.cmds.js'][848]++;
  utils.each(tds, (function (td) {
  _$jscoverage['plugins/table.cmds.js'][849]++;
  ((td.colSpan == 1) && td.setAttribute("width", (td.offsetWidth + "")));
}));
}), 0);
}
  _$jscoverage['plugins/table.cmds.js'][854]++;
  function getTableWidth(editor, needIEHack, defaultValue) {
    _$jscoverage['plugins/table.cmds.js'][855]++;
    var body = editor.body;
    _$jscoverage['plugins/table.cmds.js'][856]++;
    return (body.offsetWidth - (needIEHack? (parseInt(domUtils.getComputedStyle(body, "margin-left"), 10) * 2): 0) - (defaultValue.tableBorder * 2) - (editor.options.offsetWidth || 0));
}
  _$jscoverage['plugins/table.cmds.js'][859]++;
  function getSelectedArr(editor) {
    _$jscoverage['plugins/table.cmds.js'][860]++;
    var cell = getTableItemsByRange(editor).cell, ut = getUETable(cell);
    _$jscoverage['plugins/table.cmds.js'][862]++;
    return (ut.selectedTds.length? ut.selectedTds: [cell]);
}
})();
