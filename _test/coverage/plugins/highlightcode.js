/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['plugins/highlightcode.js']) {
  _$jscoverage['plugins/highlightcode.js'] = [];
  _$jscoverage['plugins/highlightcode.js'][7] = 0;
  _$jscoverage['plugins/highlightcode.js'][8] = 0;
  _$jscoverage['plugins/highlightcode.js'][9] = 0;
  _$jscoverage['plugins/highlightcode.js'][10] = 0;
  _$jscoverage['plugins/highlightcode.js'][13] = 0;
  _$jscoverage['plugins/highlightcode.js'][15] = 0;
  _$jscoverage['plugins/highlightcode.js'][18] = 0;
  _$jscoverage['plugins/highlightcode.js'][19] = 0;
  _$jscoverage['plugins/highlightcode.js'][20] = 0;
  _$jscoverage['plugins/highlightcode.js'][22] = 0;
  _$jscoverage['plugins/highlightcode.js'][23] = 0;
  _$jscoverage['plugins/highlightcode.js'][25] = 0;
  _$jscoverage['plugins/highlightcode.js'][26] = 0;
  _$jscoverage['plugins/highlightcode.js'][27] = 0;
  _$jscoverage['plugins/highlightcode.js'][28] = 0;
  _$jscoverage['plugins/highlightcode.js'][31] = 0;
  _$jscoverage['plugins/highlightcode.js'][32] = 0;
  _$jscoverage['plugins/highlightcode.js'][34] = 0;
  _$jscoverage['plugins/highlightcode.js'][35] = 0;
  _$jscoverage['plugins/highlightcode.js'][36] = 0;
  _$jscoverage['plugins/highlightcode.js'][37] = 0;
  _$jscoverage['plugins/highlightcode.js'][38] = 0;
  _$jscoverage['plugins/highlightcode.js'][39] = 0;
  _$jscoverage['plugins/highlightcode.js'][45] = 0;
  _$jscoverage['plugins/highlightcode.js'][49] = 0;
  _$jscoverage['plugins/highlightcode.js'][50] = 0;
  _$jscoverage['plugins/highlightcode.js'][51] = 0;
  _$jscoverage['plugins/highlightcode.js'][52] = 0;
  _$jscoverage['plugins/highlightcode.js'][53] = 0;
  _$jscoverage['plugins/highlightcode.js'][54] = 0;
  _$jscoverage['plugins/highlightcode.js'][56] = 0;
  _$jscoverage['plugins/highlightcode.js'][57] = 0;
  _$jscoverage['plugins/highlightcode.js'][59] = 0;
  _$jscoverage['plugins/highlightcode.js'][61] = 0;
  _$jscoverage['plugins/highlightcode.js'][66] = 0;
  _$jscoverage['plugins/highlightcode.js'][80] = 0;
  _$jscoverage['plugins/highlightcode.js'][81] = 0;
  _$jscoverage['plugins/highlightcode.js'][82] = 0;
  _$jscoverage['plugins/highlightcode.js'][83] = 0;
  _$jscoverage['plugins/highlightcode.js'][85] = 0;
  _$jscoverage['plugins/highlightcode.js'][88] = 0;
  _$jscoverage['plugins/highlightcode.js'][89] = 0;
  _$jscoverage['plugins/highlightcode.js'][93] = 0;
  _$jscoverage['plugins/highlightcode.js'][95] = 0;
  _$jscoverage['plugins/highlightcode.js'][96] = 0;
  _$jscoverage['plugins/highlightcode.js'][103] = 0;
  _$jscoverage['plugins/highlightcode.js'][106] = 0;
  _$jscoverage['plugins/highlightcode.js'][107] = 0;
  _$jscoverage['plugins/highlightcode.js'][117] = 0;
  _$jscoverage['plugins/highlightcode.js'][118] = 0;
  _$jscoverage['plugins/highlightcode.js'][119] = 0;
  _$jscoverage['plugins/highlightcode.js'][120] = 0;
  _$jscoverage['plugins/highlightcode.js'][121] = 0;
  _$jscoverage['plugins/highlightcode.js'][122] = 0;
  _$jscoverage['plugins/highlightcode.js'][124] = 0;
  _$jscoverage['plugins/highlightcode.js'][128] = 0;
  _$jscoverage['plugins/highlightcode.js'][131] = 0;
  _$jscoverage['plugins/highlightcode.js'][132] = 0;
  _$jscoverage['plugins/highlightcode.js'][135] = 0;
  _$jscoverage['plugins/highlightcode.js'][136] = 0;
  _$jscoverage['plugins/highlightcode.js'][137] = 0;
  _$jscoverage['plugins/highlightcode.js'][138] = 0;
  _$jscoverage['plugins/highlightcode.js'][139] = 0;
  _$jscoverage['plugins/highlightcode.js'][140] = 0;
  _$jscoverage['plugins/highlightcode.js'][141] = 0;
  _$jscoverage['plugins/highlightcode.js'][142] = 0;
  _$jscoverage['plugins/highlightcode.js'][144] = 0;
  _$jscoverage['plugins/highlightcode.js'][147] = 0;
  _$jscoverage['plugins/highlightcode.js'][148] = 0;
  _$jscoverage['plugins/highlightcode.js'][149] = 0;
  _$jscoverage['plugins/highlightcode.js'][150] = 0;
  _$jscoverage['plugins/highlightcode.js'][151] = 0;
  _$jscoverage['plugins/highlightcode.js'][152] = 0;
  _$jscoverage['plugins/highlightcode.js'][156] = 0;
  _$jscoverage['plugins/highlightcode.js'][157] = 0;
  _$jscoverage['plugins/highlightcode.js'][158] = 0;
  _$jscoverage['plugins/highlightcode.js'][159] = 0;
  _$jscoverage['plugins/highlightcode.js'][160] = 0;
  _$jscoverage['plugins/highlightcode.js'][161] = 0;
  _$jscoverage['plugins/highlightcode.js'][162] = 0;
  _$jscoverage['plugins/highlightcode.js'][163] = 0;
  _$jscoverage['plugins/highlightcode.js'][164] = 0;
  _$jscoverage['plugins/highlightcode.js'][165] = 0;
  _$jscoverage['plugins/highlightcode.js'][166] = 0;
  _$jscoverage['plugins/highlightcode.js'][167] = 0;
  _$jscoverage['plugins/highlightcode.js'][170] = 0;
  _$jscoverage['plugins/highlightcode.js'][171] = 0;
  _$jscoverage['plugins/highlightcode.js'][175] = 0;
  _$jscoverage['plugins/highlightcode.js'][179] = 0;
  _$jscoverage['plugins/highlightcode.js'][180] = 0;
  _$jscoverage['plugins/highlightcode.js'][181] = 0;
  _$jscoverage['plugins/highlightcode.js'][183] = 0;
  _$jscoverage['plugins/highlightcode.js'][187] = 0;
  _$jscoverage['plugins/highlightcode.js'][188] = 0;
  _$jscoverage['plugins/highlightcode.js'][189] = 0;
  _$jscoverage['plugins/highlightcode.js'][190] = 0;
  _$jscoverage['plugins/highlightcode.js'][191] = 0;
  _$jscoverage['plugins/highlightcode.js'][192] = 0;
  _$jscoverage['plugins/highlightcode.js'][197] = 0;
  _$jscoverage['plugins/highlightcode.js'][198] = 0;
  _$jscoverage['plugins/highlightcode.js'][199] = 0;
  _$jscoverage['plugins/highlightcode.js'][200] = 0;
  _$jscoverage['plugins/highlightcode.js'][201] = 0;
  _$jscoverage['plugins/highlightcode.js'][217] = 0;
  _$jscoverage['plugins/highlightcode.js'][220] = 0;
  _$jscoverage['plugins/highlightcode.js'][221] = 0;
  _$jscoverage['plugins/highlightcode.js'][222] = 0;
  _$jscoverage['plugins/highlightcode.js'][223] = 0;
  _$jscoverage['plugins/highlightcode.js'][225] = 0;
  _$jscoverage['plugins/highlightcode.js'][226] = 0;
  _$jscoverage['plugins/highlightcode.js'][230] = 0;
}
_$jscoverage['plugins/highlightcode.js'].source = ["<span class=\"c\">///import core</span>","<span class=\"c\">///import plugins/inserthtml.js</span>","<span class=\"c\">///commands &#25554;&#20837;&#20195;&#30721;</span>","<span class=\"c\">///commandsName  HighlightCode</span>","<span class=\"c\">///commandsTitle  &#25554;&#20837;&#20195;&#30721;</span>","<span class=\"c\">///commandsDialog  dialogs\\highlightcode</span>","UE<span class=\"k\">.</span>plugins<span class=\"k\">[</span><span class=\"s\">'highlightcode'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> me <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","    <span class=\"k\">if</span><span class=\"k\">(!</span><span class=\"s\">/highlightcode/i</span><span class=\"k\">.</span>test<span class=\"k\">(</span>me<span class=\"k\">.</span>options<span class=\"k\">.</span>toolbars<span class=\"k\">.</span>join<span class=\"k\">(</span><span class=\"s\">''</span><span class=\"k\">)))</span><span class=\"k\">{</span>","        <span class=\"k\">return</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    me<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">'highlightcode'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","        execCommand<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>cmdName<span class=\"k\">,</span> code<span class=\"k\">,</span> syntax<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> range <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">(),</span>","                start <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>range<span class=\"k\">.</span>startContainer<span class=\"k\">,</span> <span class=\"s\">'table'</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">),</span>","                end <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>range<span class=\"k\">.</span>endContainer<span class=\"k\">,</span> <span class=\"s\">'table'</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>start <span class=\"k\">&amp;&amp;</span> end <span class=\"k\">&amp;&amp;</span> start <span class=\"k\">===</span> end <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>hasClass<span class=\"k\">(</span>start<span class=\"k\">,</span><span class=\"s\">'syntaxhighlighter'</span><span class=\"k\">))</span><span class=\"k\">{</span>","                <span class=\"k\">if</span><span class=\"k\">(</span>start<span class=\"k\">.</span>nextSibling<span class=\"k\">)</span><span class=\"k\">{</span>","                    range<span class=\"k\">.</span>setStart<span class=\"k\">(</span>start<span class=\"k\">.</span>nextSibling<span class=\"k\">,</span><span class=\"s\">0</span><span class=\"k\">)</span>","                <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","                    <span class=\"k\">if</span><span class=\"k\">(</span>start<span class=\"k\">.</span>previousSibling<span class=\"k\">)</span><span class=\"k\">{</span>","                        range<span class=\"k\">.</span>setStartAtLast<span class=\"k\">(</span>start<span class=\"k\">.</span>previousSibling<span class=\"k\">)</span>","                    <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","                        <span class=\"k\">var</span> p <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'p'</span><span class=\"k\">);</span>","                        domUtils<span class=\"k\">.</span>fillNode<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">,</span>p<span class=\"k\">);</span>","                        start<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>p<span class=\"k\">,</span>start<span class=\"k\">);</span>","                        range<span class=\"k\">.</span>setStart<span class=\"k\">(</span>p<span class=\"k\">,</span><span class=\"s\">0</span><span class=\"k\">)</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","                range<span class=\"k\">.</span>setCursor<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span><span class=\"k\">true</span><span class=\"k\">);</span>","                domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>start<span class=\"k\">);</span>","            <span class=\"k\">}</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>code <span class=\"k\">&amp;&amp;</span> syntax<span class=\"k\">)</span><span class=\"k\">{</span>","                me<span class=\"k\">.</span>execCommand<span class=\"k\">(</span><span class=\"s\">'inserthtml'</span><span class=\"k\">,</span><span class=\"s\">'&lt;pre id=\"highlightcode_id\" class=\"brush: '</span><span class=\"k\">+</span>syntax<span class=\"k\">+</span><span class=\"s\">';toolbar:false;\"&gt;'</span><span class=\"k\">+</span>utils<span class=\"k\">.</span>unhtml<span class=\"k\">(</span>code<span class=\"k\">)+</span><span class=\"s\">'&lt;/pre&gt;'</span><span class=\"k\">,</span><span class=\"k\">true</span><span class=\"k\">);</span>","                <span class=\"k\">var</span> pre <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span><span class=\"s\">'highlightcode_id'</span><span class=\"k\">);</span>","                <span class=\"k\">if</span><span class=\"k\">(</span>pre<span class=\"k\">)</span><span class=\"k\">{</span>","                    domUtils<span class=\"k\">.</span>removeAttributes<span class=\"k\">(</span>pre<span class=\"k\">,</span><span class=\"s\">'id'</span><span class=\"k\">);</span>","                    me<span class=\"k\">.</span>window<span class=\"k\">.</span>SyntaxHighlighter<span class=\"k\">.</span>highlight<span class=\"k\">(</span>pre<span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","","        <span class=\"k\">}</span><span class=\"k\">,</span>","        queryCommandState<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","            <span class=\"k\">return</span> queryHighlight<span class=\"k\">.</span>call<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"k\">function</span> queryHighlight<span class=\"k\">()</span><span class=\"k\">{</span>","        <span class=\"k\">try</span><span class=\"k\">{</span>","            <span class=\"k\">var</span> range <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">(),</span>start<span class=\"k\">,</span>end<span class=\"k\">;</span>","            range<span class=\"k\">.</span>adjustmentBoundary<span class=\"k\">();</span>","            start <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParent<span class=\"k\">(</span>range<span class=\"k\">.</span>startContainer<span class=\"k\">,</span><span class=\"k\">function</span><span class=\"k\">(</span>node<span class=\"k\">)</span><span class=\"k\">{</span>","                <span class=\"k\">return</span> node<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> node<span class=\"k\">.</span>tagName <span class=\"k\">==</span> <span class=\"s\">'TABLE'</span> <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>hasClass<span class=\"k\">(</span>node<span class=\"k\">,</span><span class=\"s\">'syntaxhighlighter'</span><span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">,</span><span class=\"k\">true</span><span class=\"k\">);</span>","            end <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParent<span class=\"k\">(</span>range<span class=\"k\">.</span>endContainer<span class=\"k\">,</span><span class=\"k\">function</span><span class=\"k\">(</span>node<span class=\"k\">)</span><span class=\"k\">{</span>","                <span class=\"k\">return</span> node<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> node<span class=\"k\">.</span>tagName <span class=\"k\">==</span> <span class=\"s\">'TABLE'</span> <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>hasClass<span class=\"k\">(</span>node<span class=\"k\">,</span><span class=\"s\">'syntaxhighlighter'</span><span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">,</span><span class=\"k\">true</span><span class=\"k\">);</span>","            <span class=\"k\">return</span> start <span class=\"k\">&amp;&amp;</span> end <span class=\"k\">&amp;&amp;</span> start <span class=\"k\">==</span> end  <span class=\"k\">?</span> <span class=\"s\">1</span> <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">catch</span><span class=\"k\">(</span>e<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"s\">0</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"c\">//&#19981;&#38656;&#35201;&#21028;&#26029;highlight&#30340;command&#21015;&#34920;</span>","    me<span class=\"k\">.</span>notNeedHighlightQuery <span class=\"k\">=</span><span class=\"k\">{</span>","        help<span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        undo<span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        redo<span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        source<span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        print<span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        searchreplace<span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        fullscreen<span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        preview<span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        insertparagraph<span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        elementpath<span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        highlightcode<span class=\"k\">:</span><span class=\"s\">1</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"c\">//&#23558;queyCommamndState&#37325;&#32622;</span>","    <span class=\"k\">var</span> orgQuery <span class=\"k\">=</span> me<span class=\"k\">.</span>queryCommandState<span class=\"k\">;</span>","    me<span class=\"k\">.</span>queryCommandState <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>cmd<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">if</span><span class=\"k\">(!</span>me<span class=\"k\">.</span>notNeedHighlightQuery<span class=\"k\">[</span>cmd<span class=\"k\">.</span>toLowerCase<span class=\"k\">()]</span> <span class=\"k\">&amp;&amp;</span> queryHighlight<span class=\"k\">.</span>call<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">)</span> <span class=\"k\">==</span> <span class=\"s\">1</span><span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> orgQuery<span class=\"k\">.</span>apply<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span>arguments<span class=\"k\">)</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    me<span class=\"k\">.</span>addListener<span class=\"k\">(</span><span class=\"s\">'beforeselectionchange afterselectionchange'</span><span class=\"k\">,</span><span class=\"k\">function</span><span class=\"k\">(</span>type<span class=\"k\">)</span><span class=\"k\">{</span>","        me<span class=\"k\">.</span>highlight <span class=\"k\">=</span> <span class=\"s\">/^b/</span><span class=\"k\">.</span>test<span class=\"k\">(</span>type<span class=\"k\">)</span> <span class=\"k\">?</span> me<span class=\"k\">.</span>queryCommandState<span class=\"k\">(</span><span class=\"s\">'highlightcode'</span><span class=\"k\">)</span> <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","","","    me<span class=\"k\">.</span>addListener<span class=\"k\">(</span><span class=\"s\">\"ready\"</span><span class=\"k\">,</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","        <span class=\"c\">//&#36991;&#20813;&#37325;&#22797;&#21152;&#36733;&#39640;&#20142;&#25991;&#20214;</span>","        <span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> me<span class=\"k\">.</span>XRegExp <span class=\"k\">==</span> <span class=\"s\">\"undefined\"</span><span class=\"k\">)</span><span class=\"k\">{</span>","            utils<span class=\"k\">.</span>loadFile<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">,</span><span class=\"k\">{</span>","                id <span class=\"k\">:</span> <span class=\"s\">\"syntaxhighlighter_js\"</span><span class=\"k\">,</span>","                src <span class=\"k\">:</span> me<span class=\"k\">.</span>options<span class=\"k\">.</span>highlightJsUrl <span class=\"k\">||</span> me<span class=\"k\">.</span>options<span class=\"k\">.</span>UEDITOR_HOME_URL <span class=\"k\">+</span> <span class=\"s\">\"third-party/SyntaxHighlighter/shCore.js\"</span><span class=\"k\">,</span>","                tag <span class=\"k\">:</span> <span class=\"s\">\"script\"</span><span class=\"k\">,</span>","                type <span class=\"k\">:</span> <span class=\"s\">\"text/javascript\"</span><span class=\"k\">,</span>","                defer <span class=\"k\">:</span> <span class=\"s\">\"defer\"</span>","            <span class=\"k\">}</span><span class=\"k\">,</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","                changePre<span class=\"k\">.</span>call<span class=\"k\">(</span>me<span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">);</span>","        <span class=\"k\">}</span>","        <span class=\"k\">if</span><span class=\"k\">(!</span>me<span class=\"k\">.</span>document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span><span class=\"s\">\"syntaxhighlighter_css\"</span><span class=\"k\">))</span><span class=\"k\">{</span>","            utils<span class=\"k\">.</span>loadFile<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">,</span><span class=\"k\">{</span>","                id <span class=\"k\">:</span> <span class=\"s\">\"syntaxhighlighter_css\"</span><span class=\"k\">,</span>","                tag <span class=\"k\">:</span> <span class=\"s\">\"link\"</span><span class=\"k\">,</span>","                rel <span class=\"k\">:</span> <span class=\"s\">\"stylesheet\"</span><span class=\"k\">,</span>","                type <span class=\"k\">:</span> <span class=\"s\">\"text/css\"</span><span class=\"k\">,</span>","                href <span class=\"k\">:</span> me<span class=\"k\">.</span>options<span class=\"k\">.</span>highlightCssUrl <span class=\"k\">||</span>me<span class=\"k\">.</span>options<span class=\"k\">.</span>UEDITOR_HOME_URL <span class=\"k\">+</span> <span class=\"s\">\"third-party/SyntaxHighlighter/shCoreDefault.css\"</span>","            <span class=\"k\">}</span><span class=\"k\">);</span>","        <span class=\"k\">}</span>","","    <span class=\"k\">}</span><span class=\"k\">);</span>","    me<span class=\"k\">.</span>addListener<span class=\"k\">(</span><span class=\"s\">\"beforegetscene\"</span><span class=\"k\">,</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","        utils<span class=\"k\">.</span>each<span class=\"k\">(</span>domUtils<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span>me<span class=\"k\">.</span>body<span class=\"k\">,</span><span class=\"s\">'table'</span><span class=\"k\">,</span><span class=\"s\">'syntaxhighlighter'</span><span class=\"k\">),</span><span class=\"k\">function</span><span class=\"k\">(</span>di<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">var</span> str <span class=\"k\">=</span> <span class=\"k\">[],</span>parentCode <span class=\"k\">=</span> <span class=\"s\">''</span><span class=\"k\">;</span>","            utils<span class=\"k\">.</span>each<span class=\"k\">(</span>di<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">'code'</span><span class=\"k\">),</span><span class=\"k\">function</span><span class=\"k\">(</span>ci<span class=\"k\">)</span><span class=\"k\">{</span>","                <span class=\"k\">if</span><span class=\"k\">(</span>parentCode <span class=\"k\">!==</span> ci<span class=\"k\">.</span>parentNode<span class=\"k\">)</span><span class=\"k\">{</span>","                    parentCode <span class=\"k\">=</span> ci<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","                    <span class=\"c\">//&#21435;&#25481;&#24038;&#21491;&#31354;&#26684;&#65292;&#38024;&#23545;ie&#30340;&#19981;&#33021;&#22238;&#36864;&#30340;&#38382;&#39064;</span>","                    str<span class=\"k\">.</span>push<span class=\"k\">(</span>utils<span class=\"k\">.</span>trim<span class=\"k\">(</span>parentCode<span class=\"k\">[</span>browser<span class=\"k\">.</span>ie<span class=\"k\">?</span><span class=\"s\">'innerText'</span><span class=\"k\">:</span><span class=\"s\">'textContent'</span><span class=\"k\">]))</span>","                <span class=\"k\">}</span>","","            <span class=\"k\">}</span><span class=\"k\">);</span>","            <span class=\"k\">var</span> pre <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>createElement<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">,</span><span class=\"s\">'pre'</span><span class=\"k\">,</span><span class=\"k\">{</span>","                <span class=\"s\">'class'</span> <span class=\"k\">:</span> <span class=\"s\">'brush: '</span><span class=\"k\">+</span>di<span class=\"k\">.</span>className<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/\\s+/g</span><span class=\"k\">,</span><span class=\"s\">' '</span><span class=\"k\">).</span>split<span class=\"k\">(</span><span class=\"s\">' '</span><span class=\"k\">)[</span><span class=\"s\">1</span><span class=\"k\">]+</span><span class=\"s\">';toolbar:false;'</span>","            <span class=\"k\">}</span><span class=\"k\">);</span>","            pre<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">.</span>createTextNode<span class=\"k\">(</span>str<span class=\"k\">.</span>join<span class=\"k\">(</span><span class=\"s\">'</span><span class=\"t\">\\n</span><span class=\"s\">'</span><span class=\"k\">)));</span>","            di<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>replaceChild<span class=\"k\">(</span>pre<span class=\"k\">,</span>di<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","    me<span class=\"k\">.</span>addOutputRule<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>root<span class=\"k\">)</span><span class=\"k\">{</span>","        utils<span class=\"k\">.</span>each<span class=\"k\">(</span>root<span class=\"k\">.</span>getNodesByTagName<span class=\"k\">(</span><span class=\"s\">'table'</span><span class=\"k\">),</span><span class=\"k\">function</span><span class=\"k\">(</span>node<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">var</span> val<span class=\"k\">;</span>","            <span class=\"k\">if</span><span class=\"k\">((</span>val <span class=\"k\">=</span> node<span class=\"k\">.</span>getAttr<span class=\"k\">(</span><span class=\"s\">'class'</span><span class=\"k\">))</span> <span class=\"k\">&amp;&amp;</span> <span class=\"s\">/syntaxhighlighter/</span><span class=\"k\">.</span>test<span class=\"k\">(</span>val<span class=\"k\">))</span><span class=\"k\">{</span>","                <span class=\"k\">var</span> str <span class=\"k\">=</span> <span class=\"k\">[],</span>parentCode <span class=\"k\">=</span> <span class=\"s\">''</span><span class=\"k\">;</span>","                utils<span class=\"k\">.</span>each<span class=\"k\">(</span>node<span class=\"k\">.</span>getNodesByTagName<span class=\"k\">(</span><span class=\"s\">'code'</span><span class=\"k\">),</span><span class=\"k\">function</span><span class=\"k\">(</span>ci<span class=\"k\">)</span><span class=\"k\">{</span>","                    <span class=\"k\">if</span><span class=\"k\">(</span>parentCode <span class=\"k\">!==</span> ci<span class=\"k\">.</span>parentNode<span class=\"k\">)</span><span class=\"k\">{</span>","                        parentCode <span class=\"k\">=</span> ci<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","                        <span class=\"c\">//&#21435;&#25481;&#24038;&#21491;&#31354;&#26684;&#65292;&#38024;&#23545;ie&#30340;&#19981;&#33021;&#22238;&#36864;&#30340;&#38382;&#39064;</span>","                        str<span class=\"k\">.</span>push<span class=\"k\">(</span>utils<span class=\"k\">.</span>trim<span class=\"k\">(</span>parentCode<span class=\"k\">.</span>innerText<span class=\"k\">()))</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span><span class=\"k\">);</span>","                node<span class=\"k\">.</span>tagName <span class=\"k\">=</span> <span class=\"s\">'pre'</span><span class=\"k\">;</span>","                val <span class=\"k\">=</span> node<span class=\"k\">.</span>getAttr<span class=\"k\">(</span><span class=\"s\">'class'</span><span class=\"k\">);</span>","                node<span class=\"k\">.</span>setAttr<span class=\"k\">();</span>","                node<span class=\"k\">.</span>setAttr<span class=\"k\">(</span><span class=\"s\">'class'</span><span class=\"k\">,</span> <span class=\"s\">'brush: '</span><span class=\"k\">+</span>val<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/\\s+/g</span><span class=\"k\">,</span><span class=\"s\">' '</span><span class=\"k\">).</span>split<span class=\"k\">(</span><span class=\"s\">' '</span><span class=\"k\">)[</span><span class=\"s\">1</span><span class=\"k\">]+</span><span class=\"s\">';toolbar:false;'</span><span class=\"k\">);</span>","                node<span class=\"k\">.</span>children <span class=\"k\">=</span> <span class=\"k\">[];</span>","                node<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>UE<span class=\"k\">.</span>uNode<span class=\"k\">.</span>createText<span class=\"k\">(</span>str<span class=\"k\">.</span>join<span class=\"k\">(</span><span class=\"s\">'</span><span class=\"t\">\\n</span><span class=\"s\">'</span><span class=\"k\">)))</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">)</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","    me<span class=\"k\">.</span>addInputRule<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>root<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">var</span> me <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","        <span class=\"k\">if</span><span class=\"k\">(!</span>me<span class=\"k\">.</span>window<span class=\"k\">||!</span>me<span class=\"k\">.</span>window<span class=\"k\">.</span>SyntaxHighlighter<span class=\"k\">)</span><span class=\"k\">return</span><span class=\"k\">;</span>","        utils<span class=\"k\">.</span>each<span class=\"k\">(</span>root<span class=\"k\">.</span>getNodesByTagName<span class=\"k\">(</span><span class=\"s\">'pre'</span><span class=\"k\">),</span><span class=\"k\">function</span><span class=\"k\">(</span>pi<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">var</span> val<span class=\"k\">;</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>val <span class=\"k\">=</span> pi<span class=\"k\">.</span>getAttr<span class=\"k\">(</span><span class=\"s\">'class'</span><span class=\"k\">))</span><span class=\"k\">{</span>","                <span class=\"k\">if</span><span class=\"k\">(</span><span class=\"s\">/brush/</span><span class=\"k\">.</span>test<span class=\"k\">(</span>val<span class=\"k\">))</span><span class=\"k\">{</span>","                    <span class=\"k\">var</span> tmpDiv <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'div'</span><span class=\"k\">);</span>","                    tmpDiv<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> pi<span class=\"k\">.</span>toHtml<span class=\"k\">();</span>","                    me<span class=\"k\">.</span>window<span class=\"k\">.</span>SyntaxHighlighter<span class=\"k\">.</span>highlight<span class=\"k\">(</span><span class=\"k\">null</span><span class=\"k\">,</span>tmpDiv<span class=\"k\">.</span>firstChild<span class=\"k\">);</span>","                    <span class=\"k\">var</span> node <span class=\"k\">=</span> UE<span class=\"k\">.</span>uNode<span class=\"k\">.</span>createElement<span class=\"k\">(</span>tmpDiv<span class=\"k\">.</span>innerHTML<span class=\"k\">);</span>","                    pi<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>replaceChild<span class=\"k\">(</span>node<span class=\"k\">,</span>pi<span class=\"k\">)</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>domUtils<span class=\"k\">.</span>hasClass<span class=\"k\">(</span>pi<span class=\"k\">,</span><span class=\"s\">'brush'</span><span class=\"k\">))</span><span class=\"k\">{</span>","                me<span class=\"k\">.</span>window<span class=\"k\">.</span>SyntaxHighlighter<span class=\"k\">.</span>highlight<span class=\"k\">(</span>pi<span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","    me<span class=\"k\">.</span>addListener<span class=\"k\">(</span><span class=\"s\">\"aftergetscene\"</span><span class=\"k\">,</span>changePre<span class=\"k\">);</span>","","","    <span class=\"c\">//&#36991;&#20813;table&#25554;&#20214;&#23545;&#20110;&#20195;&#30721;&#39640;&#20142;&#30340;&#24433;&#21709;</span>","    me<span class=\"k\">.</span>addListener<span class=\"k\">(</span><span class=\"s\">'excludetable excludeNodeinautotype'</span><span class=\"k\">,</span><span class=\"k\">function</span> <span class=\"k\">(</span>cmd<span class=\"k\">,</span>target<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">if</span><span class=\"k\">(</span>target <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>findParent<span class=\"k\">(</span>target<span class=\"k\">,</span><span class=\"k\">function</span><span class=\"k\">(</span>node<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">return</span> domUtils<span class=\"k\">.</span>hasClass<span class=\"k\">(</span>node<span class=\"k\">,</span><span class=\"s\">'syntaxhighlighter'</span><span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span><span class=\"k\">true</span><span class=\"k\">))</span><span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","","    <span class=\"k\">function</span> changePre<span class=\"k\">()</span><span class=\"k\">{</span>","        <span class=\"k\">var</span> me <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","        <span class=\"k\">if</span><span class=\"k\">(!</span>me<span class=\"k\">.</span>window<span class=\"k\">||!</span>me<span class=\"k\">.</span>window<span class=\"k\">.</span>SyntaxHighlighter<span class=\"k\">)</span><span class=\"k\">return</span><span class=\"k\">;</span>","        utils<span class=\"k\">.</span>each<span class=\"k\">(</span>domUtils<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">,</span><span class=\"s\">\"pre\"</span><span class=\"k\">),</span><span class=\"k\">function</span><span class=\"k\">(</span>pi<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>domUtils<span class=\"k\">.</span>hasClass<span class=\"k\">(</span>pi<span class=\"k\">,</span><span class=\"s\">'brush'</span><span class=\"k\">))</span><span class=\"k\">{</span>","                me<span class=\"k\">.</span>window<span class=\"k\">.</span>SyntaxHighlighter<span class=\"k\">.</span>highlight<span class=\"k\">(</span>pi<span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    me<span class=\"k\">.</span>addListener<span class=\"k\">(</span><span class=\"s\">'getAllHtml'</span><span class=\"k\">,</span><span class=\"k\">function</span><span class=\"k\">(</span>type<span class=\"k\">,</span>headHtml<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">var</span> coreHtml <span class=\"k\">=</span> <span class=\"s\">''</span><span class=\"k\">;</span>","        <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> i<span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>ci<span class=\"k\">,</span>divs<span class=\"k\">=</span>domUtils<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">,</span><span class=\"s\">'table'</span><span class=\"k\">);</span>ci<span class=\"k\">=</span>divs<span class=\"k\">[</span>i<span class=\"k\">++];)</span><span class=\"k\">{</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>domUtils<span class=\"k\">.</span>hasClass<span class=\"k\">(</span>ci<span class=\"k\">,</span><span class=\"s\">'syntaxhighlighter'</span><span class=\"k\">))</span><span class=\"k\">{</span>","                coreHtml <span class=\"k\">=</span> <span class=\"s\">'&lt;script type=\"text/javascript\"&gt;window.onload = function(){SyntaxHighlighter.highlight();'</span> <span class=\"k\">+</span>","                    <span class=\"s\">'setTimeout(function(){ '</span><span class=\"k\">+</span>","                     <span class=\"s\">\"   var tables = document.getElementsByTagName('table');\"</span><span class=\"k\">+</span>","                     <span class=\"s\">\"   for(var t= 0,ti;ti=tables[t++];){\"</span><span class=\"k\">+</span>","                     <span class=\"s\">\"       if(/SyntaxHighlighter/i.test(ti.className)){\"</span><span class=\"k\">+</span>","                     <span class=\"s\">\"           var tds = ti.getElementsByTagName('td');\"</span><span class=\"k\">+</span>","                     <span class=\"s\">\"           for(var i=0,li,ri;li=tds[0].childNodes[i];i++){\"</span><span class=\"k\">+</span>","                     <span class=\"s\">\"               ri = tds[1].firstChild.childNodes[i];\"</span><span class=\"k\">+</span>","                     <span class=\"s\">\"               if(ri){\"</span><span class=\"k\">+</span>","                     <span class=\"s\">\"                  ri.style.height = li.style.height = ri.offsetHeight + 'px';\"</span><span class=\"k\">+</span>","                     <span class=\"s\">\"               }\"</span><span class=\"k\">+</span>","                     <span class=\"s\">\"           }\"</span><span class=\"k\">+</span>","                     <span class=\"s\">\"       }\"</span><span class=\"k\">+</span>","                     <span class=\"s\">\"   }\"</span><span class=\"k\">+</span>","                    <span class=\"s\">'},100)'</span> <span class=\"k\">+</span>","                    <span class=\"s\">'}&lt;/script&gt;'</span>","                <span class=\"k\">break</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        <span class=\"k\">if</span><span class=\"k\">(!</span>coreHtml<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">var</span> tmpNode<span class=\"k\">;</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>tmpNode <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span><span class=\"s\">'syntaxhighlighter_css'</span><span class=\"k\">))</span><span class=\"k\">{</span>","                domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>tmpNode<span class=\"k\">)</span>","            <span class=\"k\">}</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>tmpNode <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span><span class=\"s\">'syntaxhighlighter_js'</span><span class=\"k\">))</span><span class=\"k\">{</span>","                domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>tmpNode<span class=\"k\">)</span>","","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        coreHtml <span class=\"k\">&amp;&amp;</span> headHtml<span class=\"k\">.</span>push<span class=\"k\">(</span>coreHtml<span class=\"k\">)</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","","<span class=\"k\">}</span><span class=\"k\">;</span>"];
_$jscoverage['plugins/highlightcode.js'][7]++;
UE.plugins.highlightcode = (function () {
  _$jscoverage['plugins/highlightcode.js'][8]++;
  var me = this;
  _$jscoverage['plugins/highlightcode.js'][9]++;
  if ((! /highlightcode/i.test(me.options.toolbars.join("")))) {
    _$jscoverage['plugins/highlightcode.js'][10]++;
    return;
  }
  _$jscoverage['plugins/highlightcode.js'][13]++;
  me.commands.highlightcode = {execCommand: (function (cmdName, code, syntax) {
  _$jscoverage['plugins/highlightcode.js'][15]++;
  var range = this.selection.getRange(), start = domUtils.findParentByTagName(range.startContainer, "table", true), end = domUtils.findParentByTagName(range.endContainer, "table", true);
  _$jscoverage['plugins/highlightcode.js'][18]++;
  if ((start && end && (start === end) && domUtils.hasClass(start, "syntaxhighlighter"))) {
    _$jscoverage['plugins/highlightcode.js'][19]++;
    if (start.nextSibling) {
      _$jscoverage['plugins/highlightcode.js'][20]++;
      range.setStart(start.nextSibling, 0);
    }
    else {
      _$jscoverage['plugins/highlightcode.js'][22]++;
      if (start.previousSibling) {
        _$jscoverage['plugins/highlightcode.js'][23]++;
        range.setStartAtLast(start.previousSibling);
      }
      else {
        _$jscoverage['plugins/highlightcode.js'][25]++;
        var p = me.document.createElement("p");
        _$jscoverage['plugins/highlightcode.js'][26]++;
        domUtils.fillNode(me.document, p);
        _$jscoverage['plugins/highlightcode.js'][27]++;
        start.parentNode.insertBefore(p, start);
        _$jscoverage['plugins/highlightcode.js'][28]++;
        range.setStart(p, 0);
      }
    }
    _$jscoverage['plugins/highlightcode.js'][31]++;
    range.setCursor(false, true);
    _$jscoverage['plugins/highlightcode.js'][32]++;
    domUtils.remove(start);
  }
  _$jscoverage['plugins/highlightcode.js'][34]++;
  if ((code && syntax)) {
    _$jscoverage['plugins/highlightcode.js'][35]++;
    me.execCommand("inserthtml", ("<pre id=\"highlightcode_id\" class=\"brush: " + syntax + ";toolbar:false;\">" + utils.unhtml(code) + "</pre>"), true);
    _$jscoverage['plugins/highlightcode.js'][36]++;
    var pre = me.document.getElementById("highlightcode_id");
    _$jscoverage['plugins/highlightcode.js'][37]++;
    if (pre) {
      _$jscoverage['plugins/highlightcode.js'][38]++;
      domUtils.removeAttributes(pre, "id");
      _$jscoverage['plugins/highlightcode.js'][39]++;
      me.window.SyntaxHighlighter.highlight(pre);
    }
  }
}), queryCommandState: (function () {
  _$jscoverage['plugins/highlightcode.js'][45]++;
  return queryHighlight.call(this);
})};
  _$jscoverage['plugins/highlightcode.js'][49]++;
  function queryHighlight() {
    _$jscoverage['plugins/highlightcode.js'][50]++;
    try {
      _$jscoverage['plugins/highlightcode.js'][51]++;
      var range = this.selection.getRange(), start, end;
      _$jscoverage['plugins/highlightcode.js'][52]++;
      range.adjustmentBoundary();
      _$jscoverage['plugins/highlightcode.js'][53]++;
      start = domUtils.findParent(range.startContainer, (function (node) {
  _$jscoverage['plugins/highlightcode.js'][54]++;
  return ((node.nodeType == 1) && (node.tagName == "TABLE") && domUtils.hasClass(node, "syntaxhighlighter"));
}), true);
      _$jscoverage['plugins/highlightcode.js'][56]++;
      end = domUtils.findParent(range.endContainer, (function (node) {
  _$jscoverage['plugins/highlightcode.js'][57]++;
  return ((node.nodeType == 1) && (node.tagName == "TABLE") && domUtils.hasClass(node, "syntaxhighlighter"));
}), true);
      _$jscoverage['plugins/highlightcode.js'][59]++;
      return ((start && end && (start == end))? 1: 0);
    }
    catch (e) {
      _$jscoverage['plugins/highlightcode.js'][61]++;
      return 0;
    }
}
  _$jscoverage['plugins/highlightcode.js'][66]++;
  me.notNeedHighlightQuery = {help: 1, undo: 1, redo: 1, source: 1, print: 1, searchreplace: 1, fullscreen: 1, preview: 1, insertparagraph: 1, elementpath: 1, highlightcode: 1};
  _$jscoverage['plugins/highlightcode.js'][80]++;
  var orgQuery = me.queryCommandState;
  _$jscoverage['plugins/highlightcode.js'][81]++;
  me.queryCommandState = (function (cmd) {
  _$jscoverage['plugins/highlightcode.js'][82]++;
  if (((! me.notNeedHighlightQuery[cmd.toLowerCase()]) && (queryHighlight.call(this) == 1))) {
    _$jscoverage['plugins/highlightcode.js'][83]++;
    return -1;
  }
  _$jscoverage['plugins/highlightcode.js'][85]++;
  return orgQuery.apply(this, arguments);
});
  _$jscoverage['plugins/highlightcode.js'][88]++;
  me.addListener("beforeselectionchange afterselectionchange", (function (type) {
  _$jscoverage['plugins/highlightcode.js'][89]++;
  me.highlight = (/^b/.test(type)? me.queryCommandState("highlightcode"): 0);
}));
  _$jscoverage['plugins/highlightcode.js'][93]++;
  me.addListener("ready", (function () {
  _$jscoverage['plugins/highlightcode.js'][95]++;
  if (((typeof me.XRegExp) == "undefined")) {
    _$jscoverage['plugins/highlightcode.js'][96]++;
    utils.loadFile(me.document, {id: "syntaxhighlighter_js", src: (me.options.highlightJsUrl || (me.options.UEDITOR_HOME_URL + "third-party/SyntaxHighlighter/shCore.js")), tag: "script", type: "text/javascript", defer: "defer"}, (function () {
  _$jscoverage['plugins/highlightcode.js'][103]++;
  changePre.call(me);
}));
  }
  _$jscoverage['plugins/highlightcode.js'][106]++;
  if ((! me.document.getElementById("syntaxhighlighter_css"))) {
    _$jscoverage['plugins/highlightcode.js'][107]++;
    utils.loadFile(me.document, {id: "syntaxhighlighter_css", tag: "link", rel: "stylesheet", type: "text/css", href: (me.options.highlightCssUrl || (me.options.UEDITOR_HOME_URL + "third-party/SyntaxHighlighter/shCoreDefault.css"))});
  }
}));
  _$jscoverage['plugins/highlightcode.js'][117]++;
  me.addListener("beforegetscene", (function () {
  _$jscoverage['plugins/highlightcode.js'][118]++;
  utils.each(domUtils.getElementsByTagName(me.body, "table", "syntaxhighlighter"), (function (di) {
  _$jscoverage['plugins/highlightcode.js'][119]++;
  var str = [], parentCode = "";
  _$jscoverage['plugins/highlightcode.js'][120]++;
  utils.each(di.getElementsByTagName("code"), (function (ci) {
  _$jscoverage['plugins/highlightcode.js'][121]++;
  if ((parentCode !== ci.parentNode)) {
    _$jscoverage['plugins/highlightcode.js'][122]++;
    parentCode = ci.parentNode;
    _$jscoverage['plugins/highlightcode.js'][124]++;
    str.push(utils.trim(parentCode[(browser.ie? "innerText": "textContent")]));
  }
}));
  _$jscoverage['plugins/highlightcode.js'][128]++;
  var pre = domUtils.createElement(me.document, "pre", {"class": ("brush: " + di.className.replace(/\s+/g, " ").split(" ")[1] + ";toolbar:false;")});
  _$jscoverage['plugins/highlightcode.js'][131]++;
  pre.appendChild(me.document.createTextNode(str.join("\n")));
  _$jscoverage['plugins/highlightcode.js'][132]++;
  di.parentNode.replaceChild(pre, di);
}));
}));
  _$jscoverage['plugins/highlightcode.js'][135]++;
  me.addOutputRule((function (root) {
  _$jscoverage['plugins/highlightcode.js'][136]++;
  utils.each(root.getNodesByTagName("table"), (function (node) {
  _$jscoverage['plugins/highlightcode.js'][137]++;
  var val;
  _$jscoverage['plugins/highlightcode.js'][138]++;
  if (((val = node.getAttr("class")) && /syntaxhighlighter/.test(val))) {
    _$jscoverage['plugins/highlightcode.js'][139]++;
    var str = [], parentCode = "";
    _$jscoverage['plugins/highlightcode.js'][140]++;
    utils.each(node.getNodesByTagName("code"), (function (ci) {
  _$jscoverage['plugins/highlightcode.js'][141]++;
  if ((parentCode !== ci.parentNode)) {
    _$jscoverage['plugins/highlightcode.js'][142]++;
    parentCode = ci.parentNode;
    _$jscoverage['plugins/highlightcode.js'][144]++;
    str.push(utils.trim(parentCode.innerText()));
  }
}));
    _$jscoverage['plugins/highlightcode.js'][147]++;
    node.tagName = "pre";
    _$jscoverage['plugins/highlightcode.js'][148]++;
    val = node.getAttr("class");
    _$jscoverage['plugins/highlightcode.js'][149]++;
    node.setAttr();
    _$jscoverage['plugins/highlightcode.js'][150]++;
    node.setAttr("class", ("brush: " + val.replace(/\s+/g, " ").split(" ")[1] + ";toolbar:false;"));
    _$jscoverage['plugins/highlightcode.js'][151]++;
    node.children = [];
    _$jscoverage['plugins/highlightcode.js'][152]++;
    node.appendChild(UE.uNode.createText(str.join("\n")));
  }
}));
}));
  _$jscoverage['plugins/highlightcode.js'][156]++;
  me.addInputRule((function (root) {
  _$jscoverage['plugins/highlightcode.js'][157]++;
  var me = this;
  _$jscoverage['plugins/highlightcode.js'][158]++;
  if (((! me.window) || (! me.window.SyntaxHighlighter))) {
    _$jscoverage['plugins/highlightcode.js'][158]++;
    return;
  }
  _$jscoverage['plugins/highlightcode.js'][159]++;
  utils.each(root.getNodesByTagName("pre"), (function (pi) {
  _$jscoverage['plugins/highlightcode.js'][160]++;
  var val;
  _$jscoverage['plugins/highlightcode.js'][161]++;
  if ((val = pi.getAttr("class"))) {
    _$jscoverage['plugins/highlightcode.js'][162]++;
    if (/brush/.test(val)) {
      _$jscoverage['plugins/highlightcode.js'][163]++;
      var tmpDiv = me.document.createElement("div");
      _$jscoverage['plugins/highlightcode.js'][164]++;
      tmpDiv.innerHTML = pi.toHtml();
      _$jscoverage['plugins/highlightcode.js'][165]++;
      me.window.SyntaxHighlighter.highlight(null, tmpDiv.firstChild);
      _$jscoverage['plugins/highlightcode.js'][166]++;
      var node = UE.uNode.createElement(tmpDiv.innerHTML);
      _$jscoverage['plugins/highlightcode.js'][167]++;
      pi.parentNode.replaceChild(node, pi);
    }
  }
  _$jscoverage['plugins/highlightcode.js'][170]++;
  if (domUtils.hasClass(pi, "brush")) {
    _$jscoverage['plugins/highlightcode.js'][171]++;
    me.window.SyntaxHighlighter.highlight(pi);
  }
}));
}));
  _$jscoverage['plugins/highlightcode.js'][175]++;
  me.addListener("aftergetscene", changePre);
  _$jscoverage['plugins/highlightcode.js'][179]++;
  me.addListener("excludetable excludeNodeinautotype", (function (cmd, target) {
  _$jscoverage['plugins/highlightcode.js'][180]++;
  if ((target && domUtils.findParent(target, (function (node) {
  _$jscoverage['plugins/highlightcode.js'][181]++;
  return domUtils.hasClass(node, "syntaxhighlighter");
}), true))) {
    _$jscoverage['plugins/highlightcode.js'][183]++;
    return true;
  }
}));
  _$jscoverage['plugins/highlightcode.js'][187]++;
  function changePre() {
    _$jscoverage['plugins/highlightcode.js'][188]++;
    var me = this;
    _$jscoverage['plugins/highlightcode.js'][189]++;
    if (((! me.window) || (! me.window.SyntaxHighlighter))) {
      _$jscoverage['plugins/highlightcode.js'][189]++;
      return;
    }
    _$jscoverage['plugins/highlightcode.js'][190]++;
    utils.each(domUtils.getElementsByTagName(me.document, "pre"), (function (pi) {
  _$jscoverage['plugins/highlightcode.js'][191]++;
  if (domUtils.hasClass(pi, "brush")) {
    _$jscoverage['plugins/highlightcode.js'][192]++;
    me.window.SyntaxHighlighter.highlight(pi);
  }
}));
}
  _$jscoverage['plugins/highlightcode.js'][197]++;
  me.addListener("getAllHtml", (function (type, headHtml) {
  _$jscoverage['plugins/highlightcode.js'][198]++;
  var coreHtml = "";
  _$jscoverage['plugins/highlightcode.js'][199]++;
  for (var i = 0, ci, divs = domUtils.getElementsByTagName(me.document, "table"); (ci = divs[(i++)]);) {
    _$jscoverage['plugins/highlightcode.js'][200]++;
    if (domUtils.hasClass(ci, "syntaxhighlighter")) {
      _$jscoverage['plugins/highlightcode.js'][201]++;
      coreHtml = "<script type=\"text/javascript\">window.onload = function(){SyntaxHighlighter.highlight();setTimeout(function(){    var tables = document.getElementsByTagName('table');   for(var t= 0,ti;ti=tables[t++];){       if(/SyntaxHighlighter/i.test(ti.className)){           var tds = ti.getElementsByTagName('td');           for(var i=0,li,ri;li=tds[0].childNodes[i];i++){               ri = tds[1].firstChild.childNodes[i];               if(ri){                  ri.style.height = li.style.height = ri.offsetHeight + 'px';               }           }       }   }},100)}</script>";
      _$jscoverage['plugins/highlightcode.js'][217]++;
      break;
    }
}
  _$jscoverage['plugins/highlightcode.js'][220]++;
  if ((! coreHtml)) {
    _$jscoverage['plugins/highlightcode.js'][221]++;
    var tmpNode;
    _$jscoverage['plugins/highlightcode.js'][222]++;
    if ((tmpNode = me.document.getElementById("syntaxhighlighter_css"))) {
      _$jscoverage['plugins/highlightcode.js'][223]++;
      domUtils.remove(tmpNode);
    }
    _$jscoverage['plugins/highlightcode.js'][225]++;
    if ((tmpNode = me.document.getElementById("syntaxhighlighter_js"))) {
      _$jscoverage['plugins/highlightcode.js'][226]++;
      domUtils.remove(tmpNode);
    }
  }
  _$jscoverage['plugins/highlightcode.js'][230]++;
  (coreHtml && headHtml.push(coreHtml));
}));
});
