/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['plugins/basestyle.js']) {
  _$jscoverage['plugins/basestyle.js'] = [];
  _$jscoverage['plugins/basestyle.js'][11] = 0;
  _$jscoverage['plugins/basestyle.js'][13] = 0;
  _$jscoverage['plugins/basestyle.js'][20] = 0;
  _$jscoverage['plugins/basestyle.js'][24] = 0;
  _$jscoverage['plugins/basestyle.js'][29] = 0;
  _$jscoverage['plugins/basestyle.js'][30] = 0;
  _$jscoverage['plugins/basestyle.js'][31] = 0;
  _$jscoverage['plugins/basestyle.js'][33] = 0;
  _$jscoverage['plugins/basestyle.js'][34] = 0;
  _$jscoverage['plugins/basestyle.js'][36] = 0;
  _$jscoverage['plugins/basestyle.js'][40] = 0;
  _$jscoverage['plugins/basestyle.js'][41] = 0;
  _$jscoverage['plugins/basestyle.js'][42] = 0;
  _$jscoverage['plugins/basestyle.js'][44] = 0;
  _$jscoverage['plugins/basestyle.js'][45] = 0;
  _$jscoverage['plugins/basestyle.js'][46] = 0;
  _$jscoverage['plugins/basestyle.js'][47] = 0;
  _$jscoverage['plugins/basestyle.js'][48] = 0;
  _$jscoverage['plugins/basestyle.js'][49] = 0;
  _$jscoverage['plugins/basestyle.js'][50] = 0;
  _$jscoverage['plugins/basestyle.js'][52] = 0;
  _$jscoverage['plugins/basestyle.js'][53] = 0;
  _$jscoverage['plugins/basestyle.js'][54] = 0;
  _$jscoverage['plugins/basestyle.js'][55] = 0;
  _$jscoverage['plugins/basestyle.js'][60] = 0;
  _$jscoverage['plugins/basestyle.js'][62] = 0;
  _$jscoverage['plugins/basestyle.js'][64] = 0;
  _$jscoverage['plugins/basestyle.js'][65] = 0;
  _$jscoverage['plugins/basestyle.js'][66] = 0;
  _$jscoverage['plugins/basestyle.js'][69] = 0;
  _$jscoverage['plugins/basestyle.js'][71] = 0;
  _$jscoverage['plugins/basestyle.js'][74] = 0;
}
_$jscoverage['plugins/basestyle.js'].source = ["<span class=\"c\">///import core</span>","<span class=\"c\">///commands &#21152;&#31895;,&#26012;&#20307;,&#19978;&#26631;,&#19979;&#26631;</span>","<span class=\"c\">///commandsName  Bold,Italic,Subscript,Superscript</span>","<span class=\"c\">///commandsTitle  &#21152;&#31895;,&#21152;&#26012;,&#19979;&#26631;,&#19978;&#26631;</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * b u i&#31561;&#22522;&#30784;&#21151;&#33021;&#23454;&#29616;</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @name baidu.editor.execCommands</span>","<span class=\"c\"> * @param    {String}    cmdName    bold&#21152;&#31895;&#12290;italic&#26012;&#20307;&#12290;subscript&#19978;&#26631;&#12290;superscript&#19979;&#26631;&#12290;</span>","<span class=\"c\">*/</span>","UE<span class=\"k\">.</span>plugins<span class=\"k\">[</span><span class=\"s\">'basestyle'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","","    <span class=\"k\">var</span> basestyles <span class=\"k\">=</span> <span class=\"k\">{</span>","            <span class=\"s\">'bold'</span><span class=\"k\">:[</span><span class=\"s\">'strong'</span><span class=\"k\">,</span><span class=\"s\">'b'</span><span class=\"k\">],</span>","            <span class=\"s\">'italic'</span><span class=\"k\">:[</span><span class=\"s\">'em'</span><span class=\"k\">,</span><span class=\"s\">'i'</span><span class=\"k\">],</span>","            <span class=\"s\">'subscript'</span><span class=\"k\">:[</span><span class=\"s\">'sub'</span><span class=\"k\">],</span>","            <span class=\"s\">'superscript'</span><span class=\"k\">:[</span><span class=\"s\">'sup'</span><span class=\"k\">]</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        getObj <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>editor<span class=\"k\">,</span>tagNames<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">return</span> domUtils<span class=\"k\">.</span>filterNodeList<span class=\"k\">(</span>editor<span class=\"k\">.</span>selection<span class=\"k\">.</span>getStartElementPath<span class=\"k\">(),</span>tagNames<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        me <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","    <span class=\"c\">//&#28155;&#21152;&#24555;&#25463;&#38190;</span>","    me<span class=\"k\">.</span>addshortcutkey<span class=\"k\">(</span><span class=\"k\">{</span>","        <span class=\"s\">\"Bold\"</span> <span class=\"k\">:</span> <span class=\"s\">\"ctrl+66\"</span><span class=\"k\">,</span><span class=\"c\">//^B</span>","        <span class=\"s\">\"Italic\"</span> <span class=\"k\">:</span> <span class=\"s\">\"ctrl+73\"</span><span class=\"k\">,</span> <span class=\"c\">//^I</span>","        <span class=\"s\">\"Underline\"</span> <span class=\"k\">:</span> <span class=\"s\">\"ctrl+85\"</span><span class=\"c\">//^U</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","    me<span class=\"k\">.</span>addInputRule<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>root<span class=\"k\">)</span><span class=\"k\">{</span>","        utils<span class=\"k\">.</span>each<span class=\"k\">(</span>root<span class=\"k\">.</span>getNodesByTagName<span class=\"k\">(</span><span class=\"s\">'b i'</span><span class=\"k\">),</span><span class=\"k\">function</span><span class=\"k\">(</span>node<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">switch</span> <span class=\"k\">(</span>node<span class=\"k\">.</span>tagName<span class=\"k\">)</span><span class=\"k\">{</span>","                <span class=\"k\">case</span> <span class=\"s\">'b'</span><span class=\"k\">:</span>","                    node<span class=\"k\">.</span>tagName <span class=\"k\">=</span> <span class=\"s\">'strong'</span><span class=\"k\">;</span>","                    <span class=\"k\">break</span><span class=\"k\">;</span>","                <span class=\"k\">case</span> <span class=\"s\">'i'</span><span class=\"k\">:</span>","                    node<span class=\"k\">.</span>tagName <span class=\"k\">=</span> <span class=\"s\">'em'</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">var</span> style <span class=\"k\">in</span> basestyles <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span> cmd<span class=\"k\">,</span> tagNames <span class=\"k\">)</span> <span class=\"k\">{</span>","            me<span class=\"k\">.</span>commands<span class=\"k\">[</span>cmd<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","                execCommand <span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> cmdName <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> range <span class=\"k\">=</span> me<span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">(),</span>obj <span class=\"k\">=</span> getObj<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span>tagNames<span class=\"k\">);</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> range<span class=\"k\">.</span>collapsed <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> obj <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">var</span> tmpText <span class=\"k\">=</span>  me<span class=\"k\">.</span>document<span class=\"k\">.</span>createTextNode<span class=\"k\">(</span><span class=\"s\">''</span><span class=\"k\">);</span>","                            range<span class=\"k\">.</span>insertNode<span class=\"k\">(</span> tmpText <span class=\"k\">).</span>removeInlineStyle<span class=\"k\">(</span> tagNames <span class=\"k\">);</span>","                            range<span class=\"k\">.</span>setStartBefore<span class=\"k\">(</span>tmpText<span class=\"k\">);</span>","                            domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>tmpText<span class=\"k\">);</span>","                        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                            <span class=\"k\">var</span> tmpNode <span class=\"k\">=</span> range<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span> tagNames<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">);</span>","                            <span class=\"k\">if</span><span class=\"k\">(</span>cmdName <span class=\"k\">==</span> <span class=\"s\">'superscript'</span> <span class=\"k\">||</span> cmdName <span class=\"k\">==</span> <span class=\"s\">'subscript'</span><span class=\"k\">)</span><span class=\"k\">{</span>","                                tmpText <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createTextNode<span class=\"k\">(</span><span class=\"s\">''</span><span class=\"k\">);</span>","                                range<span class=\"k\">.</span>insertNode<span class=\"k\">(</span>tmpText<span class=\"k\">)</span>","                                    <span class=\"k\">.</span>removeInlineStyle<span class=\"k\">([</span><span class=\"s\">'sub'</span><span class=\"k\">,</span><span class=\"s\">'sup'</span><span class=\"k\">])</span>","                                    <span class=\"k\">.</span>setStartBefore<span class=\"k\">(</span>tmpText<span class=\"k\">)</span>","                                    <span class=\"k\">.</span>collapse<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","                            <span class=\"k\">}</span>","                            range<span class=\"k\">.</span>insertNode<span class=\"k\">(</span> tmpNode <span class=\"k\">).</span>setStart<span class=\"k\">(</span> tmpNode<span class=\"k\">,</span> <span class=\"s\">0</span> <span class=\"k\">);</span>","                        <span class=\"k\">}</span>","                        range<span class=\"k\">.</span>collapse<span class=\"k\">(</span> <span class=\"k\">true</span> <span class=\"k\">);</span>","                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                        <span class=\"k\">if</span><span class=\"k\">(</span>cmdName <span class=\"k\">==</span> <span class=\"s\">'superscript'</span> <span class=\"k\">||</span> cmdName <span class=\"k\">==</span> <span class=\"s\">'subscript'</span><span class=\"k\">)</span><span class=\"k\">{</span>","                            <span class=\"k\">if</span><span class=\"k\">(!</span>obj <span class=\"k\">||</span> obj<span class=\"k\">.</span>tagName<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">!=</span> cmdName<span class=\"k\">)</span><span class=\"k\">{</span>","                                range<span class=\"k\">.</span>removeInlineStyle<span class=\"k\">([</span><span class=\"s\">'sub'</span><span class=\"k\">,</span><span class=\"s\">'sup'</span><span class=\"k\">]);</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","                        obj <span class=\"k\">?</span> range<span class=\"k\">.</span>removeInlineStyle<span class=\"k\">(</span> tagNames <span class=\"k\">)</span> <span class=\"k\">:</span> range<span class=\"k\">.</span>applyInlineStyle<span class=\"k\">(</span> tagNames<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                    range<span class=\"k\">.</span>select<span class=\"k\">();</span>","                <span class=\"k\">}</span><span class=\"k\">,</span>","                queryCommandState <span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                   <span class=\"k\">return</span> getObj<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span>tagNames<span class=\"k\">)</span> <span class=\"k\">?</span> <span class=\"s\">1</span> <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">)(</span> style<span class=\"k\">,</span> basestyles<span class=\"k\">[</span>style<span class=\"k\">]</span> <span class=\"k\">);</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span>",""];
_$jscoverage['plugins/basestyle.js'][11]++;
UE.plugins.basestyle = (function () {
  _$jscoverage['plugins/basestyle.js'][13]++;
  var basestyles = {"bold": ["strong", "b"], "italic": ["em", "i"], "subscript": ["sub"], "superscript": ["sup"]}, getObj = (function (editor, tagNames) {
  _$jscoverage['plugins/basestyle.js'][20]++;
  return domUtils.filterNodeList(editor.selection.getStartElementPath(), tagNames);
}), me = this;
  _$jscoverage['plugins/basestyle.js'][24]++;
  me.addshortcutkey({"Bold": "ctrl+66", "Italic": "ctrl+73", "Underline": "ctrl+85"});
  _$jscoverage['plugins/basestyle.js'][29]++;
  me.addInputRule((function (root) {
  _$jscoverage['plugins/basestyle.js'][30]++;
  utils.each(root.getNodesByTagName("b i"), (function (node) {
  _$jscoverage['plugins/basestyle.js'][31]++;
  switch (node.tagName) {
  case "b":
    _$jscoverage['plugins/basestyle.js'][33]++;
    node.tagName = "strong";
    _$jscoverage['plugins/basestyle.js'][34]++;
    break;
  case "i":
    _$jscoverage['plugins/basestyle.js'][36]++;
    node.tagName = "em";
  }
}));
}));
  _$jscoverage['plugins/basestyle.js'][40]++;
  for (var style in basestyles) {
    _$jscoverage['plugins/basestyle.js'][41]++;
    (function (cmd, tagNames) {
  _$jscoverage['plugins/basestyle.js'][42]++;
  me.commands[cmd] = {execCommand: (function (cmdName) {
  _$jscoverage['plugins/basestyle.js'][44]++;
  var range = me.selection.getRange(), obj = getObj(this, tagNames);
  _$jscoverage['plugins/basestyle.js'][45]++;
  if (range.collapsed) {
    _$jscoverage['plugins/basestyle.js'][46]++;
    if (obj) {
      _$jscoverage['plugins/basestyle.js'][47]++;
      var tmpText = me.document.createTextNode("");
      _$jscoverage['plugins/basestyle.js'][48]++;
      range.insertNode(tmpText).removeInlineStyle(tagNames);
      _$jscoverage['plugins/basestyle.js'][49]++;
      range.setStartBefore(tmpText);
      _$jscoverage['plugins/basestyle.js'][50]++;
      domUtils.remove(tmpText);
    }
    else {
      _$jscoverage['plugins/basestyle.js'][52]++;
      var tmpNode = range.document.createElement(tagNames[0]);
      _$jscoverage['plugins/basestyle.js'][53]++;
      if (((cmdName == "superscript") || (cmdName == "subscript"))) {
        _$jscoverage['plugins/basestyle.js'][54]++;
        tmpText = me.document.createTextNode("");
        _$jscoverage['plugins/basestyle.js'][55]++;
        range.insertNode(tmpText).removeInlineStyle(["sub", "sup"]).setStartBefore(tmpText).collapse(true);
      }
      _$jscoverage['plugins/basestyle.js'][60]++;
      range.insertNode(tmpNode).setStart(tmpNode, 0);
    }
    _$jscoverage['plugins/basestyle.js'][62]++;
    range.collapse(true);
  }
  else {
    _$jscoverage['plugins/basestyle.js'][64]++;
    if (((cmdName == "superscript") || (cmdName == "subscript"))) {
      _$jscoverage['plugins/basestyle.js'][65]++;
      if (((! obj) || (obj.tagName.toLowerCase() != cmdName))) {
        _$jscoverage['plugins/basestyle.js'][66]++;
        range.removeInlineStyle(["sub", "sup"]);
      }
    }
    _$jscoverage['plugins/basestyle.js'][69]++;
    (obj? range.removeInlineStyle(tagNames): range.applyInlineStyle(tagNames[0]));
  }
  _$jscoverage['plugins/basestyle.js'][71]++;
  range.select();
}), queryCommandState: (function () {
  _$jscoverage['plugins/basestyle.js'][74]++;
  return (getObj(this, tagNames)? 1: 0);
})};
})(style, basestyles[style]);
}
});
