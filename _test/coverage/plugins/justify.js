/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['plugins/justify.js']) {
  _$jscoverage['plugins/justify.js'] = [];
  _$jscoverage['plugins/justify.js'][12] = 0;
  _$jscoverage['plugins/justify.js'][13] = 0;
  _$jscoverage['plugins/justify.js'][22] = 0;
  _$jscoverage['plugins/justify.js'][24] = 0;
  _$jscoverage['plugins/justify.js'][27] = 0;
  _$jscoverage['plugins/justify.js'][28] = 0;
  _$jscoverage['plugins/justify.js'][32] = 0;
  _$jscoverage['plugins/justify.js'][33] = 0;
  _$jscoverage['plugins/justify.js'][34] = 0;
  _$jscoverage['plugins/justify.js'][35] = 0;
  _$jscoverage['plugins/justify.js'][36] = 0;
  _$jscoverage['plugins/justify.js'][37] = 0;
  _$jscoverage['plugins/justify.js'][38] = 0;
  _$jscoverage['plugins/justify.js'][41] = 0;
  _$jscoverage['plugins/justify.js'][42] = 0;
  _$jscoverage['plugins/justify.js'][43] = 0;
  _$jscoverage['plugins/justify.js'][44] = 0;
  _$jscoverage['plugins/justify.js'][45] = 0;
  _$jscoverage['plugins/justify.js'][47] = 0;
  _$jscoverage['plugins/justify.js'][48] = 0;
  _$jscoverage['plugins/justify.js'][49] = 0;
  _$jscoverage['plugins/justify.js'][50] = 0;
  _$jscoverage['plugins/justify.js'][51] = 0;
  _$jscoverage['plugins/justify.js'][52] = 0;
  _$jscoverage['plugins/justify.js'][54] = 0;
  _$jscoverage['plugins/justify.js'][56] = 0;
  _$jscoverage['plugins/justify.js'][59] = 0;
  _$jscoverage['plugins/justify.js'][62] = 0;
  _$jscoverage['plugins/justify.js'][64] = 0;
  _$jscoverage['plugins/justify.js'][68] = 0;
  _$jscoverage['plugins/justify.js'][69] = 0;
  _$jscoverage['plugins/justify.js'][70] = 0;
  _$jscoverage['plugins/justify.js'][72] = 0;
  _$jscoverage['plugins/justify.js'][73] = 0;
  _$jscoverage['plugins/justify.js'][74] = 0;
  _$jscoverage['plugins/justify.js'][75] = 0;
  _$jscoverage['plugins/justify.js'][78] = 0;
  _$jscoverage['plugins/justify.js'][81] = 0;
  _$jscoverage['plugins/justify.js'][84] = 0;
  _$jscoverage['plugins/justify.js'][86] = 0;
  _$jscoverage['plugins/justify.js'][89] = 0;
  _$jscoverage['plugins/justify.js'][92] = 0;
}
_$jscoverage['plugins/justify.js'].source = ["<span class=\"c\">///import core</span>","<span class=\"c\">///commands &#27573;&#33853;&#26684;&#24335;,&#23621;&#24038;,&#23621;&#21491;,&#23621;&#20013;,&#20004;&#31471;&#23545;&#40784;</span>","<span class=\"c\">///commandsName  JustifyLeft,JustifyCenter,JustifyRight,JustifyJustify</span>","<span class=\"c\">///commandsTitle  &#23621;&#24038;&#23545;&#40784;,&#23621;&#20013;&#23545;&#40784;,&#23621;&#21491;&#23545;&#40784;,&#20004;&#31471;&#23545;&#40784;</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * @description &#23621;&#24038;&#21491;&#20013;</span>","<span class=\"c\"> * @name baidu.editor.execCommand</span>","<span class=\"c\"> * @param   {String}   cmdName     justify&#25191;&#34892;&#23545;&#40784;&#26041;&#24335;&#30340;&#21629;&#20196;</span>","<span class=\"c\"> * @param   {String}   align               &#23545;&#40784;&#26041;&#24335;&#65306;left&#23621;&#24038;&#65292;right&#23621;&#21491;&#65292;center&#23621;&#20013;&#65292;justify&#20004;&#31471;&#23545;&#40784;</span>","<span class=\"c\"> * @author zhanyi</span>","<span class=\"c\"> */</span>","UE<span class=\"k\">.</span>plugins<span class=\"k\">[</span><span class=\"s\">'justify'</span><span class=\"k\">]=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","    <span class=\"k\">var</span> me<span class=\"k\">=</span><span class=\"k\">this</span><span class=\"k\">,</span>","        block <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>isBlockElm<span class=\"k\">,</span>","        defaultValue <span class=\"k\">=</span> <span class=\"k\">{</span>","            left<span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","            right<span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","            center<span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","            justify<span class=\"k\">:</span><span class=\"s\">1</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        doJustify <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>range<span class=\"k\">,</span> style<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> bookmark <span class=\"k\">=</span> range<span class=\"k\">.</span>createBookmark<span class=\"k\">(),</span>","                filterFn <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> node<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">1</span> <span class=\"k\">?</span> node<span class=\"k\">.</span>tagName<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">!=</span> <span class=\"s\">'br'</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>domUtils<span class=\"k\">.</span>isBookmarkNode<span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">:</span> <span class=\"k\">!</span>domUtils<span class=\"k\">.</span>isWhitespace<span class=\"k\">(</span>node<span class=\"k\">);</span>","                <span class=\"k\">}</span><span class=\"k\">;</span>","","            range<span class=\"k\">.</span>enlarge<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","            <span class=\"k\">var</span> bookmark2 <span class=\"k\">=</span> range<span class=\"k\">.</span>createBookmark<span class=\"k\">(),</span>","                current <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getNextDomNode<span class=\"k\">(</span>bookmark2<span class=\"k\">.</span>start<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">,</span> filterFn<span class=\"k\">),</span>","                tmpRange <span class=\"k\">=</span> range<span class=\"k\">.</span>cloneRange<span class=\"k\">(),</span>","                tmpNode<span class=\"k\">;</span>","            <span class=\"k\">while</span> <span class=\"k\">(</span>current <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!(</span>domUtils<span class=\"k\">.</span>getPosition<span class=\"k\">(</span>current<span class=\"k\">,</span> bookmark2<span class=\"k\">.</span>end<span class=\"k\">)</span> <span class=\"k\">&amp;</span> domUtils<span class=\"k\">.</span>POSITION_FOLLOWING<span class=\"k\">))</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>current<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">3</span> <span class=\"k\">||</span> <span class=\"k\">!</span>block<span class=\"k\">(</span>current<span class=\"k\">))</span> <span class=\"k\">{</span>","                    tmpRange<span class=\"k\">.</span>setStartBefore<span class=\"k\">(</span>current<span class=\"k\">);</span>","                    <span class=\"k\">while</span> <span class=\"k\">(</span>current <span class=\"k\">&amp;&amp;</span> current <span class=\"k\">!==</span> bookmark2<span class=\"k\">.</span>end <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>block<span class=\"k\">(</span>current<span class=\"k\">))</span> <span class=\"k\">{</span>","                        tmpNode <span class=\"k\">=</span> current<span class=\"k\">;</span>","                        current <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getNextDomNode<span class=\"k\">(</span>current<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">return</span> <span class=\"k\">!</span>block<span class=\"k\">(</span>node<span class=\"k\">);</span>","                        <span class=\"k\">}</span><span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                    tmpRange<span class=\"k\">.</span>setEndAfter<span class=\"k\">(</span>tmpNode<span class=\"k\">);</span>","                    <span class=\"k\">var</span> common <span class=\"k\">=</span> tmpRange<span class=\"k\">.</span>getCommonAncestor<span class=\"k\">();</span>","                    <span class=\"k\">if</span> <span class=\"k\">(!</span>domUtils<span class=\"k\">.</span>isBody<span class=\"k\">(</span>common<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> block<span class=\"k\">(</span>common<span class=\"k\">))</span> <span class=\"k\">{</span>","                        domUtils<span class=\"k\">.</span>setStyles<span class=\"k\">(</span>common<span class=\"k\">,</span> utils<span class=\"k\">.</span>isString<span class=\"k\">(</span>style<span class=\"k\">)</span> <span class=\"k\">?</span> <span class=\"k\">{</span><span class=\"s\">'text-align'</span><span class=\"k\">:</span>style<span class=\"k\">}</span> <span class=\"k\">:</span> style<span class=\"k\">);</span>","                        current <span class=\"k\">=</span> common<span class=\"k\">;</span>","                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> p <span class=\"k\">=</span> range<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'p'</span><span class=\"k\">);</span>","                        domUtils<span class=\"k\">.</span>setStyles<span class=\"k\">(</span>p<span class=\"k\">,</span> utils<span class=\"k\">.</span>isString<span class=\"k\">(</span>style<span class=\"k\">)</span> <span class=\"k\">?</span> <span class=\"k\">{</span><span class=\"s\">'text-align'</span><span class=\"k\">:</span>style<span class=\"k\">}</span> <span class=\"k\">:</span> style<span class=\"k\">);</span>","                        <span class=\"k\">var</span> frag <span class=\"k\">=</span> tmpRange<span class=\"k\">.</span>extractContents<span class=\"k\">();</span>","                        p<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>frag<span class=\"k\">);</span>","                        tmpRange<span class=\"k\">.</span>insertNode<span class=\"k\">(</span>p<span class=\"k\">);</span>","                        current <span class=\"k\">=</span> p<span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                    current <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getNextDomNode<span class=\"k\">(</span>current<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">,</span> filterFn<span class=\"k\">);</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    current <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getNextDomNode<span class=\"k\">(</span>current<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">,</span> filterFn<span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","            <span class=\"k\">return</span> range<span class=\"k\">.</span>moveToBookmark<span class=\"k\">(</span>bookmark2<span class=\"k\">).</span>moveToBookmark<span class=\"k\">(</span>bookmark<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","","    UE<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">'justify'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","        execCommand<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>cmdName<span class=\"k\">,</span> align<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> range <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">(),</span>","                txt<span class=\"k\">;</span>","","            <span class=\"c\">//&#38381;&#21512;&#26102;&#21333;&#29420;&#22788;&#29702;</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>range<span class=\"k\">.</span>collapsed<span class=\"k\">)</span> <span class=\"k\">{</span>","                txt <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>document<span class=\"k\">.</span>createTextNode<span class=\"k\">(</span><span class=\"s\">'p'</span><span class=\"k\">);</span>","                range<span class=\"k\">.</span>insertNode<span class=\"k\">(</span>txt<span class=\"k\">);</span>","            <span class=\"k\">}</span>","            doJustify<span class=\"k\">(</span>range<span class=\"k\">,</span> align<span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>txt<span class=\"k\">)</span> <span class=\"k\">{</span>","                range<span class=\"k\">.</span>setStartBefore<span class=\"k\">(</span>txt<span class=\"k\">).</span>collapse<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","                domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>txt<span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            range<span class=\"k\">.</span>select<span class=\"k\">();</span>","","","            <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        queryCommandValue<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> startNode <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getStart<span class=\"k\">(),</span>","                value <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getComputedStyle<span class=\"k\">(</span>startNode<span class=\"k\">,</span> <span class=\"s\">'text-align'</span><span class=\"k\">);</span>","            <span class=\"k\">return</span> defaultValue<span class=\"k\">[</span>value<span class=\"k\">]</span> <span class=\"k\">?</span> value <span class=\"k\">:</span> <span class=\"s\">'left'</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        queryCommandState<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> start <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getStart<span class=\"k\">(),</span>","                cell <span class=\"k\">=</span> start <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>start<span class=\"k\">,</span> <span class=\"k\">[</span><span class=\"s\">\"td\"</span><span class=\"k\">,</span> <span class=\"s\">\"th\"</span><span class=\"k\">,</span><span class=\"s\">\"caption\"</span><span class=\"k\">],</span> <span class=\"k\">true</span><span class=\"k\">);</span>","","            <span class=\"k\">return</span> cell<span class=\"k\">?</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">:</span><span class=\"s\">0</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","    <span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"];
_$jscoverage['plugins/justify.js'][12]++;
UE.plugins.justify = (function () {
  _$jscoverage['plugins/justify.js'][13]++;
  var me = this, block = domUtils.isBlockElm, defaultValue = {left: 1, right: 1, center: 1, justify: 1}, doJustify = (function (range, style) {
  _$jscoverage['plugins/justify.js'][22]++;
  var bookmark = range.createBookmark(), filterFn = (function (node) {
  _$jscoverage['plugins/justify.js'][24]++;
  return ((node.nodeType == 1)? ((node.tagName.toLowerCase() != "br") && (! domUtils.isBookmarkNode(node))): (! domUtils.isWhitespace(node)));
});
  _$jscoverage['plugins/justify.js'][27]++;
  range.enlarge(true);
  _$jscoverage['plugins/justify.js'][28]++;
  var bookmark2 = range.createBookmark(), current = domUtils.getNextDomNode(bookmark2.start, false, filterFn), tmpRange = range.cloneRange(), tmpNode;
  _$jscoverage['plugins/justify.js'][32]++;
  while ((current && (! (domUtils.getPosition(current, bookmark2.end) & domUtils.POSITION_FOLLOWING)))) {
    _$jscoverage['plugins/justify.js'][33]++;
    if (((current.nodeType == 3) || (! block(current)))) {
      _$jscoverage['plugins/justify.js'][34]++;
      tmpRange.setStartBefore(current);
      _$jscoverage['plugins/justify.js'][35]++;
      while ((current && (current !== bookmark2.end) && (! block(current)))) {
        _$jscoverage['plugins/justify.js'][36]++;
        tmpNode = current;
        _$jscoverage['plugins/justify.js'][37]++;
        current = domUtils.getNextDomNode(current, false, null, (function (node) {
  _$jscoverage['plugins/justify.js'][38]++;
  return (! block(node));
}));
}
      _$jscoverage['plugins/justify.js'][41]++;
      tmpRange.setEndAfter(tmpNode);
      _$jscoverage['plugins/justify.js'][42]++;
      var common = tmpRange.getCommonAncestor();
      _$jscoverage['plugins/justify.js'][43]++;
      if (((! domUtils.isBody(common)) && block(common))) {
        _$jscoverage['plugins/justify.js'][44]++;
        domUtils.setStyles(common, (utils.isString(style)? {"text-align": style}: style));
        _$jscoverage['plugins/justify.js'][45]++;
        current = common;
      }
      else {
        _$jscoverage['plugins/justify.js'][47]++;
        var p = range.document.createElement("p");
        _$jscoverage['plugins/justify.js'][48]++;
        domUtils.setStyles(p, (utils.isString(style)? {"text-align": style}: style));
        _$jscoverage['plugins/justify.js'][49]++;
        var frag = tmpRange.extractContents();
        _$jscoverage['plugins/justify.js'][50]++;
        p.appendChild(frag);
        _$jscoverage['plugins/justify.js'][51]++;
        tmpRange.insertNode(p);
        _$jscoverage['plugins/justify.js'][52]++;
        current = p;
      }
      _$jscoverage['plugins/justify.js'][54]++;
      current = domUtils.getNextDomNode(current, false, filterFn);
    }
    else {
      _$jscoverage['plugins/justify.js'][56]++;
      current = domUtils.getNextDomNode(current, true, filterFn);
    }
}
  _$jscoverage['plugins/justify.js'][59]++;
  return range.moveToBookmark(bookmark2).moveToBookmark(bookmark);
});
  _$jscoverage['plugins/justify.js'][62]++;
  UE.commands.justify = {execCommand: (function (cmdName, align) {
  _$jscoverage['plugins/justify.js'][64]++;
  var range = this.selection.getRange(), txt;
  _$jscoverage['plugins/justify.js'][68]++;
  if (range.collapsed) {
    _$jscoverage['plugins/justify.js'][69]++;
    txt = this.document.createTextNode("p");
    _$jscoverage['plugins/justify.js'][70]++;
    range.insertNode(txt);
  }
  _$jscoverage['plugins/justify.js'][72]++;
  doJustify(range, align);
  _$jscoverage['plugins/justify.js'][73]++;
  if (txt) {
    _$jscoverage['plugins/justify.js'][74]++;
    range.setStartBefore(txt).collapse(true);
    _$jscoverage['plugins/justify.js'][75]++;
    domUtils.remove(txt);
  }
  _$jscoverage['plugins/justify.js'][78]++;
  range.select();
  _$jscoverage['plugins/justify.js'][81]++;
  return true;
}), queryCommandValue: (function () {
  _$jscoverage['plugins/justify.js'][84]++;
  var startNode = this.selection.getStart(), value = domUtils.getComputedStyle(startNode, "text-align");
  _$jscoverage['plugins/justify.js'][86]++;
  return (defaultValue[value]? value: "left");
}), queryCommandState: (function () {
  _$jscoverage['plugins/justify.js'][89]++;
  var start = this.selection.getStart(), cell = (start && domUtils.findParentByTagName(start, ["td", "th", "caption"], true));
  _$jscoverage['plugins/justify.js'][92]++;
  return (cell? -1: 0);
})};
});
