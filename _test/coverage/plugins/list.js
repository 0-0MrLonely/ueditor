/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['plugins/list.js']) {
  _$jscoverage['plugins/list.js'] = [];
  _$jscoverage['plugins/list.js'][22] = 0;
  _$jscoverage['plugins/list.js'][23] = 0;
  _$jscoverage['plugins/list.js'][29] = 0;
  _$jscoverage['plugins/list.js'][40] = 0;
  _$jscoverage['plugins/list.js'][65] = 0;
  _$jscoverage['plugins/list.js'][68] = 0;
  _$jscoverage['plugins/list.js'][69] = 0;
  _$jscoverage['plugins/list.js'][70] = 0;
  _$jscoverage['plugins/list.js'][74] = 0;
  _$jscoverage['plugins/list.js'][75] = 0;
  _$jscoverage['plugins/list.js'][76] = 0;
  _$jscoverage['plugins/list.js'][77] = 0;
  _$jscoverage['plugins/list.js'][78] = 0;
  _$jscoverage['plugins/list.js'][79] = 0;
  _$jscoverage['plugins/list.js'][81] = 0;
  _$jscoverage['plugins/list.js'][82] = 0;
  _$jscoverage['plugins/list.js'][84] = 0;
  _$jscoverage['plugins/list.js'][86] = 0;
  _$jscoverage['plugins/list.js'][88] = 0;
  _$jscoverage['plugins/list.js'][89] = 0;
  _$jscoverage['plugins/list.js'][90] = 0;
  _$jscoverage['plugins/list.js'][91] = 0;
  _$jscoverage['plugins/list.js'][93] = 0;
  _$jscoverage['plugins/list.js'][94] = 0;
  _$jscoverage['plugins/list.js'][95] = 0;
  _$jscoverage['plugins/list.js'][96] = 0;
  _$jscoverage['plugins/list.js'][98] = 0;
  _$jscoverage['plugins/list.js'][99] = 0;
  _$jscoverage['plugins/list.js'][100] = 0;
  _$jscoverage['plugins/list.js'][101] = 0;
  _$jscoverage['plugins/list.js'][104] = 0;
  _$jscoverage['plugins/list.js'][105] = 0;
  _$jscoverage['plugins/list.js'][107] = 0;
  _$jscoverage['plugins/list.js'][108] = 0;
  _$jscoverage['plugins/list.js'][109] = 0;
  _$jscoverage['plugins/list.js'][111] = 0;
  _$jscoverage['plugins/list.js'][112] = 0;
  _$jscoverage['plugins/list.js'][114] = 0;
  _$jscoverage['plugins/list.js'][117] = 0;
  _$jscoverage['plugins/list.js'][118] = 0;
  _$jscoverage['plugins/list.js'][119] = 0;
  _$jscoverage['plugins/list.js'][121] = 0;
  _$jscoverage['plugins/list.js'][124] = 0;
  _$jscoverage['plugins/list.js'][125] = 0;
  _$jscoverage['plugins/list.js'][126] = 0;
  _$jscoverage['plugins/list.js'][127] = 0;
  _$jscoverage['plugins/list.js'][128] = 0;
  _$jscoverage['plugins/list.js'][129] = 0;
  _$jscoverage['plugins/list.js'][130] = 0;
  _$jscoverage['plugins/list.js'][131] = 0;
  _$jscoverage['plugins/list.js'][132] = 0;
  _$jscoverage['plugins/list.js'][133] = 0;
  _$jscoverage['plugins/list.js'][134] = 0;
  _$jscoverage['plugins/list.js'][135] = 0;
  _$jscoverage['plugins/list.js'][136] = 0;
  _$jscoverage['plugins/list.js'][137] = 0;
  _$jscoverage['plugins/list.js'][138] = 0;
  _$jscoverage['plugins/list.js'][140] = 0;
  _$jscoverage['plugins/list.js'][141] = 0;
  _$jscoverage['plugins/list.js'][142] = 0;
  _$jscoverage['plugins/list.js'][143] = 0;
  _$jscoverage['plugins/list.js'][144] = 0;
  _$jscoverage['plugins/list.js'][145] = 0;
  _$jscoverage['plugins/list.js'][153] = 0;
  _$jscoverage['plugins/list.js'][154] = 0;
  _$jscoverage['plugins/list.js'][155] = 0;
  _$jscoverage['plugins/list.js'][156] = 0;
  _$jscoverage['plugins/list.js'][158] = 0;
  _$jscoverage['plugins/list.js'][161] = 0;
  _$jscoverage['plugins/list.js'][162] = 0;
  _$jscoverage['plugins/list.js'][163] = 0;
  _$jscoverage['plugins/list.js'][164] = 0;
  _$jscoverage['plugins/list.js'][165] = 0;
  _$jscoverage['plugins/list.js'][166] = 0;
  _$jscoverage['plugins/list.js'][168] = 0;
  _$jscoverage['plugins/list.js'][169] = 0;
  _$jscoverage['plugins/list.js'][170] = 0;
  _$jscoverage['plugins/list.js'][171] = 0;
  _$jscoverage['plugins/list.js'][173] = 0;
  _$jscoverage['plugins/list.js'][178] = 0;
  _$jscoverage['plugins/list.js'][179] = 0;
  _$jscoverage['plugins/list.js'][184] = 0;
  _$jscoverage['plugins/list.js'][185] = 0;
  _$jscoverage['plugins/list.js'][187] = 0;
  _$jscoverage['plugins/list.js'][188] = 0;
  _$jscoverage['plugins/list.js'][189] = 0;
  _$jscoverage['plugins/list.js'][190] = 0;
  _$jscoverage['plugins/list.js'][191] = 0;
  _$jscoverage['plugins/list.js'][192] = 0;
  _$jscoverage['plugins/list.js'][195] = 0;
  _$jscoverage['plugins/list.js'][196] = 0;
  _$jscoverage['plugins/list.js'][199] = 0;
  _$jscoverage['plugins/list.js'][200] = 0;
  _$jscoverage['plugins/list.js'][201] = 0;
  _$jscoverage['plugins/list.js'][202] = 0;
  _$jscoverage['plugins/list.js'][203] = 0;
  _$jscoverage['plugins/list.js'][204] = 0;
  _$jscoverage['plugins/list.js'][205] = 0;
  _$jscoverage['plugins/list.js'][206] = 0;
  _$jscoverage['plugins/list.js'][208] = 0;
  _$jscoverage['plugins/list.js'][209] = 0;
  _$jscoverage['plugins/list.js'][211] = 0;
  _$jscoverage['plugins/list.js'][212] = 0;
  _$jscoverage['plugins/list.js'][213] = 0;
  _$jscoverage['plugins/list.js'][214] = 0;
  _$jscoverage['plugins/list.js'][215] = 0;
  _$jscoverage['plugins/list.js'][216] = 0;
  _$jscoverage['plugins/list.js'][220] = 0;
  _$jscoverage['plugins/list.js'][221] = 0;
  _$jscoverage['plugins/list.js'][222] = 0;
  _$jscoverage['plugins/list.js'][223] = 0;
  _$jscoverage['plugins/list.js'][225] = 0;
  _$jscoverage['plugins/list.js'][227] = 0;
  _$jscoverage['plugins/list.js'][228] = 0;
  _$jscoverage['plugins/list.js'][232] = 0;
  _$jscoverage['plugins/list.js'][234] = 0;
  _$jscoverage['plugins/list.js'][237] = 0;
  _$jscoverage['plugins/list.js'][239] = 0;
  _$jscoverage['plugins/list.js'][240] = 0;
  _$jscoverage['plugins/list.js'][241] = 0;
  _$jscoverage['plugins/list.js'][244] = 0;
  _$jscoverage['plugins/list.js'][249] = 0;
  _$jscoverage['plugins/list.js'][250] = 0;
  _$jscoverage['plugins/list.js'][251] = 0;
  _$jscoverage['plugins/list.js'][252] = 0;
  _$jscoverage['plugins/list.js'][253] = 0;
  _$jscoverage['plugins/list.js'][254] = 0;
  _$jscoverage['plugins/list.js'][257] = 0;
  _$jscoverage['plugins/list.js'][258] = 0;
  _$jscoverage['plugins/list.js'][260] = 0;
  _$jscoverage['plugins/list.js'][261] = 0;
  _$jscoverage['plugins/list.js'][262] = 0;
  _$jscoverage['plugins/list.js'][264] = 0;
  _$jscoverage['plugins/list.js'][265] = 0;
  _$jscoverage['plugins/list.js'][267] = 0;
  _$jscoverage['plugins/list.js'][270] = 0;
  _$jscoverage['plugins/list.js'][271] = 0;
  _$jscoverage['plugins/list.js'][272] = 0;
  _$jscoverage['plugins/list.js'][274] = 0;
  _$jscoverage['plugins/list.js'][275] = 0;
  _$jscoverage['plugins/list.js'][278] = 0;
  _$jscoverage['plugins/list.js'][279] = 0;
  _$jscoverage['plugins/list.js'][280] = 0;
  _$jscoverage['plugins/list.js'][281] = 0;
  _$jscoverage['plugins/list.js'][283] = 0;
  _$jscoverage['plugins/list.js'][284] = 0;
  _$jscoverage['plugins/list.js'][285] = 0;
  _$jscoverage['plugins/list.js'][289] = 0;
  _$jscoverage['plugins/list.js'][290] = 0;
  _$jscoverage['plugins/list.js'][291] = 0;
  _$jscoverage['plugins/list.js'][292] = 0;
  _$jscoverage['plugins/list.js'][293] = 0;
  _$jscoverage['plugins/list.js'][295] = 0;
  _$jscoverage['plugins/list.js'][296] = 0;
  _$jscoverage['plugins/list.js'][297] = 0;
  _$jscoverage['plugins/list.js'][298] = 0;
  _$jscoverage['plugins/list.js'][300] = 0;
  _$jscoverage['plugins/list.js'][301] = 0;
  _$jscoverage['plugins/list.js'][303] = 0;
  _$jscoverage['plugins/list.js'][305] = 0;
  _$jscoverage['plugins/list.js'][307] = 0;
  _$jscoverage['plugins/list.js'][308] = 0;
  _$jscoverage['plugins/list.js'][309] = 0;
  _$jscoverage['plugins/list.js'][311] = 0;
  _$jscoverage['plugins/list.js'][314] = 0;
  _$jscoverage['plugins/list.js'][317] = 0;
  _$jscoverage['plugins/list.js'][319] = 0;
  _$jscoverage['plugins/list.js'][320] = 0;
  _$jscoverage['plugins/list.js'][321] = 0;
  _$jscoverage['plugins/list.js'][322] = 0;
  _$jscoverage['plugins/list.js'][323] = 0;
  _$jscoverage['plugins/list.js'][324] = 0;
  _$jscoverage['plugins/list.js'][325] = 0;
  _$jscoverage['plugins/list.js'][327] = 0;
  _$jscoverage['plugins/list.js'][328] = 0;
  _$jscoverage['plugins/list.js'][329] = 0;
  _$jscoverage['plugins/list.js'][331] = 0;
  _$jscoverage['plugins/list.js'][332] = 0;
  _$jscoverage['plugins/list.js'][333] = 0;
  _$jscoverage['plugins/list.js'][334] = 0;
  _$jscoverage['plugins/list.js'][335] = 0;
  _$jscoverage['plugins/list.js'][338] = 0;
  _$jscoverage['plugins/list.js'][340] = 0;
  _$jscoverage['plugins/list.js'][344] = 0;
  _$jscoverage['plugins/list.js'][346] = 0;
  _$jscoverage['plugins/list.js'][347] = 0;
  _$jscoverage['plugins/list.js'][348] = 0;
  _$jscoverage['plugins/list.js'][350] = 0;
  _$jscoverage['plugins/list.js'][354] = 0;
  _$jscoverage['plugins/list.js'][355] = 0;
  _$jscoverage['plugins/list.js'][359] = 0;
  _$jscoverage['plugins/list.js'][362] = 0;
  _$jscoverage['plugins/list.js'][363] = 0;
  _$jscoverage['plugins/list.js'][364] = 0;
  _$jscoverage['plugins/list.js'][366] = 0;
  _$jscoverage['plugins/list.js'][367] = 0;
  _$jscoverage['plugins/list.js'][368] = 0;
  _$jscoverage['plugins/list.js'][369] = 0;
  _$jscoverage['plugins/list.js'][374] = 0;
  _$jscoverage['plugins/list.js'][376] = 0;
  _$jscoverage['plugins/list.js'][377] = 0;
  _$jscoverage['plugins/list.js'][378] = 0;
  _$jscoverage['plugins/list.js'][379] = 0;
  _$jscoverage['plugins/list.js'][380] = 0;
  _$jscoverage['plugins/list.js'][381] = 0;
  _$jscoverage['plugins/list.js'][382] = 0;
  _$jscoverage['plugins/list.js'][385] = 0;
  _$jscoverage['plugins/list.js'][386] = 0;
  _$jscoverage['plugins/list.js'][387] = 0;
  _$jscoverage['plugins/list.js'][391] = 0;
  _$jscoverage['plugins/list.js'][393] = 0;
  _$jscoverage['plugins/list.js'][394] = 0;
  _$jscoverage['plugins/list.js'][395] = 0;
  _$jscoverage['plugins/list.js'][396] = 0;
  _$jscoverage['plugins/list.js'][397] = 0;
  _$jscoverage['plugins/list.js'][399] = 0;
  _$jscoverage['plugins/list.js'][401] = 0;
  _$jscoverage['plugins/list.js'][404] = 0;
  _$jscoverage['plugins/list.js'][408] = 0;
  _$jscoverage['plugins/list.js'][409] = 0;
  _$jscoverage['plugins/list.js'][410] = 0;
  _$jscoverage['plugins/list.js'][412] = 0;
  _$jscoverage['plugins/list.js'][413] = 0;
  _$jscoverage['plugins/list.js'][415] = 0;
  _$jscoverage['plugins/list.js'][417] = 0;
  _$jscoverage['plugins/list.js'][418] = 0;
  _$jscoverage['plugins/list.js'][421] = 0;
  _$jscoverage['plugins/list.js'][423] = 0;
  _$jscoverage['plugins/list.js'][424] = 0;
  _$jscoverage['plugins/list.js'][426] = 0;
  _$jscoverage['plugins/list.js'][427] = 0;
  _$jscoverage['plugins/list.js'][429] = 0;
  _$jscoverage['plugins/list.js'][430] = 0;
  _$jscoverage['plugins/list.js'][432] = 0;
  _$jscoverage['plugins/list.js'][433] = 0;
  _$jscoverage['plugins/list.js'][434] = 0;
  _$jscoverage['plugins/list.js'][436] = 0;
  _$jscoverage['plugins/list.js'][437] = 0;
  _$jscoverage['plugins/list.js'][438] = 0;
  _$jscoverage['plugins/list.js'][441] = 0;
  _$jscoverage['plugins/list.js'][442] = 0;
  _$jscoverage['plugins/list.js'][443] = 0;
  _$jscoverage['plugins/list.js'][444] = 0;
  _$jscoverage['plugins/list.js'][445] = 0;
  _$jscoverage['plugins/list.js'][446] = 0;
  _$jscoverage['plugins/list.js'][451] = 0;
  _$jscoverage['plugins/list.js'][457] = 0;
  _$jscoverage['plugins/list.js'][460] = 0;
  _$jscoverage['plugins/list.js'][461] = 0;
  _$jscoverage['plugins/list.js'][462] = 0;
  _$jscoverage['plugins/list.js'][463] = 0;
  _$jscoverage['plugins/list.js'][465] = 0;
  _$jscoverage['plugins/list.js'][466] = 0;
  _$jscoverage['plugins/list.js'][467] = 0;
  _$jscoverage['plugins/list.js'][468] = 0;
  _$jscoverage['plugins/list.js'][469] = 0;
  _$jscoverage['plugins/list.js'][470] = 0;
  _$jscoverage['plugins/list.js'][471] = 0;
  _$jscoverage['plugins/list.js'][472] = 0;
  _$jscoverage['plugins/list.js'][473] = 0;
  _$jscoverage['plugins/list.js'][474] = 0;
  _$jscoverage['plugins/list.js'][475] = 0;
  _$jscoverage['plugins/list.js'][478] = 0;
  _$jscoverage['plugins/list.js'][479] = 0;
  _$jscoverage['plugins/list.js'][480] = 0;
  _$jscoverage['plugins/list.js'][483] = 0;
  _$jscoverage['plugins/list.js'][484] = 0;
  _$jscoverage['plugins/list.js'][486] = 0;
  _$jscoverage['plugins/list.js'][487] = 0;
  _$jscoverage['plugins/list.js'][488] = 0;
  _$jscoverage['plugins/list.js'][489] = 0;
  _$jscoverage['plugins/list.js'][491] = 0;
  _$jscoverage['plugins/list.js'][492] = 0;
  _$jscoverage['plugins/list.js'][494] = 0;
  _$jscoverage['plugins/list.js'][495] = 0;
  _$jscoverage['plugins/list.js'][499] = 0;
  _$jscoverage['plugins/list.js'][500] = 0;
  _$jscoverage['plugins/list.js'][502] = 0;
  _$jscoverage['plugins/list.js'][503] = 0;
  _$jscoverage['plugins/list.js'][505] = 0;
  _$jscoverage['plugins/list.js'][506] = 0;
  _$jscoverage['plugins/list.js'][508] = 0;
  _$jscoverage['plugins/list.js'][512] = 0;
  _$jscoverage['plugins/list.js'][513] = 0;
  _$jscoverage['plugins/list.js'][514] = 0;
  _$jscoverage['plugins/list.js'][515] = 0;
  _$jscoverage['plugins/list.js'][518] = 0;
  _$jscoverage['plugins/list.js'][519] = 0;
  _$jscoverage['plugins/list.js'][520] = 0;
  _$jscoverage['plugins/list.js'][524] = 0;
  _$jscoverage['plugins/list.js'][525] = 0;
  _$jscoverage['plugins/list.js'][526] = 0;
  _$jscoverage['plugins/list.js'][527] = 0;
  _$jscoverage['plugins/list.js'][528] = 0;
  _$jscoverage['plugins/list.js'][533] = 0;
  _$jscoverage['plugins/list.js'][534] = 0;
  _$jscoverage['plugins/list.js'][535] = 0;
  _$jscoverage['plugins/list.js'][536] = 0;
  _$jscoverage['plugins/list.js'][537] = 0;
  _$jscoverage['plugins/list.js'][538] = 0;
  _$jscoverage['plugins/list.js'][539] = 0;
  _$jscoverage['plugins/list.js'][543] = 0;
  _$jscoverage['plugins/list.js'][544] = 0;
  _$jscoverage['plugins/list.js'][547] = 0;
  _$jscoverage['plugins/list.js'][548] = 0;
  _$jscoverage['plugins/list.js'][549] = 0;
  _$jscoverage['plugins/list.js'][553] = 0;
  _$jscoverage['plugins/list.js'][554] = 0;
  _$jscoverage['plugins/list.js'][555] = 0;
  _$jscoverage['plugins/list.js'][556] = 0;
  _$jscoverage['plugins/list.js'][557] = 0;
  _$jscoverage['plugins/list.js'][571] = 0;
  _$jscoverage['plugins/list.js'][572] = 0;
  _$jscoverage['plugins/list.js'][573] = 0;
  _$jscoverage['plugins/list.js'][574] = 0;
  _$jscoverage['plugins/list.js'][575] = 0;
  _$jscoverage['plugins/list.js'][577] = 0;
  _$jscoverage['plugins/list.js'][579] = 0;
  _$jscoverage['plugins/list.js'][585] = 0;
  _$jscoverage['plugins/list.js'][586] = 0;
  _$jscoverage['plugins/list.js'][587] = 0;
  _$jscoverage['plugins/list.js'][588] = 0;
  _$jscoverage['plugins/list.js'][589] = 0;
  _$jscoverage['plugins/list.js'][590] = 0;
  _$jscoverage['plugins/list.js'][592] = 0;
  _$jscoverage['plugins/list.js'][593] = 0;
  _$jscoverage['plugins/list.js'][599] = 0;
  _$jscoverage['plugins/list.js'][600] = 0;
  _$jscoverage['plugins/list.js'][602] = 0;
  _$jscoverage['plugins/list.js'][603] = 0;
  _$jscoverage['plugins/list.js'][604] = 0;
  _$jscoverage['plugins/list.js'][605] = 0;
  _$jscoverage['plugins/list.js'][606] = 0;
  _$jscoverage['plugins/list.js'][609] = 0;
  _$jscoverage['plugins/list.js'][610] = 0;
  _$jscoverage['plugins/list.js'][611] = 0;
  _$jscoverage['plugins/list.js'][612] = 0;
  _$jscoverage['plugins/list.js'][613] = 0;
  _$jscoverage['plugins/list.js'][614] = 0;
  _$jscoverage['plugins/list.js'][615] = 0;
  _$jscoverage['plugins/list.js'][616] = 0;
  _$jscoverage['plugins/list.js'][617] = 0;
  _$jscoverage['plugins/list.js'][618] = 0;
  _$jscoverage['plugins/list.js'][619] = 0;
  _$jscoverage['plugins/list.js'][620] = 0;
  _$jscoverage['plugins/list.js'][623] = 0;
  _$jscoverage['plugins/list.js'][624] = 0;
  _$jscoverage['plugins/list.js'][625] = 0;
  _$jscoverage['plugins/list.js'][626] = 0;
  _$jscoverage['plugins/list.js'][627] = 0;
  _$jscoverage['plugins/list.js'][628] = 0;
  _$jscoverage['plugins/list.js'][631] = 0;
  _$jscoverage['plugins/list.js'][632] = 0;
  _$jscoverage['plugins/list.js'][633] = 0;
  _$jscoverage['plugins/list.js'][634] = 0;
  _$jscoverage['plugins/list.js'][635] = 0;
  _$jscoverage['plugins/list.js'][636] = 0;
  _$jscoverage['plugins/list.js'][638] = 0;
  _$jscoverage['plugins/list.js'][641] = 0;
  _$jscoverage['plugins/list.js'][642] = 0;
  _$jscoverage['plugins/list.js'][643] = 0;
  _$jscoverage['plugins/list.js'][644] = 0;
  _$jscoverage['plugins/list.js'][645] = 0;
  _$jscoverage['plugins/list.js'][646] = 0;
  _$jscoverage['plugins/list.js'][647] = 0;
  _$jscoverage['plugins/list.js'][648] = 0;
  _$jscoverage['plugins/list.js'][649] = 0;
  _$jscoverage['plugins/list.js'][650] = 0;
  _$jscoverage['plugins/list.js'][651] = 0;
  _$jscoverage['plugins/list.js'][652] = 0;
  _$jscoverage['plugins/list.js'][656] = 0;
  _$jscoverage['plugins/list.js'][658] = 0;
  _$jscoverage['plugins/list.js'][660] = 0;
  _$jscoverage['plugins/list.js'][662] = 0;
  _$jscoverage['plugins/list.js'][663] = 0;
  _$jscoverage['plugins/list.js'][666] = 0;
  _$jscoverage['plugins/list.js'][667] = 0;
  _$jscoverage['plugins/list.js'][668] = 0;
  _$jscoverage['plugins/list.js'][674] = 0;
  _$jscoverage['plugins/list.js'][678] = 0;
  _$jscoverage['plugins/list.js'][679] = 0;
  _$jscoverage['plugins/list.js'][681] = 0;
  _$jscoverage['plugins/list.js'][684] = 0;
  _$jscoverage['plugins/list.js'][690] = 0;
  _$jscoverage['plugins/list.js'][691] = 0;
  _$jscoverage['plugins/list.js'][699] = 0;
  _$jscoverage['plugins/list.js'][700] = 0;
  _$jscoverage['plugins/list.js'][701] = 0;
  _$jscoverage['plugins/list.js'][702] = 0;
  _$jscoverage['plugins/list.js'][704] = 0;
  _$jscoverage['plugins/list.js'][706] = 0;
  _$jscoverage['plugins/list.js'][707] = 0;
  _$jscoverage['plugins/list.js'][708] = 0;
  _$jscoverage['plugins/list.js'][709] = 0;
  _$jscoverage['plugins/list.js'][710] = 0;
  _$jscoverage['plugins/list.js'][711] = 0;
  _$jscoverage['plugins/list.js'][712] = 0;
  _$jscoverage['plugins/list.js'][713] = 0;
  _$jscoverage['plugins/list.js'][715] = 0;
  _$jscoverage['plugins/list.js'][717] = 0;
  _$jscoverage['plugins/list.js'][719] = 0;
  _$jscoverage['plugins/list.js'][720] = 0;
  _$jscoverage['plugins/list.js'][721] = 0;
  _$jscoverage['plugins/list.js'][722] = 0;
  _$jscoverage['plugins/list.js'][723] = 0;
  _$jscoverage['plugins/list.js'][724] = 0;
  _$jscoverage['plugins/list.js'][726] = 0;
  _$jscoverage['plugins/list.js'][728] = 0;
  _$jscoverage['plugins/list.js'][729] = 0;
  _$jscoverage['plugins/list.js'][730] = 0;
  _$jscoverage['plugins/list.js'][731] = 0;
  _$jscoverage['plugins/list.js'][733] = 0;
  _$jscoverage['plugins/list.js'][734] = 0;
  _$jscoverage['plugins/list.js'][736] = 0;
  _$jscoverage['plugins/list.js'][737] = 0;
  _$jscoverage['plugins/list.js'][738] = 0;
  _$jscoverage['plugins/list.js'][739] = 0;
  _$jscoverage['plugins/list.js'][740] = 0;
  _$jscoverage['plugins/list.js'][741] = 0;
  _$jscoverage['plugins/list.js'][742] = 0;
  _$jscoverage['plugins/list.js'][747] = 0;
  _$jscoverage['plugins/list.js'][748] = 0;
  _$jscoverage['plugins/list.js'][753] = 0;
  _$jscoverage['plugins/list.js'][755] = 0;
  _$jscoverage['plugins/list.js'][756] = 0;
  _$jscoverage['plugins/list.js'][757] = 0;
  _$jscoverage['plugins/list.js'][758] = 0;
  _$jscoverage['plugins/list.js'][761] = 0;
  _$jscoverage['plugins/list.js'][762] = 0;
  _$jscoverage['plugins/list.js'][763] = 0;
  _$jscoverage['plugins/list.js'][764] = 0;
  _$jscoverage['plugins/list.js'][767] = 0;
  _$jscoverage['plugins/list.js'][768] = 0;
  _$jscoverage['plugins/list.js'][769] = 0;
  _$jscoverage['plugins/list.js'][770] = 0;
  _$jscoverage['plugins/list.js'][771] = 0;
  _$jscoverage['plugins/list.js'][773] = 0;
  _$jscoverage['plugins/list.js'][775] = 0;
  _$jscoverage['plugins/list.js'][776] = 0;
  _$jscoverage['plugins/list.js'][777] = 0;
  _$jscoverage['plugins/list.js'][779] = 0;
  _$jscoverage['plugins/list.js'][781] = 0;
  _$jscoverage['plugins/list.js'][782] = 0;
  _$jscoverage['plugins/list.js'][783] = 0;
  _$jscoverage['plugins/list.js'][784] = 0;
  _$jscoverage['plugins/list.js'][786] = 0;
  _$jscoverage['plugins/list.js'][788] = 0;
  _$jscoverage['plugins/list.js'][791] = 0;
  _$jscoverage['plugins/list.js'][793] = 0;
  _$jscoverage['plugins/list.js'][794] = 0;
  _$jscoverage['plugins/list.js'][795] = 0;
  _$jscoverage['plugins/list.js'][796] = 0;
  _$jscoverage['plugins/list.js'][798] = 0;
  _$jscoverage['plugins/list.js'][800] = 0;
  _$jscoverage['plugins/list.js'][803] = 0;
  _$jscoverage['plugins/list.js'][805] = 0;
  _$jscoverage['plugins/list.js'][806] = 0;
  _$jscoverage['plugins/list.js'][807] = 0;
  _$jscoverage['plugins/list.js'][808] = 0;
  _$jscoverage['plugins/list.js'][809] = 0;
  _$jscoverage['plugins/list.js'][811] = 0;
  _$jscoverage['plugins/list.js'][812] = 0;
  _$jscoverage['plugins/list.js'][813] = 0;
  _$jscoverage['plugins/list.js'][814] = 0;
  _$jscoverage['plugins/list.js'][815] = 0;
  _$jscoverage['plugins/list.js'][817] = 0;
  _$jscoverage['plugins/list.js'][819] = 0;
  _$jscoverage['plugins/list.js'][820] = 0;
  _$jscoverage['plugins/list.js'][821] = 0;
  _$jscoverage['plugins/list.js'][822] = 0;
  _$jscoverage['plugins/list.js'][824] = 0;
  _$jscoverage['plugins/list.js'][826] = 0;
  _$jscoverage['plugins/list.js'][828] = 0;
  _$jscoverage['plugins/list.js'][830] = 0;
  _$jscoverage['plugins/list.js'][833] = 0;
  _$jscoverage['plugins/list.js'][835] = 0;
  _$jscoverage['plugins/list.js'][836] = 0;
  _$jscoverage['plugins/list.js'][837] = 0;
  _$jscoverage['plugins/list.js'][838] = 0;
  _$jscoverage['plugins/list.js'][839] = 0;
  _$jscoverage['plugins/list.js'][840] = 0;
  _$jscoverage['plugins/list.js'][843] = 0;
  _$jscoverage['plugins/list.js'][849] = 0;
  _$jscoverage['plugins/list.js'][850] = 0;
  _$jscoverage['plugins/list.js'][852] = 0;
  _$jscoverage['plugins/list.js'][853] = 0;
  _$jscoverage['plugins/list.js'][855] = 0;
  _$jscoverage['plugins/list.js'][856] = 0;
  _$jscoverage['plugins/list.js'][859] = 0;
  _$jscoverage['plugins/list.js'][861] = 0;
  _$jscoverage['plugins/list.js'][867] = 0;
  _$jscoverage['plugins/list.js'][869] = 0;
  _$jscoverage['plugins/list.js'][870] = 0;
  _$jscoverage['plugins/list.js'][871] = 0;
  _$jscoverage['plugins/list.js'][872] = 0;
  _$jscoverage['plugins/list.js'][874] = 0;
  _$jscoverage['plugins/list.js'][875] = 0;
  _$jscoverage['plugins/list.js'][876] = 0;
  _$jscoverage['plugins/list.js'][877] = 0;
  _$jscoverage['plugins/list.js'][880] = 0;
  _$jscoverage['plugins/list.js'][881] = 0;
  _$jscoverage['plugins/list.js'][883] = 0;
  _$jscoverage['plugins/list.js'][884] = 0;
  _$jscoverage['plugins/list.js'][885] = 0;
  _$jscoverage['plugins/list.js'][886] = 0;
  _$jscoverage['plugins/list.js'][890] = 0;
  _$jscoverage['plugins/list.js'][891] = 0;
  _$jscoverage['plugins/list.js'][892] = 0;
  _$jscoverage['plugins/list.js'][893] = 0;
  _$jscoverage['plugins/list.js'][894] = 0;
  _$jscoverage['plugins/list.js'][897] = 0;
  _$jscoverage['plugins/list.js'][899] = 0;
  _$jscoverage['plugins/list.js'][901] = 0;
  _$jscoverage['plugins/list.js'][903] = 0;
  _$jscoverage['plugins/list.js'][904] = 0;
  _$jscoverage['plugins/list.js'][905] = 0;
  _$jscoverage['plugins/list.js'][906] = 0;
  _$jscoverage['plugins/list.js'][907] = 0;
  _$jscoverage['plugins/list.js'][909] = 0;
  _$jscoverage['plugins/list.js'][911] = 0;
  _$jscoverage['plugins/list.js'][913] = 0;
  _$jscoverage['plugins/list.js'][916] = 0;
  _$jscoverage['plugins/list.js'][917] = 0;
  _$jscoverage['plugins/list.js'][918] = 0;
  _$jscoverage['plugins/list.js'][919] = 0;
  _$jscoverage['plugins/list.js'][920] = 0;
  _$jscoverage['plugins/list.js'][922] = 0;
  _$jscoverage['plugins/list.js'][924] = 0;
  _$jscoverage['plugins/list.js'][925] = 0;
  _$jscoverage['plugins/list.js'][926] = 0;
  _$jscoverage['plugins/list.js'][929] = 0;
  _$jscoverage['plugins/list.js'][933] = 0;
  _$jscoverage['plugins/list.js'][936] = 0;
  _$jscoverage['plugins/list.js'][937] = 0;
}
_$jscoverage['plugins/list.js'].source = ["<span class=\"c\">///import core</span>","<span class=\"c\">///commands &#26377;&#24207;&#21015;&#34920;,&#26080;&#24207;&#21015;&#34920;</span>","<span class=\"c\">///commandsName  InsertOrderedList,InsertUnorderedList</span>","<span class=\"c\">///commandsTitle  &#26377;&#24207;&#21015;&#34920;,&#26080;&#24207;&#21015;&#34920;</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#26377;&#24207;&#21015;&#34920;</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @name baidu.editor.execCommand</span>","<span class=\"c\"> * @param   {String}   cmdName     insertorderlist&#25554;&#20837;&#26377;&#24207;&#21015;&#34920;</span>","<span class=\"c\"> * @param   {String}   style               &#20540;&#20026;&#65306;decimal,lower-alpha,lower-roman,upper-alpha,upper-roman</span>","<span class=\"c\"> * @author zhanyi</span>","<span class=\"c\"> */</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#26080;&#24207;&#38142;&#25509;</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @name baidu.editor.execCommand</span>","<span class=\"c\"> * @param   {String}   cmdName     insertunorderlist&#25554;&#20837;&#26080;&#24207;&#21015;&#34920;</span>","<span class=\"c\"> * * @param   {String}   style            &#20540;&#20026;&#65306;circle,disc,square</span>","<span class=\"c\"> * @author zhanyi</span>","<span class=\"c\"> */</span>","","UE<span class=\"k\">.</span>plugins<span class=\"k\">[</span><span class=\"s\">'list'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> me <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">,</span>","        notExchange <span class=\"k\">=</span> <span class=\"k\">{</span>","            <span class=\"s\">'TD'</span><span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","            <span class=\"s\">'PRE'</span><span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","            <span class=\"s\">'BLOCKQUOTE'</span><span class=\"k\">:</span><span class=\"s\">1</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">var</span> customStyle <span class=\"k\">=</span> <span class=\"k\">{</span>","        <span class=\"s\">'cn'</span> <span class=\"k\">:</span> <span class=\"s\">'cn-1-'</span><span class=\"k\">,</span>","        <span class=\"s\">'cn1'</span> <span class=\"k\">:</span> <span class=\"s\">'cn-2-'</span><span class=\"k\">,</span>","        <span class=\"s\">'cn2'</span> <span class=\"k\">:</span> <span class=\"s\">'cn-3-'</span><span class=\"k\">,</span>","        <span class=\"s\">'num'</span><span class=\"k\">:</span>  <span class=\"s\">'num-1-'</span><span class=\"k\">,</span>","        <span class=\"s\">'num1'</span> <span class=\"k\">:</span> <span class=\"s\">'num-2-'</span><span class=\"k\">,</span>","        <span class=\"s\">'num2'</span> <span class=\"k\">:</span> <span class=\"s\">'num-3-'</span><span class=\"k\">,</span>","        <span class=\"s\">'dash'</span>  <span class=\"k\">:</span> <span class=\"s\">'dash'</span><span class=\"k\">,</span>","        <span class=\"s\">'dot'</span><span class=\"k\">:</span><span class=\"s\">'dot'</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    me<span class=\"k\">.</span>setOpt<span class=\"k\">(</span> <span class=\"k\">{</span>","        <span class=\"s\">'insertorderedlist'</span><span class=\"k\">:</span><span class=\"k\">{</span>","            <span class=\"s\">'num'</span><span class=\"k\">:</span><span class=\"s\">''</span><span class=\"k\">,</span>","            <span class=\"s\">'num1'</span><span class=\"k\">:</span><span class=\"s\">''</span><span class=\"k\">,</span>","            <span class=\"s\">'num2'</span><span class=\"k\">:</span><span class=\"s\">''</span><span class=\"k\">,</span>","            <span class=\"s\">'cn'</span><span class=\"k\">:</span><span class=\"s\">''</span><span class=\"k\">,</span>","            <span class=\"s\">'cn1'</span><span class=\"k\">:</span><span class=\"s\">''</span><span class=\"k\">,</span>","            <span class=\"s\">'cn2'</span><span class=\"k\">:</span><span class=\"s\">''</span><span class=\"k\">,</span>","            <span class=\"s\">'decimal'</span><span class=\"k\">:</span><span class=\"s\">''</span><span class=\"k\">,</span>","            <span class=\"s\">'lower-alpha'</span><span class=\"k\">:</span><span class=\"s\">''</span><span class=\"k\">,</span>","            <span class=\"s\">'lower-roman'</span><span class=\"k\">:</span><span class=\"s\">''</span><span class=\"k\">,</span>","            <span class=\"s\">'upper-alpha'</span><span class=\"k\">:</span><span class=\"s\">''</span><span class=\"k\">,</span>","            <span class=\"s\">'upper-roman'</span><span class=\"k\">:</span><span class=\"s\">''</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        <span class=\"s\">'insertunorderedlist'</span><span class=\"k\">:</span><span class=\"k\">{</span>","            <span class=\"s\">'circle'</span><span class=\"k\">:</span><span class=\"s\">''</span><span class=\"k\">,</span>","            <span class=\"s\">'disc'</span><span class=\"k\">:</span><span class=\"s\">''</span><span class=\"k\">,</span>","            <span class=\"s\">'square'</span><span class=\"k\">:</span><span class=\"s\">''</span><span class=\"k\">,</span>","            <span class=\"s\">'dash'</span> <span class=\"k\">:</span> <span class=\"s\">''</span><span class=\"k\">,</span>","            <span class=\"s\">'dot'</span><span class=\"k\">:</span><span class=\"s\">''</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        listDefaultPaddingLeft <span class=\"k\">:</span> <span class=\"s\">'30'</span><span class=\"k\">,</span>","        listiconpath <span class=\"k\">:</span> <span class=\"s\">'http://bs.baidu.com/listicon/'</span><span class=\"k\">,</span>","        maxListLevel <span class=\"k\">:</span> <span class=\"s\">3</span><span class=\"c\">//-1&#19981;&#38480;&#21046;</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","    <span class=\"k\">var</span> liiconpath <span class=\"k\">=</span> me<span class=\"k\">.</span>options<span class=\"k\">.</span>listiconpath<span class=\"k\">;</span>","","    <span class=\"c\">//&#26681;&#25454;&#29992;&#25143;&#37197;&#32622;&#65292;&#35843;&#25972;customStyle</span>","    <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> s <span class=\"k\">in</span> customStyle<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">if</span><span class=\"k\">(!</span>me<span class=\"k\">.</span>options<span class=\"k\">.</span>insertorderedlist<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>s<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>me<span class=\"k\">.</span>options<span class=\"k\">.</span>insertunorderedlist<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>s<span class=\"k\">))</span><span class=\"k\">{</span>","            <span class=\"k\">delete</span> customStyle<span class=\"k\">[</span>s<span class=\"k\">];</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    me<span class=\"k\">.</span>ready<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> customCss <span class=\"k\">=</span> <span class=\"k\">[];</span>","        <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> p <span class=\"k\">in</span> customStyle<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>p <span class=\"k\">==</span> <span class=\"s\">'dash'</span> <span class=\"k\">||</span> p <span class=\"k\">==</span> <span class=\"s\">'dot'</span><span class=\"k\">)</span><span class=\"k\">{</span>","                customCss<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'li.list-'</span> <span class=\"k\">+</span> customStyle<span class=\"k\">[</span>p<span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"s\">'{background-image:url('</span> <span class=\"k\">+</span> liiconpath <span class=\"k\">+</span>customStyle<span class=\"k\">[</span>p<span class=\"k\">]+</span><span class=\"s\">'.gif)}'</span><span class=\"k\">);</span>","                customCss<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'ul.custom_'</span><span class=\"k\">+</span>p<span class=\"k\">+</span><span class=\"s\">'{list-style:none;}ul.custom_'</span><span class=\"k\">+</span>p<span class=\"k\">+</span><span class=\"s\">' li{background-position:0 3px;background-repeat:no-repeat}'</span><span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","                <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> i<span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>i<span class=\"k\">&lt;</span><span class=\"s\">99</span><span class=\"k\">;</span>i<span class=\"k\">++)</span><span class=\"k\">{</span>","                    customCss<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'li.list-'</span> <span class=\"k\">+</span> customStyle<span class=\"k\">[</span>p<span class=\"k\">]</span> <span class=\"k\">+</span> i <span class=\"k\">+</span> <span class=\"s\">'{background-image:url('</span> <span class=\"k\">+</span> liiconpath <span class=\"k\">+</span> <span class=\"s\">'list-'</span><span class=\"k\">+</span>customStyle<span class=\"k\">[</span>p<span class=\"k\">]</span> <span class=\"k\">+</span> i <span class=\"k\">+</span> <span class=\"s\">'.gif)}'</span><span class=\"k\">)</span>","                <span class=\"k\">}</span>","                customCss<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'ol.custom_'</span><span class=\"k\">+</span>p<span class=\"k\">+</span><span class=\"s\">'{list-style:none;}ol.custom_'</span><span class=\"k\">+</span>p<span class=\"k\">+</span><span class=\"s\">' li{background-position:0 3px;background-repeat:no-repeat}'</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","            <span class=\"k\">switch</span><span class=\"k\">(</span>p<span class=\"k\">)</span><span class=\"k\">{</span>","                <span class=\"k\">case</span> <span class=\"s\">'cn'</span><span class=\"k\">:</span>","                    customCss<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'li.list-'</span><span class=\"k\">+</span>p<span class=\"k\">+</span><span class=\"s\">'-paddingleft-1{padding-left:25px}'</span><span class=\"k\">);</span>","                    customCss<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'li.list-'</span><span class=\"k\">+</span>p<span class=\"k\">+</span><span class=\"s\">'-paddingleft-2{padding-left:40px}'</span><span class=\"k\">);</span>","                    customCss<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'li.list-'</span><span class=\"k\">+</span>p<span class=\"k\">+</span><span class=\"s\">'-paddingleft-3{padding-left:55px}'</span><span class=\"k\">);</span>","                    <span class=\"k\">break</span><span class=\"k\">;</span>","                <span class=\"k\">case</span> <span class=\"s\">'cn1'</span><span class=\"k\">:</span>","                    customCss<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'li.list-'</span><span class=\"k\">+</span>p<span class=\"k\">+</span><span class=\"s\">'-paddingleft-1{padding-left:30px}'</span><span class=\"k\">);</span>","                    customCss<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'li.list-'</span><span class=\"k\">+</span>p<span class=\"k\">+</span><span class=\"s\">'-paddingleft-2{padding-left:40px}'</span><span class=\"k\">);</span>","                    customCss<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'li.list-'</span><span class=\"k\">+</span>p<span class=\"k\">+</span><span class=\"s\">'-paddingleft-3{padding-left:55px}'</span><span class=\"k\">);</span>","                    <span class=\"k\">break</span><span class=\"k\">;</span>","                <span class=\"k\">case</span> <span class=\"s\">'cn2'</span><span class=\"k\">:</span>","                    customCss<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'li.list-'</span><span class=\"k\">+</span>p<span class=\"k\">+</span><span class=\"s\">'-paddingleft-1{padding-left:40px}'</span><span class=\"k\">);</span>","                    customCss<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'li.list-'</span><span class=\"k\">+</span>p<span class=\"k\">+</span><span class=\"s\">'-paddingleft-2{padding-left:55px}'</span><span class=\"k\">);</span>","                    customCss<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'li.list-'</span><span class=\"k\">+</span>p<span class=\"k\">+</span><span class=\"s\">'-paddingleft-3{padding-left:68px}'</span><span class=\"k\">);</span>","                    <span class=\"k\">break</span><span class=\"k\">;</span>","                <span class=\"k\">case</span> <span class=\"s\">'num'</span><span class=\"k\">:</span>","                <span class=\"k\">case</span> <span class=\"s\">'num1'</span><span class=\"k\">:</span>","                    customCss<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'li.list-'</span><span class=\"k\">+</span>p<span class=\"k\">+</span><span class=\"s\">'-paddingleft-1{padding-left:25px}'</span><span class=\"k\">);</span>","                    <span class=\"k\">break</span><span class=\"k\">;</span>","                <span class=\"k\">case</span> <span class=\"s\">'num2'</span><span class=\"k\">:</span>","                    customCss<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'li.list-'</span><span class=\"k\">+</span>p<span class=\"k\">+</span><span class=\"s\">'-paddingleft-1{padding-left:35px}'</span><span class=\"k\">);</span>","                    customCss<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'li.list-'</span><span class=\"k\">+</span>p<span class=\"k\">+</span><span class=\"s\">'-paddingleft-2{padding-left:40px}'</span><span class=\"k\">);</span>","                    <span class=\"k\">break</span><span class=\"k\">;</span>","                <span class=\"k\">case</span> <span class=\"s\">'dash'</span><span class=\"k\">:</span>","                    customCss<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'li.list-'</span><span class=\"k\">+</span>p<span class=\"k\">+</span><span class=\"s\">'-paddingleft{padding-left:35px}'</span><span class=\"k\">);</span>","                    <span class=\"k\">break</span><span class=\"k\">;</span>","                <span class=\"k\">case</span> <span class=\"s\">'dot'</span><span class=\"k\">:</span>","                    customCss<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'li.list-'</span><span class=\"k\">+</span>p<span class=\"k\">+</span><span class=\"s\">'-paddingleft{padding-left:20px}'</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        customCss<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'.list-paddingleft-1{padding-left:0}'</span><span class=\"k\">);</span>","        customCss<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'.list-paddingleft-2{padding-left:'</span><span class=\"k\">+</span>me<span class=\"k\">.</span>options<span class=\"k\">.</span>listDefaultPaddingLeft<span class=\"k\">+</span><span class=\"s\">'px}'</span><span class=\"k\">);</span>","        customCss<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'.list-paddingleft-3{padding-left:'</span><span class=\"k\">+</span>me<span class=\"k\">.</span>options<span class=\"k\">.</span>listDefaultPaddingLeft<span class=\"k\">*</span><span class=\"s\">2</span><span class=\"k\">+</span><span class=\"s\">'px}'</span><span class=\"k\">);</span>","        <span class=\"c\">//&#22914;&#26524;&#19981;&#32473;&#23485;&#24230;&#20250;&#22312;&#33258;&#23450;&#24212;&#26679;&#24335;&#37324;&#20986;&#29616;&#28378;&#21160;&#26465;</span>","        utils<span class=\"k\">.</span>cssRule<span class=\"k\">(</span><span class=\"s\">'list'</span><span class=\"k\">,</span> <span class=\"s\">'ol,ul{margin:0;pading:0;'</span><span class=\"k\">+(</span>browser<span class=\"k\">.</span>ie <span class=\"k\">?</span> <span class=\"s\">''</span> <span class=\"k\">:</span> <span class=\"s\">'width:95%'</span><span class=\"k\">)+</span><span class=\"s\">'}li{clear:both;}'</span><span class=\"k\">+</span>customCss<span class=\"k\">.</span>join<span class=\"k\">(</span><span class=\"s\">'</span><span class=\"t\">\\n</span><span class=\"s\">'</span><span class=\"k\">),</span> me<span class=\"k\">.</span>document<span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"c\">//&#21333;&#29420;&#22788;&#29702;&#21098;&#20999;&#30340;&#38382;&#39064;</span>","    me<span class=\"k\">.</span>ready<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","        domUtils<span class=\"k\">.</span>on<span class=\"k\">(</span>me<span class=\"k\">.</span>body<span class=\"k\">,</span><span class=\"s\">'cut'</span><span class=\"k\">,</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","            setTimeout<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","                <span class=\"k\">var</span> rng <span class=\"k\">=</span> me<span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">(),</span>li<span class=\"k\">;</span>","                <span class=\"k\">if</span><span class=\"k\">(</span>li <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>rng<span class=\"k\">.</span>startContainer<span class=\"k\">,</span><span class=\"s\">'li'</span><span class=\"k\">,</span><span class=\"k\">true</span><span class=\"k\">))</span><span class=\"k\">{</span>","                    <span class=\"k\">if</span><span class=\"k\">(!</span>li<span class=\"k\">.</span>nextSibling <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>isEmptyBlock<span class=\"k\">(</span>li<span class=\"k\">))</span><span class=\"k\">{</span>","                        <span class=\"k\">var</span> pn <span class=\"k\">=</span> li<span class=\"k\">.</span>parentNode<span class=\"k\">,</span>node<span class=\"k\">;</span>","                        <span class=\"k\">if</span><span class=\"k\">(</span>node <span class=\"k\">=</span> pn<span class=\"k\">.</span>previousSibling<span class=\"k\">)</span><span class=\"k\">{</span>","                            domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>pn<span class=\"k\">);</span>","                            rng<span class=\"k\">.</span>setStartAtLast<span class=\"k\">(</span>node<span class=\"k\">).</span>collapse<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","                            rng<span class=\"k\">.</span>select<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","                        <span class=\"k\">}</span><span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span>node <span class=\"k\">=</span> pn<span class=\"k\">.</span>nextSibling<span class=\"k\">)</span><span class=\"k\">{</span>","                            domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>pn<span class=\"k\">);</span>","                            rng<span class=\"k\">.</span>setStartAtFirst<span class=\"k\">(</span>node<span class=\"k\">).</span>collapse<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","                            rng<span class=\"k\">.</span>select<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","                        <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","                            <span class=\"k\">var</span> tmpNode <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'p'</span><span class=\"k\">);</span>","                            domUtils<span class=\"k\">.</span>fillNode<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">,</span>tmpNode<span class=\"k\">);</span>","                            pn<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>tmpNode<span class=\"k\">,</span>pn<span class=\"k\">);</span>","                            domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>pn<span class=\"k\">);</span>","                            rng<span class=\"k\">.</span>setStart<span class=\"k\">(</span>tmpNode<span class=\"k\">,</span><span class=\"s\">0</span><span class=\"k\">).</span>collapse<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","                            rng<span class=\"k\">.</span>select<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span><span class=\"k\">)</span>","        <span class=\"k\">}</span><span class=\"k\">)</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","","    <span class=\"k\">function</span> getStyle<span class=\"k\">(</span>node<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">var</span> cls <span class=\"k\">=</span> node<span class=\"k\">.</span>className<span class=\"k\">;</span>","        <span class=\"k\">if</span><span class=\"k\">(</span>domUtils<span class=\"k\">.</span>hasClass<span class=\"k\">(</span>node<span class=\"k\">,</span><span class=\"s\">/custom_/</span><span class=\"k\">))</span><span class=\"k\">{</span>","            <span class=\"k\">return</span> cls<span class=\"k\">.</span>match<span class=\"k\">(</span><span class=\"s\">/custom_(\\w+)/</span><span class=\"k\">)[</span><span class=\"s\">1</span><span class=\"k\">]</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> <span class=\"s\">''</span>","    <span class=\"k\">}</span>","    <span class=\"c\">//&#36827;&#20837;&#32534;&#36753;&#22120;&#30340;li&#35201;&#22871;p&#26631;&#31614;</span>","    me<span class=\"k\">.</span>addInputRule<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>root<span class=\"k\">)</span><span class=\"k\">{</span>","        utils<span class=\"k\">.</span>each<span class=\"k\">(</span>root<span class=\"k\">.</span>getNodesByTagName<span class=\"k\">(</span><span class=\"s\">'li'</span><span class=\"k\">),</span><span class=\"k\">function</span><span class=\"k\">(</span>li<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">var</span> tmpP <span class=\"k\">=</span> UE<span class=\"k\">.</span>uNode<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'p'</span><span class=\"k\">);</span>","            <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> i<span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>ci<span class=\"k\">;</span>ci<span class=\"k\">=</span>li<span class=\"k\">.</span>children<span class=\"k\">[</span>i<span class=\"k\">];)</span><span class=\"k\">{</span>","                <span class=\"k\">if</span><span class=\"k\">(</span>ci<span class=\"k\">.</span>type <span class=\"k\">==</span> <span class=\"s\">'text'</span> <span class=\"k\">||</span> dtd<span class=\"k\">.</span>$inline<span class=\"k\">[</span>ci<span class=\"k\">.</span>tagName<span class=\"k\">])</span><span class=\"k\">{</span>","                    tmpP<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>ci<span class=\"k\">);</span>","                <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","                    <span class=\"k\">if</span><span class=\"k\">(</span>tmpP<span class=\"k\">.</span>firstChild<span class=\"k\">())</span><span class=\"k\">{</span>","                        li<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>tmpP<span class=\"k\">,</span>ci<span class=\"k\">);</span>","                        tmpP <span class=\"k\">=</span> UE<span class=\"k\">.</span>uNode<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'p'</span><span class=\"k\">);</span>","                        i <span class=\"k\">=</span> i <span class=\"k\">+</span> <span class=\"s\">2</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","                        i<span class=\"k\">++;</span>","                    <span class=\"k\">}</span>","","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>tmpP<span class=\"k\">.</span>firstChild<span class=\"k\">()</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>tmpP<span class=\"k\">.</span>parentNode<span class=\"k\">)</span><span class=\"k\">{</span>","                li<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>tmpP<span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">)</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"c\">//&#35843;&#25972;&#32034;&#24341;&#26631;&#31614;</span>","    me<span class=\"k\">.</span>addListener<span class=\"k\">(</span><span class=\"s\">'contentchange'</span><span class=\"k\">,</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","        utils<span class=\"k\">.</span>each<span class=\"k\">(</span>domUtils<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">,</span><span class=\"s\">'ol ul'</span><span class=\"k\">),</span><span class=\"k\">function</span><span class=\"k\">(</span>node<span class=\"k\">)</span><span class=\"k\">{</span>","","            <span class=\"k\">if</span><span class=\"k\">(!</span>domUtils<span class=\"k\">.</span>inDoc<span class=\"k\">(</span>node<span class=\"k\">,</span>me<span class=\"k\">.</span>document<span class=\"k\">))</span>","                <span class=\"k\">return</span><span class=\"k\">;</span>","            <span class=\"k\">var</span> index <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>type <span class=\"k\">=</span> <span class=\"s\">2</span><span class=\"k\">,</span>parent <span class=\"k\">=</span> node<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","            <span class=\"k\">if</span><span class=\"k\">(</span> domUtils<span class=\"k\">.</span>hasClass<span class=\"k\">(</span>node<span class=\"k\">,</span><span class=\"s\">/custom_/</span><span class=\"k\">))</span><span class=\"k\">{</span>","                <span class=\"k\">if</span><span class=\"k\">(!(</span><span class=\"s\">/[ou]l/i</span><span class=\"k\">.</span>test<span class=\"k\">(</span>parent<span class=\"k\">.</span>tagName<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>hasClass<span class=\"k\">(</span>parent<span class=\"k\">,</span><span class=\"s\">/custom_/</span><span class=\"k\">)))</span><span class=\"k\">{</span>","                    type <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","                <span class=\"k\">if</span><span class=\"k\">(</span><span class=\"s\">/[ou]l/i</span><span class=\"k\">.</span>test<span class=\"k\">(</span>parent<span class=\"k\">.</span>tagName<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>hasClass<span class=\"k\">(</span>parent<span class=\"k\">,</span><span class=\"s\">/custom_/</span><span class=\"k\">))</span><span class=\"k\">{</span>","                    type <span class=\"k\">=</span> <span class=\"s\">3</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","            style <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getStyle<span class=\"k\">(</span>node<span class=\"k\">,</span> <span class=\"s\">'list-style-type'</span><span class=\"k\">);</span>","            node<span class=\"k\">.</span>style<span class=\"k\">.</span>cssText <span class=\"k\">=</span> style <span class=\"k\">?</span> <span class=\"s\">'list-style-type:'</span> <span class=\"k\">+</span> style <span class=\"k\">:</span> <span class=\"s\">''</span><span class=\"k\">;</span>","            node<span class=\"k\">.</span>className <span class=\"k\">=</span> utils<span class=\"k\">.</span>trim<span class=\"k\">(</span>node<span class=\"k\">.</span>className<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/list-paddingleft-\\w+/</span><span class=\"k\">,</span><span class=\"s\">''</span><span class=\"k\">))</span> <span class=\"k\">+</span> <span class=\"s\">' list-paddingleft-'</span> <span class=\"k\">+</span> type<span class=\"k\">;</span>","            utils<span class=\"k\">.</span>each<span class=\"k\">(</span>domUtils<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span>node<span class=\"k\">,</span><span class=\"s\">'li'</span><span class=\"k\">),</span><span class=\"k\">function</span><span class=\"k\">(</span>li<span class=\"k\">)</span><span class=\"k\">{</span>","                li<span class=\"k\">.</span>style<span class=\"k\">.</span>cssText <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>li<span class=\"k\">.</span>style<span class=\"k\">.</span>cssText <span class=\"k\">=</span> <span class=\"s\">''</span><span class=\"k\">);</span>","                <span class=\"k\">if</span><span class=\"k\">(!</span>li<span class=\"k\">.</span>firstChild<span class=\"k\">)</span><span class=\"k\">{</span>","                    domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>li<span class=\"k\">);</span>","                    <span class=\"k\">return</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","                <span class=\"k\">if</span><span class=\"k\">(</span>li<span class=\"k\">.</span>parentNode <span class=\"k\">!==</span> node<span class=\"k\">)</span><span class=\"k\">{</span>","                    <span class=\"k\">return</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","                index<span class=\"k\">++;</span>","                <span class=\"k\">if</span><span class=\"k\">(</span>domUtils<span class=\"k\">.</span>hasClass<span class=\"k\">(</span>node<span class=\"k\">,</span><span class=\"s\">/custom_/</span><span class=\"k\">)</span> <span class=\"k\">)</span><span class=\"k\">{</span>","                    <span class=\"k\">var</span> paddingLeft <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">,</span>currentStyle <span class=\"k\">=</span> getStyle<span class=\"k\">(</span>node<span class=\"k\">);</span>","                    <span class=\"k\">if</span><span class=\"k\">(</span>node<span class=\"k\">.</span>tagName <span class=\"k\">==</span> <span class=\"s\">'OL'</span><span class=\"k\">)</span><span class=\"k\">{</span>","                        <span class=\"k\">if</span><span class=\"k\">(</span>currentStyle<span class=\"k\">)</span><span class=\"k\">{</span>","                            <span class=\"k\">switch</span><span class=\"k\">(</span>currentStyle<span class=\"k\">)</span><span class=\"k\">{</span>","                                <span class=\"k\">case</span> <span class=\"s\">'cn'</span> <span class=\"k\">:</span>","                                <span class=\"k\">case</span> <span class=\"s\">'cn1'</span><span class=\"k\">:</span>","                                <span class=\"k\">case</span> <span class=\"s\">'cn2'</span><span class=\"k\">:</span>","                                    <span class=\"k\">if</span><span class=\"k\">(</span>index <span class=\"k\">&gt;</span> <span class=\"s\">10</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>index <span class=\"k\">%</span> <span class=\"s\">10</span> <span class=\"k\">==</span> <span class=\"s\">0</span> <span class=\"k\">||</span> index <span class=\"k\">&gt;</span> <span class=\"s\">10</span> <span class=\"k\">&amp;&amp;</span> index <span class=\"k\">&lt;</span> <span class=\"s\">20</span><span class=\"k\">))</span><span class=\"k\">{</span>","                                        paddingLeft <span class=\"k\">=</span> <span class=\"s\">2</span>","                                    <span class=\"k\">}</span><span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span>index <span class=\"k\">&gt;</span> <span class=\"s\">20</span><span class=\"k\">)</span><span class=\"k\">{</span>","                                        paddingLeft <span class=\"k\">=</span> <span class=\"s\">3</span>","                                    <span class=\"k\">}</span>","                                    <span class=\"k\">break</span><span class=\"k\">;</span>","                                <span class=\"k\">case</span> <span class=\"s\">'num2'</span> <span class=\"k\">:</span>","                                    <span class=\"k\">if</span><span class=\"k\">(</span>index <span class=\"k\">&gt;</span> <span class=\"s\">9</span><span class=\"k\">)</span><span class=\"k\">{</span>","                                        paddingLeft <span class=\"k\">=</span> <span class=\"s\">2</span>","                                    <span class=\"k\">}</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","                        li<span class=\"k\">.</span>className <span class=\"k\">=</span> <span class=\"s\">'list-'</span><span class=\"k\">+</span>customStyle<span class=\"k\">[</span>currentStyle<span class=\"k\">]+</span> index <span class=\"k\">+</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> <span class=\"s\">'list-'</span><span class=\"k\">+</span>currentStyle<span class=\"k\">+</span><span class=\"s\">'-paddingleft-'</span> <span class=\"k\">+</span> paddingLeft<span class=\"k\">;</span>","                    <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","                        li<span class=\"k\">.</span>className <span class=\"k\">=</span> <span class=\"s\">'list-'</span><span class=\"k\">+</span>customStyle<span class=\"k\">[</span>currentStyle<span class=\"k\">]</span>  <span class=\"k\">+</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> <span class=\"s\">'list-'</span><span class=\"k\">+</span>currentStyle<span class=\"k\">+</span><span class=\"s\">'-paddingleft'</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","                    li<span class=\"k\">.</span>className <span class=\"k\">=</span> li<span class=\"k\">.</span>className<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/list-[\\w\\-]+/gi</span><span class=\"k\">,</span><span class=\"s\">''</span><span class=\"k\">);</span>","                <span class=\"k\">}</span>","                <span class=\"k\">var</span> className <span class=\"k\">=</span> li<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">'class'</span><span class=\"k\">);</span>","                <span class=\"k\">if</span><span class=\"k\">(</span>className <span class=\"k\">!==</span> <span class=\"k\">null</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>className<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/\\s/g</span><span class=\"k\">,</span><span class=\"s\">''</span><span class=\"k\">))</span><span class=\"k\">{</span>","                    domUtils<span class=\"k\">.</span>removeAttributes<span class=\"k\">(</span>li<span class=\"k\">,</span><span class=\"s\">'class'</span><span class=\"k\">)</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span><span class=\"k\">);</span>","            adjustList<span class=\"k\">(</span>node<span class=\"k\">,</span>node<span class=\"k\">.</span>tagName<span class=\"k\">.</span>toLowerCase<span class=\"k\">(),</span>getStyle<span class=\"k\">(</span>node<span class=\"k\">)||</span>domUtils<span class=\"k\">.</span>getStyle<span class=\"k\">(</span>node<span class=\"k\">,</span> <span class=\"s\">'list-style-type'</span><span class=\"k\">),</span><span class=\"k\">true</span><span class=\"k\">)</span>","        <span class=\"k\">}</span><span class=\"k\">)</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","","","    <span class=\"k\">function</span> adjustList<span class=\"k\">(</span>list<span class=\"k\">,</span> tag<span class=\"k\">,</span> style<span class=\"k\">,</span>ignoreEmpty<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> nextList <span class=\"k\">=</span> list<span class=\"k\">.</span>nextSibling<span class=\"k\">;</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>nextList <span class=\"k\">&amp;&amp;</span> nextList<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> nextList<span class=\"k\">.</span>tagName<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">==</span> tag <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>getStyle<span class=\"k\">(</span>nextList<span class=\"k\">)</span> <span class=\"k\">||</span> domUtils<span class=\"k\">.</span>getStyle<span class=\"k\">(</span>nextList<span class=\"k\">,</span> <span class=\"s\">'list-style-type'</span><span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">(</span>tag <span class=\"k\">==</span> <span class=\"s\">'ol'</span> <span class=\"k\">?</span> <span class=\"s\">'decimal'</span> <span class=\"k\">:</span> <span class=\"s\">'disc'</span><span class=\"k\">))</span> <span class=\"k\">==</span> style<span class=\"k\">)</span> <span class=\"k\">{</span>","            domUtils<span class=\"k\">.</span>moveChild<span class=\"k\">(</span>nextList<span class=\"k\">,</span> list<span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>nextList<span class=\"k\">.</span>childNodes<span class=\"k\">.</span>length <span class=\"k\">==</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>nextList<span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        <span class=\"k\">if</span><span class=\"k\">(</span>nextList <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>isFillChar<span class=\"k\">(</span>nextList<span class=\"k\">))</span><span class=\"k\">{</span>","            domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>nextList<span class=\"k\">);</span>","        <span class=\"k\">}</span>","        <span class=\"k\">var</span> preList <span class=\"k\">=</span> list<span class=\"k\">.</span>previousSibling<span class=\"k\">;</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>preList <span class=\"k\">&amp;&amp;</span> preList<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> preList<span class=\"k\">.</span>tagName<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">==</span> tag <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>getStyle<span class=\"k\">(</span>preList<span class=\"k\">)</span> <span class=\"k\">||</span> domUtils<span class=\"k\">.</span>getStyle<span class=\"k\">(</span>preList<span class=\"k\">,</span> <span class=\"s\">'list-style-type'</span><span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">(</span>tag <span class=\"k\">==</span> <span class=\"s\">'ol'</span> <span class=\"k\">?</span> <span class=\"s\">'decimal'</span> <span class=\"k\">:</span> <span class=\"s\">'disc'</span><span class=\"k\">))</span> <span class=\"k\">==</span> style<span class=\"k\">)</span> <span class=\"k\">{</span>","            domUtils<span class=\"k\">.</span>moveChild<span class=\"k\">(</span>list<span class=\"k\">,</span> preList<span class=\"k\">);</span>","        <span class=\"k\">}</span>","        <span class=\"k\">if</span><span class=\"k\">(</span>preList <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>isFillChar<span class=\"k\">(</span>preList<span class=\"k\">))</span><span class=\"k\">{</span>","            domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>preList<span class=\"k\">);</span>","        <span class=\"k\">}</span>","        <span class=\"k\">!</span>ignoreEmpty <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>isEmptyBlock<span class=\"k\">(</span>list<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>list<span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> setListStyle<span class=\"k\">(</span>list<span class=\"k\">,</span>style<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">if</span><span class=\"k\">(</span>customStyle<span class=\"k\">[</span>style<span class=\"k\">])</span><span class=\"k\">{</span>","            list<span class=\"k\">.</span>className <span class=\"k\">=</span> <span class=\"s\">'custom_'</span> <span class=\"k\">+</span> style<span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"k\">try</span><span class=\"k\">{</span>","            domUtils<span class=\"k\">.</span>setStyle<span class=\"k\">(</span>list<span class=\"k\">,</span> <span class=\"s\">'list-style-type'</span><span class=\"k\">,</span> style<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">catch</span><span class=\"k\">(</span>e<span class=\"k\">)</span><span class=\"k\">{}</span>","    <span class=\"k\">}</span>","    <span class=\"k\">function</span> clearEmptySibling<span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> tmpNode <span class=\"k\">=</span> node<span class=\"k\">.</span>previousSibling<span class=\"k\">;</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>tmpNode <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>isEmptyBlock<span class=\"k\">(</span>tmpNode<span class=\"k\">))</span> <span class=\"k\">{</span>","            domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>tmpNode<span class=\"k\">);</span>","        <span class=\"k\">}</span>","        tmpNode <span class=\"k\">=</span> node<span class=\"k\">.</span>nextSibling<span class=\"k\">;</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>tmpNode <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>isEmptyBlock<span class=\"k\">(</span>tmpNode<span class=\"k\">))</span> <span class=\"k\">{</span>","            domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>tmpNode<span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    me<span class=\"k\">.</span>addListener<span class=\"k\">(</span><span class=\"s\">'keydown'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>type<span class=\"k\">,</span> evt<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">function</span> preventAndSave<span class=\"k\">()</span> <span class=\"k\">{</span>","            evt<span class=\"k\">.</span>preventDefault <span class=\"k\">?</span> evt<span class=\"k\">.</span>preventDefault<span class=\"k\">()</span> <span class=\"k\">:</span> <span class=\"k\">(</span>evt<span class=\"k\">.</span>returnValue <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">);</span>","            me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">'contentchange'</span><span class=\"k\">);</span>","            me<span class=\"k\">.</span>undoManger <span class=\"k\">&amp;&amp;</span> me<span class=\"k\">.</span>undoManger<span class=\"k\">.</span>save<span class=\"k\">();</span>","        <span class=\"k\">}</span>","        <span class=\"k\">function</span> findList<span class=\"k\">(</span>node<span class=\"k\">,</span>filterFn<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">while</span><span class=\"k\">(</span>node <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>domUtils<span class=\"k\">.</span>isBody<span class=\"k\">(</span>node<span class=\"k\">))</span><span class=\"k\">{</span>","                <span class=\"k\">if</span><span class=\"k\">(</span>filterFn<span class=\"k\">(</span>node<span class=\"k\">))</span><span class=\"k\">{</span>","                    <span class=\"k\">return</span> <span class=\"k\">null</span>","                <span class=\"k\">}</span>","                <span class=\"k\">if</span><span class=\"k\">(</span>node<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> <span class=\"s\">/[ou]l/i</span><span class=\"k\">.</span>test<span class=\"k\">(</span>node<span class=\"k\">.</span>tagName<span class=\"k\">))</span><span class=\"k\">{</span>","                    <span class=\"k\">return</span> node<span class=\"k\">;</span>","                <span class=\"k\">}</span>","                node <span class=\"k\">=</span> node<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","            <span class=\"k\">}</span>","            <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"k\">var</span> keyCode <span class=\"k\">=</span> evt<span class=\"k\">.</span>keyCode <span class=\"k\">||</span> evt<span class=\"k\">.</span>which<span class=\"k\">;</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>keyCode <span class=\"k\">==</span> <span class=\"s\">13</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>evt<span class=\"k\">.</span>shiftKey<span class=\"k\">)</span> <span class=\"k\">{</span><span class=\"c\">//&#22238;&#36710;</span>","            <span class=\"k\">var</span> range <span class=\"k\">=</span> me<span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">(),</span>","                start <span class=\"k\">=</span> findList<span class=\"k\">(</span>range<span class=\"k\">.</span>startContainer<span class=\"k\">,</span><span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> node<span class=\"k\">.</span>tagName <span class=\"k\">==</span> <span class=\"s\">'TABLE'</span><span class=\"k\">;</span>","                <span class=\"k\">}</span><span class=\"k\">),</span>","                end <span class=\"k\">=</span> range<span class=\"k\">.</span>collapsed <span class=\"k\">?</span> start <span class=\"k\">:</span> findList<span class=\"k\">(</span>range<span class=\"k\">.</span>endContainer<span class=\"k\">,</span><span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> node<span class=\"k\">.</span>tagName <span class=\"k\">==</span> <span class=\"s\">'TABLE'</span><span class=\"k\">;</span>","                <span class=\"k\">}</span><span class=\"k\">);</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>start <span class=\"k\">&amp;&amp;</span> end <span class=\"k\">&amp;&amp;</span> start <span class=\"k\">===</span> end<span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"k\">if</span> <span class=\"k\">(!</span>range<span class=\"k\">.</span>collapsed<span class=\"k\">)</span> <span class=\"k\">{</span>","                    start <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>range<span class=\"k\">.</span>startContainer<span class=\"k\">,</span> <span class=\"s\">'li'</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","                    end <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>range<span class=\"k\">.</span>endContainer<span class=\"k\">,</span> <span class=\"s\">'li'</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>start <span class=\"k\">&amp;&amp;</span> end <span class=\"k\">&amp;&amp;</span> start <span class=\"k\">===</span> end<span class=\"k\">)</span> <span class=\"k\">{</span>","                        range<span class=\"k\">.</span>deleteContents<span class=\"k\">();</span>","                        li <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>range<span class=\"k\">.</span>startContainer<span class=\"k\">,</span> <span class=\"s\">'li'</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>li <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>isEmptyBlock<span class=\"k\">(</span>li<span class=\"k\">))</span> <span class=\"k\">{</span>","","                            pre <span class=\"k\">=</span> li<span class=\"k\">.</span>previousSibling<span class=\"k\">;</span>","                            next <span class=\"k\">=</span> li<span class=\"k\">.</span>nextSibling<span class=\"k\">;</span>","                            p <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'p'</span><span class=\"k\">);</span>","","                            domUtils<span class=\"k\">.</span>fillNode<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">,</span> p<span class=\"k\">);</span>","                            parentList <span class=\"k\">=</span> li<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span>pre <span class=\"k\">&amp;&amp;</span> next<span class=\"k\">)</span> <span class=\"k\">{</span>","                                range<span class=\"k\">.</span>setStart<span class=\"k\">(</span>next<span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">).</span>collapse<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">).</span>select<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","                                domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>li<span class=\"k\">);</span>","","                            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                                <span class=\"k\">if</span> <span class=\"k\">(!</span>pre <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>next <span class=\"k\">||</span> <span class=\"k\">!</span>pre<span class=\"k\">)</span> <span class=\"k\">{</span>","","                                    parentList<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>p<span class=\"k\">,</span> parentList<span class=\"k\">);</span>","","","                                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                                    li<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>p<span class=\"k\">,</span> parentList<span class=\"k\">.</span>nextSibling<span class=\"k\">);</span>","                                <span class=\"k\">}</span>","                                domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>li<span class=\"k\">);</span>","                                <span class=\"k\">if</span> <span class=\"k\">(!</span>parentList<span class=\"k\">.</span>firstChild<span class=\"k\">)</span> <span class=\"k\">{</span>","                                    domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>parentList<span class=\"k\">);</span>","                                <span class=\"k\">}</span>","                                range<span class=\"k\">.</span>setStart<span class=\"k\">(</span>p<span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">).</span>setCursor<span class=\"k\">();</span>","","","                            <span class=\"k\">}</span>","                            preventAndSave<span class=\"k\">();</span>","                            <span class=\"k\">return</span><span class=\"k\">;</span>","","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> tmpRange <span class=\"k\">=</span> range<span class=\"k\">.</span>cloneRange<span class=\"k\">(),</span>","                            bk <span class=\"k\">=</span> tmpRange<span class=\"k\">.</span>collapse<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">).</span>createBookmark<span class=\"k\">();</span>","","                        range<span class=\"k\">.</span>deleteContents<span class=\"k\">();</span>","                        tmpRange<span class=\"k\">.</span>moveToBookmark<span class=\"k\">(</span>bk<span class=\"k\">);</span>","                        <span class=\"k\">var</span> li <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>tmpRange<span class=\"k\">.</span>startContainer<span class=\"k\">,</span> <span class=\"s\">'li'</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","","                        clearEmptySibling<span class=\"k\">(</span>li<span class=\"k\">);</span>","                        tmpRange<span class=\"k\">.</span>select<span class=\"k\">();</span>","                        preventAndSave<span class=\"k\">();</span>","                        <span class=\"k\">return</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","","","                li <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>range<span class=\"k\">.</span>startContainer<span class=\"k\">,</span> <span class=\"s\">'li'</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span>li<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isEmptyBlock<span class=\"k\">(</span>li<span class=\"k\">))</span> <span class=\"k\">{</span>","                        bk <span class=\"k\">=</span> range<span class=\"k\">.</span>createBookmark<span class=\"k\">();</span>","                        <span class=\"k\">var</span> parentList <span class=\"k\">=</span> li<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>li <span class=\"k\">!==</span> parentList<span class=\"k\">.</span>lastChild<span class=\"k\">)</span> <span class=\"k\">{</span>","                            domUtils<span class=\"k\">.</span>breakParent<span class=\"k\">(</span>li<span class=\"k\">,</span> parentList<span class=\"k\">);</span>","                            clearEmptySibling<span class=\"k\">(</span>li<span class=\"k\">);</span>","                        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","","                            parentList<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>li<span class=\"k\">,</span> parentList<span class=\"k\">.</span>nextSibling<span class=\"k\">);</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isEmptyNode<span class=\"k\">(</span>parentList<span class=\"k\">))</span> <span class=\"k\">{</span>","                                domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>parentList<span class=\"k\">);</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","                        <span class=\"c\">//&#23884;&#22871;&#19981;&#22788;&#29702;</span>","                        <span class=\"k\">if</span> <span class=\"k\">(!</span>dtd<span class=\"k\">.</span>$list<span class=\"k\">[</span>li<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>tagName<span class=\"k\">])</span> <span class=\"k\">{</span>","","                            <span class=\"k\">if</span> <span class=\"k\">(!</span>domUtils<span class=\"k\">.</span>isBlockElm<span class=\"k\">(</span>li<span class=\"k\">.</span>firstChild<span class=\"k\">))</span> <span class=\"k\">{</span>","                                p <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'p'</span><span class=\"k\">);</span>","                                li<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>p<span class=\"k\">,</span> li<span class=\"k\">);</span>","                                <span class=\"k\">while</span> <span class=\"k\">(</span>li<span class=\"k\">.</span>firstChild<span class=\"k\">)</span> <span class=\"k\">{</span>","                                    p<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>li<span class=\"k\">.</span>firstChild<span class=\"k\">);</span>","                                <span class=\"k\">}</span>","                                domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>li<span class=\"k\">);</span>","                            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                                domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>li<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","                        range<span class=\"k\">.</span>moveToBookmark<span class=\"k\">(</span>bk<span class=\"k\">).</span>select<span class=\"k\">();</span>","","","                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> first <span class=\"k\">=</span> li<span class=\"k\">.</span>firstChild<span class=\"k\">;</span>","                        <span class=\"k\">if</span> <span class=\"k\">(!</span>first <span class=\"k\">||</span> <span class=\"k\">!</span>domUtils<span class=\"k\">.</span>isBlockElm<span class=\"k\">(</span>first<span class=\"k\">))</span> <span class=\"k\">{</span>","                            <span class=\"k\">var</span> p <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'p'</span><span class=\"k\">);</span>","","                            <span class=\"k\">!</span>li<span class=\"k\">.</span>firstChild <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>fillNode<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">,</span> p<span class=\"k\">);</span>","                            <span class=\"k\">while</span> <span class=\"k\">(</span>li<span class=\"k\">.</span>firstChild<span class=\"k\">)</span> <span class=\"k\">{</span>","","                                p<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>li<span class=\"k\">.</span>firstChild<span class=\"k\">);</span>","                            <span class=\"k\">}</span>","                            li<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>p<span class=\"k\">);</span>","                            first <span class=\"k\">=</span> p<span class=\"k\">;</span>","                        <span class=\"k\">}</span>","","                        <span class=\"k\">var</span> span <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'span'</span><span class=\"k\">);</span>","","                        range<span class=\"k\">.</span>insertNode<span class=\"k\">(</span>span<span class=\"k\">);</span>","                        domUtils<span class=\"k\">.</span>breakParent<span class=\"k\">(</span>span<span class=\"k\">,</span> li<span class=\"k\">);</span>","","                        <span class=\"k\">var</span> nextLi <span class=\"k\">=</span> span<span class=\"k\">.</span>nextSibling<span class=\"k\">;</span>","                        first <span class=\"k\">=</span> nextLi<span class=\"k\">.</span>firstChild<span class=\"k\">;</span>","","                        <span class=\"k\">if</span> <span class=\"k\">(!</span>first<span class=\"k\">)</span> <span class=\"k\">{</span>","                            p <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'p'</span><span class=\"k\">);</span>","","                            domUtils<span class=\"k\">.</span>fillNode<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">,</span> p<span class=\"k\">);</span>","                            nextLi<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>p<span class=\"k\">);</span>","                            first <span class=\"k\">=</span> p<span class=\"k\">;</span>","                        <span class=\"k\">}</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isEmptyNode<span class=\"k\">(</span>first<span class=\"k\">))</span> <span class=\"k\">{</span>","                            first<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> <span class=\"s\">''</span><span class=\"k\">;</span>","                            domUtils<span class=\"k\">.</span>fillNode<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">,</span> first<span class=\"k\">);</span>","                        <span class=\"k\">}</span>","","                        range<span class=\"k\">.</span>setStart<span class=\"k\">(</span>first<span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">).</span>collapse<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">).</span>shrinkBoundary<span class=\"k\">().</span>select<span class=\"k\">();</span>","                        domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>span<span class=\"k\">);</span>","                        <span class=\"k\">var</span> pre <span class=\"k\">=</span> nextLi<span class=\"k\">.</span>previousSibling<span class=\"k\">;</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>pre <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>isEmptyBlock<span class=\"k\">(</span>pre<span class=\"k\">))</span> <span class=\"k\">{</span>","                            pre<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> <span class=\"s\">'&lt;p&gt;&lt;/p&gt;'</span><span class=\"k\">;</span>","                            domUtils<span class=\"k\">.</span>fillNode<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">,</span> pre<span class=\"k\">.</span>firstChild<span class=\"k\">);</span>","                        <span class=\"k\">}</span>","","                    <span class=\"k\">}</span>","<span class=\"c\">//                        }</span>","                    preventAndSave<span class=\"k\">();</span>","                <span class=\"k\">}</span>","","","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>keyCode <span class=\"k\">==</span> <span class=\"s\">8</span><span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"c\">//&#20462;&#20013;ie&#20013;li&#19979;&#30340;&#38382;&#39064;</span>","            range <span class=\"k\">=</span> me<span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">();</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>range<span class=\"k\">.</span>collapsed <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>isStartInblock<span class=\"k\">(</span>range<span class=\"k\">))</span> <span class=\"k\">{</span>","                tmpRange <span class=\"k\">=</span> range<span class=\"k\">.</span>cloneRange<span class=\"k\">().</span>trimBoundary<span class=\"k\">();</span>","                li <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>range<span class=\"k\">.</span>startContainer<span class=\"k\">,</span> <span class=\"s\">'li'</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","                <span class=\"c\">//&#35201;&#22312;li&#30340;&#26368;&#24038;&#36793;&#65292;&#25165;&#33021;&#22788;&#29702;</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>li <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>isStartInblock<span class=\"k\">(</span>tmpRange<span class=\"k\">))</span> <span class=\"k\">{</span>","                    start <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>range<span class=\"k\">.</span>startContainer<span class=\"k\">,</span> <span class=\"s\">'p'</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>start <span class=\"k\">&amp;&amp;</span> start <span class=\"k\">!==</span> li<span class=\"k\">.</span>firstChild<span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> parentList <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>start<span class=\"k\">,[</span><span class=\"s\">'ol'</span><span class=\"k\">,</span><span class=\"s\">'ul'</span><span class=\"k\">]);</span>","                        domUtils<span class=\"k\">.</span>breakParent<span class=\"k\">(</span>start<span class=\"k\">,</span>parentList<span class=\"k\">);</span>","                        clearEmptySibling<span class=\"k\">(</span>start<span class=\"k\">);</span>","                        me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">'contentchange'</span><span class=\"k\">);</span>","                        range<span class=\"k\">.</span>setStart<span class=\"k\">(</span>start<span class=\"k\">,</span><span class=\"s\">0</span><span class=\"k\">).</span>setCursor<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span><span class=\"k\">true</span><span class=\"k\">);</span>","                        me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">'saveScene'</span><span class=\"k\">);</span>","                        domUtils<span class=\"k\">.</span>preventDefault<span class=\"k\">(</span>evt<span class=\"k\">);</span>","                        <span class=\"k\">return</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","","                    <span class=\"k\">if</span> <span class=\"k\">(</span>li <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>pre <span class=\"k\">=</span> li<span class=\"k\">.</span>previousSibling<span class=\"k\">))</span> <span class=\"k\">{</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>keyCode <span class=\"k\">==</span> <span class=\"s\">46</span> <span class=\"k\">&amp;&amp;</span> li<span class=\"k\">.</span>childNodes<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">return</span><span class=\"k\">;</span>","                        <span class=\"k\">}</span>","                        <span class=\"c\">//&#26377;&#21487;&#33021;&#19978;&#36793;&#30340;&#20804;&#24351;&#33410;&#28857;&#26159;&#20010;2&#32423;&#33756;&#21333;&#65292;&#35201;&#36861;&#21152;&#21040;2&#32423;&#33756;&#21333;&#30340;&#26368;&#21518;&#30340;li</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>dtd<span class=\"k\">.</span>$list<span class=\"k\">[</span>pre<span class=\"k\">.</span>tagName<span class=\"k\">])</span> <span class=\"k\">{</span>","                            pre <span class=\"k\">=</span> pre<span class=\"k\">.</span>lastChild<span class=\"k\">;</span>","                        <span class=\"k\">}</span>","                        me<span class=\"k\">.</span>undoManger <span class=\"k\">&amp;&amp;</span> me<span class=\"k\">.</span>undoManger<span class=\"k\">.</span>save<span class=\"k\">();</span>","                        first <span class=\"k\">=</span> li<span class=\"k\">.</span>firstChild<span class=\"k\">;</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isBlockElm<span class=\"k\">(</span>first<span class=\"k\">))</span> <span class=\"k\">{</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isEmptyNode<span class=\"k\">(</span>first<span class=\"k\">))</span> <span class=\"k\">{</span>","<span class=\"c\">//                                    range.setEnd(pre, pre.childNodes.length).shrinkBoundary().collapse().select(true);</span>","                                pre<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>first<span class=\"k\">);</span>","                                range<span class=\"k\">.</span>setStart<span class=\"k\">(</span>first<span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">).</span>setCursor<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","                                <span class=\"c\">//first&#19981;&#26159;&#21807;&#19968;&#30340;&#33410;&#28857;</span>","                                <span class=\"k\">while</span> <span class=\"k\">(</span>li<span class=\"k\">.</span>firstChild<span class=\"k\">)</span> <span class=\"k\">{</span>","                                    pre<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>li<span class=\"k\">.</span>firstChild<span class=\"k\">);</span>","                                <span class=\"k\">}</span>","                            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","","                                span <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'span'</span><span class=\"k\">);</span>","                                range<span class=\"k\">.</span>insertNode<span class=\"k\">(</span>span<span class=\"k\">);</span>","                                <span class=\"c\">//&#21028;&#26029;pre&#26159;&#21542;&#26159;&#31354;&#30340;&#33410;&#28857;,&#22914;&#26524;&#26159;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&#31867;&#22411;&#30340;&#31354;&#33410;&#28857;&#65292;&#24178;&#25481;p&#26631;&#31614;&#38450;&#27490;&#23427;&#21344;&#20301;</span>","                                <span class=\"k\">if</span> <span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isEmptyBlock<span class=\"k\">(</span>pre<span class=\"k\">))</span> <span class=\"k\">{</span>","                                    pre<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> <span class=\"s\">''</span><span class=\"k\">;</span>","                                <span class=\"k\">}</span>","                                domUtils<span class=\"k\">.</span>moveChild<span class=\"k\">(</span>li<span class=\"k\">,</span> pre<span class=\"k\">);</span>","                                range<span class=\"k\">.</span>setStartBefore<span class=\"k\">(</span>span<span class=\"k\">).</span>collapse<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">).</span>select<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","","                                domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>span<span class=\"k\">);</span>","","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isEmptyNode<span class=\"k\">(</span>li<span class=\"k\">))</span> <span class=\"k\">{</span>","                                <span class=\"k\">var</span> p <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'p'</span><span class=\"k\">);</span>","                                pre<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>p<span class=\"k\">);</span>","                                range<span class=\"k\">.</span>setStart<span class=\"k\">(</span>p<span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">).</span>setCursor<span class=\"k\">();</span>","<span class=\"c\">//                                    range.setEnd(pre, pre.childNodes.length).shrinkBoundary().collapse().select(true);</span>","                            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                                range<span class=\"k\">.</span>setEnd<span class=\"k\">(</span>pre<span class=\"k\">,</span> pre<span class=\"k\">.</span>childNodes<span class=\"k\">.</span>length<span class=\"k\">).</span>collapse<span class=\"k\">().</span>select<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","                                <span class=\"k\">while</span> <span class=\"k\">(</span>li<span class=\"k\">.</span>firstChild<span class=\"k\">)</span> <span class=\"k\">{</span>","                                    pre<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>li<span class=\"k\">.</span>firstChild<span class=\"k\">);</span>","                                <span class=\"k\">}</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","                        domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>li<span class=\"k\">);</span>","                        me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">'contentchange'</span><span class=\"k\">);</span>","                        me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">'saveScene'</span><span class=\"k\">);</span>","                        domUtils<span class=\"k\">.</span>preventDefault<span class=\"k\">(</span>evt<span class=\"k\">);</span>","                        <span class=\"k\">return</span><span class=\"k\">;</span>","","                    <span class=\"k\">}</span>","                    <span class=\"c\">//trace:980</span>","","                    <span class=\"k\">if</span> <span class=\"k\">(</span>li <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>li<span class=\"k\">.</span>previousSibling<span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> parentList <span class=\"k\">=</span> li<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","                        <span class=\"k\">var</span> bk <span class=\"k\">=</span> range<span class=\"k\">.</span>createBookmark<span class=\"k\">();</span>","                        <span class=\"k\">if</span><span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isTagNode<span class=\"k\">(</span>parentList<span class=\"k\">.</span>parentNode<span class=\"k\">,</span><span class=\"s\">'ol ul'</span><span class=\"k\">))</span><span class=\"k\">{</span>","                            parentList<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>li<span class=\"k\">,</span>parentList<span class=\"k\">);</span>","                            <span class=\"k\">if</span><span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isEmptyNode<span class=\"k\">(</span>parentList<span class=\"k\">))</span><span class=\"k\">{</span>","                                domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>parentList<span class=\"k\">)</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","","                            <span class=\"k\">while</span><span class=\"k\">(</span>li<span class=\"k\">.</span>firstChild<span class=\"k\">)</span><span class=\"k\">{</span>","                                parentList<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>li<span class=\"k\">.</span>firstChild<span class=\"k\">,</span>parentList<span class=\"k\">);</span>","                            <span class=\"k\">}</span>","","                            domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>li<span class=\"k\">);</span>","                            <span class=\"k\">if</span><span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isEmptyNode<span class=\"k\">(</span>parentList<span class=\"k\">))</span><span class=\"k\">{</span>","                                domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>parentList<span class=\"k\">)</span>","                            <span class=\"k\">}</span>","","                        <span class=\"k\">}</span>","                        range<span class=\"k\">.</span>moveToBookmark<span class=\"k\">(</span>bk<span class=\"k\">).</span>setCursor<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span><span class=\"k\">true</span><span class=\"k\">);</span>","                        me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">'contentchange'</span><span class=\"k\">);</span>","                        me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">'saveScene'</span><span class=\"k\">);</span>","                        domUtils<span class=\"k\">.</span>preventDefault<span class=\"k\">(</span>evt<span class=\"k\">);</span>","                        <span class=\"k\">return</span><span class=\"k\">;</span>","","                    <span class=\"k\">}</span>","","","                <span class=\"k\">}</span>","","","            <span class=\"k\">}</span>","","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","","    <span class=\"c\">//&#22788;&#29702;tab&#38190;</span>","    me<span class=\"k\">.</span>addListener<span class=\"k\">(</span><span class=\"s\">'tabkeydown'</span><span class=\"k\">,</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","        <span class=\"k\">function</span> listToArray<span class=\"k\">(</span>list<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">var</span> arr <span class=\"k\">=</span> <span class=\"k\">[];</span>","            <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> p <span class=\"k\">in</span> list<span class=\"k\">)</span><span class=\"k\">{</span>","                arr<span class=\"k\">.</span>push<span class=\"k\">(</span>p<span class=\"k\">)</span>","            <span class=\"k\">}</span>","            <span class=\"k\">return</span> arr<span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"k\">var</span> range <span class=\"k\">=</span> me<span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">(),</span>","            listStyle <span class=\"k\">=</span> <span class=\"k\">{</span>","                <span class=\"s\">'OL'</span><span class=\"k\">:</span>listToArray<span class=\"k\">(</span>me<span class=\"k\">.</span>options<span class=\"k\">.</span>insertorderedlist<span class=\"k\">),</span>","                <span class=\"s\">'UL'</span><span class=\"k\">:</span>listToArray<span class=\"k\">(</span>me<span class=\"k\">.</span>options<span class=\"k\">.</span>insertunorderedlist<span class=\"k\">)</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","        <span class=\"c\">//&#25511;&#21046;&#32423;&#25968;</span>","        <span class=\"k\">function</span> checkLevel<span class=\"k\">(</span>li<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>me<span class=\"k\">.</span>options<span class=\"k\">.</span>maxListLevel <span class=\"k\">!=</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">)</span><span class=\"k\">{</span>","                <span class=\"k\">var</span> level <span class=\"k\">=</span> li<span class=\"k\">.</span>parentNode<span class=\"k\">,</span>levelNum <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","                <span class=\"k\">while</span><span class=\"k\">(</span><span class=\"s\">/[ou]l/i</span><span class=\"k\">.</span>test<span class=\"k\">(</span>level<span class=\"k\">.</span>tagName<span class=\"k\">))</span><span class=\"k\">{</span>","                    levelNum<span class=\"k\">++;</span>","                    level <span class=\"k\">=</span> level<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","                <span class=\"k\">}</span>","                <span class=\"k\">if</span><span class=\"k\">(</span>levelNum <span class=\"k\">&gt;=</span> me<span class=\"k\">.</span>options<span class=\"k\">.</span>maxListLevel<span class=\"k\">)</span><span class=\"k\">{</span>","                    <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        <span class=\"c\">//&#21482;&#20197;&#24320;&#22987;&#20026;&#20934;</span>","        <span class=\"c\">//todo &#21518;&#32493;&#25913;&#36827;</span>","        <span class=\"k\">var</span> li <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>range<span class=\"k\">.</span>startContainer<span class=\"k\">,</span> <span class=\"s\">'li'</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","        <span class=\"k\">if</span><span class=\"k\">(</span>li<span class=\"k\">)</span><span class=\"k\">{</span>","","            <span class=\"k\">var</span> bk<span class=\"k\">;</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>range<span class=\"k\">.</span>collapsed<span class=\"k\">)</span><span class=\"k\">{</span>","                <span class=\"k\">if</span><span class=\"k\">(</span>checkLevel<span class=\"k\">(</span>li<span class=\"k\">))</span>","                    <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                <span class=\"k\">var</span> parentLi <span class=\"k\">=</span> li<span class=\"k\">.</span>parentNode<span class=\"k\">,</span>","                    list <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span>parentLi<span class=\"k\">.</span>tagName<span class=\"k\">),</span>","                    index <span class=\"k\">=</span> utils<span class=\"k\">.</span>indexOf<span class=\"k\">(</span>listStyle<span class=\"k\">[</span>list<span class=\"k\">.</span>tagName<span class=\"k\">],</span> getStyle<span class=\"k\">(</span>parentLi<span class=\"k\">)||</span>domUtils<span class=\"k\">.</span>getComputedStyle<span class=\"k\">(</span>parentLi<span class=\"k\">,</span> <span class=\"s\">'list-style-type'</span><span class=\"k\">));</span>","                index <span class=\"k\">=</span> index <span class=\"k\">+</span> <span class=\"s\">1</span> <span class=\"k\">==</span> listStyle<span class=\"k\">[</span>list<span class=\"k\">.</span>tagName<span class=\"k\">].</span>length <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> index <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">;</span>","                <span class=\"k\">var</span> currentStyle <span class=\"k\">=</span> listStyle<span class=\"k\">[</span>list<span class=\"k\">.</span>tagName<span class=\"k\">][</span>index<span class=\"k\">];</span>","                setListStyle<span class=\"k\">(</span>list<span class=\"k\">,</span>currentStyle<span class=\"k\">);</span>","                <span class=\"k\">if</span><span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isStartInblock<span class=\"k\">(</span>range<span class=\"k\">))</span><span class=\"k\">{</span>","                    me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">'saveScene'</span><span class=\"k\">);</span>","                    bk <span class=\"k\">=</span> range<span class=\"k\">.</span>createBookmark<span class=\"k\">();</span>","                    parentLi<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>list<span class=\"k\">,</span> li<span class=\"k\">);</span>","                    list<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>li<span class=\"k\">);</span>","                    adjustList<span class=\"k\">(</span>list<span class=\"k\">,</span>list<span class=\"k\">.</span>tagName<span class=\"k\">.</span>toLowerCase<span class=\"k\">(),</span>currentStyle<span class=\"k\">);</span>","                    me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">'contentchange'</span><span class=\"k\">);</span>","                    range<span class=\"k\">.</span>moveToBookmark<span class=\"k\">(</span>bk<span class=\"k\">).</span>select<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","                    <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","                me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">'saveScene'</span><span class=\"k\">);</span>","                bk <span class=\"k\">=</span> range<span class=\"k\">.</span>createBookmark<span class=\"k\">();</span>","                <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> i<span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>closeList<span class=\"k\">,</span>parents <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParents<span class=\"k\">(</span>li<span class=\"k\">),</span>ci<span class=\"k\">;</span>ci<span class=\"k\">=</span>parents<span class=\"k\">[</span>i<span class=\"k\">++];)</span><span class=\"k\">{</span>","                    <span class=\"k\">if</span><span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isTagNode<span class=\"k\">(</span>ci<span class=\"k\">,</span><span class=\"s\">'ol ul'</span><span class=\"k\">))</span><span class=\"k\">{</span>","                        closeList <span class=\"k\">=</span> ci<span class=\"k\">;</span>","                        <span class=\"k\">break</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","                <span class=\"k\">var</span> current <span class=\"k\">=</span> li<span class=\"k\">;</span>","                <span class=\"k\">if</span><span class=\"k\">(</span>bk<span class=\"k\">.</span>end<span class=\"k\">)</span><span class=\"k\">{</span>","                    <span class=\"k\">while</span><span class=\"k\">(</span>current <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!(</span>domUtils<span class=\"k\">.</span>getPosition<span class=\"k\">(</span>current<span class=\"k\">,</span> bk<span class=\"k\">.</span>end<span class=\"k\">)</span> <span class=\"k\">&amp;</span> domUtils<span class=\"k\">.</span>POSITION_FOLLOWING<span class=\"k\">))</span><span class=\"k\">{</span>","                        <span class=\"k\">if</span><span class=\"k\">(</span>checkLevel<span class=\"k\">(</span>current<span class=\"k\">))</span><span class=\"k\">{</span>","                            current <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getNextDomNode<span class=\"k\">(</span>current<span class=\"k\">,</span><span class=\"k\">false</span><span class=\"k\">,</span><span class=\"k\">null</span><span class=\"k\">,</span><span class=\"k\">function</span><span class=\"k\">(</span>node<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">return</span> node <span class=\"k\">!==</span> closeList<span class=\"k\">}</span><span class=\"k\">);</span>","                            <span class=\"k\">continue</span><span class=\"k\">;</span>","                        <span class=\"k\">}</span>","                        <span class=\"k\">var</span> parentLi <span class=\"k\">=</span> current<span class=\"k\">.</span>parentNode<span class=\"k\">,</span>","                            list <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span>parentLi<span class=\"k\">.</span>tagName<span class=\"k\">),</span>","                            index <span class=\"k\">=</span> utils<span class=\"k\">.</span>indexOf<span class=\"k\">(</span>listStyle<span class=\"k\">[</span>list<span class=\"k\">.</span>tagName<span class=\"k\">],</span> getStyle<span class=\"k\">(</span>parentLi<span class=\"k\">)||</span>domUtils<span class=\"k\">.</span>getComputedStyle<span class=\"k\">(</span>parentLi<span class=\"k\">,</span> <span class=\"s\">'list-style-type'</span><span class=\"k\">));</span>","                        <span class=\"k\">var</span> currentIndex <span class=\"k\">=</span> index <span class=\"k\">+</span> <span class=\"s\">1</span> <span class=\"k\">==</span> listStyle<span class=\"k\">[</span>list<span class=\"k\">.</span>tagName<span class=\"k\">].</span>length <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> index <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">;</span>","                        <span class=\"k\">var</span> currentStyle <span class=\"k\">=</span> listStyle<span class=\"k\">[</span>list<span class=\"k\">.</span>tagName<span class=\"k\">][</span>currentIndex<span class=\"k\">];</span>","                        setListStyle<span class=\"k\">(</span>list<span class=\"k\">,</span>currentStyle<span class=\"k\">);</span>","                        parentLi<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>list<span class=\"k\">,</span> current<span class=\"k\">);</span>","                        <span class=\"k\">while</span><span class=\"k\">(</span>current <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!(</span>domUtils<span class=\"k\">.</span>getPosition<span class=\"k\">(</span>current<span class=\"k\">,</span> bk<span class=\"k\">.</span>end<span class=\"k\">)</span> <span class=\"k\">&amp;</span> domUtils<span class=\"k\">.</span>POSITION_FOLLOWING<span class=\"k\">))</span><span class=\"k\">{</span>","                            li <span class=\"k\">=</span> current<span class=\"k\">.</span>nextSibling<span class=\"k\">;</span>","                            list<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>current<span class=\"k\">);</span>","                            <span class=\"k\">if</span><span class=\"k\">(!</span>li <span class=\"k\">||</span> domUtils<span class=\"k\">.</span>isTagNode<span class=\"k\">(</span>li<span class=\"k\">,</span><span class=\"s\">'ol ul'</span><span class=\"k\">))</span><span class=\"k\">{</span>","                                <span class=\"k\">if</span><span class=\"k\">(</span>li<span class=\"k\">)</span><span class=\"k\">{</span>","                                    <span class=\"k\">while</span><span class=\"k\">(</span>li <span class=\"k\">=</span> li<span class=\"k\">.</span>firstChild<span class=\"k\">)</span><span class=\"k\">{</span>","                                        <span class=\"k\">if</span><span class=\"k\">(</span>li<span class=\"k\">.</span>tagName <span class=\"k\">==</span> <span class=\"s\">'LI'</span><span class=\"k\">)</span><span class=\"k\">{</span>","                                            <span class=\"k\">break</span><span class=\"k\">;</span>","                                        <span class=\"k\">}</span>","                                    <span class=\"k\">}</span>","                                <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","                                    li <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getNextDomNode<span class=\"k\">(</span>current<span class=\"k\">,</span><span class=\"k\">false</span><span class=\"k\">,</span><span class=\"k\">null</span><span class=\"k\">,</span><span class=\"k\">function</span><span class=\"k\">(</span>node<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">return</span> node <span class=\"k\">!==</span> closeList<span class=\"k\">}</span><span class=\"k\">);</span>","                                <span class=\"k\">}</span>","                                <span class=\"k\">break</span><span class=\"k\">;</span>","                            <span class=\"k\">}</span>","                            current <span class=\"k\">=</span> li<span class=\"k\">;</span>","                        <span class=\"k\">}</span>","                        adjustList<span class=\"k\">(</span>list<span class=\"k\">,</span>list<span class=\"k\">.</span>tagName<span class=\"k\">.</span>toLowerCase<span class=\"k\">(),</span>currentStyle<span class=\"k\">);</span>","                        current <span class=\"k\">=</span> li<span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","                me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">'contentchange'</span><span class=\"k\">);</span>","                range<span class=\"k\">.</span>moveToBookmark<span class=\"k\">(</span>bk<span class=\"k\">).</span>select<span class=\"k\">();</span>","                <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","    <span class=\"k\">}</span><span class=\"k\">);</span>","","    me<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">'insertorderedlist'</span><span class=\"k\">]</span> <span class=\"k\">=</span>","    me<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">'insertunorderedlist'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","            execCommand<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>command<span class=\"k\">,</span> style<span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"k\">if</span> <span class=\"k\">(!</span>style<span class=\"k\">)</span> <span class=\"k\">{</span>","                    style <span class=\"k\">=</span> command<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">==</span> <span class=\"s\">'insertorderedlist'</span> <span class=\"k\">?</span> <span class=\"s\">'decimal'</span> <span class=\"k\">:</span> <span class=\"s\">'disc'</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","                <span class=\"k\">var</span> me <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">,</span>","                    range <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">(),</span>","                    filterFn <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span>   node<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">1</span> <span class=\"k\">?</span> node<span class=\"k\">.</span>tagName<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">!=</span> <span class=\"s\">'br'</span> <span class=\"k\">:</span> <span class=\"k\">!</span>domUtils<span class=\"k\">.</span>isWhitespace<span class=\"k\">(</span>node<span class=\"k\">);</span>","                    <span class=\"k\">}</span><span class=\"k\">,</span>","                    tag <span class=\"k\">=</span> command<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">==</span> <span class=\"s\">'insertorderedlist'</span> <span class=\"k\">?</span> <span class=\"s\">'ol'</span> <span class=\"k\">:</span> <span class=\"s\">'ul'</span><span class=\"k\">,</span>","                    frag <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createDocumentFragment<span class=\"k\">();</span>","                <span class=\"c\">//&#21435;&#25481;&#26159;&#22240;&#20026;&#20250;&#20986;&#29616;&#36873;&#21040;&#26411;&#23614;&#65292;&#23548;&#33268;adjustmentBoundary&#32553;&#21040;ol/ul&#30340;&#20301;&#32622;</span>","                <span class=\"c\">//range.shrinkBoundary();//.adjustmentBoundary();</span>","                range<span class=\"k\">.</span>adjustmentBoundary<span class=\"k\">().</span>shrinkBoundary<span class=\"k\">();</span>","                <span class=\"k\">var</span> bko <span class=\"k\">=</span> range<span class=\"k\">.</span>createBookmark<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">),</span>","                    start <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span>bko<span class=\"k\">.</span>start<span class=\"k\">),</span> <span class=\"s\">'li'</span><span class=\"k\">),</span>","                    modifyStart <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","                    end <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span>bko<span class=\"k\">.</span>end<span class=\"k\">),</span> <span class=\"s\">'li'</span><span class=\"k\">),</span>","                    modifyEnd <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","                    startParent<span class=\"k\">,</span> endParent<span class=\"k\">,</span>","                    list<span class=\"k\">,</span> tmp<span class=\"k\">;</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span>start <span class=\"k\">||</span> end<span class=\"k\">)</span> <span class=\"k\">{</span>","                    start <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>startParent <span class=\"k\">=</span> start<span class=\"k\">.</span>parentNode<span class=\"k\">);</span>","                    <span class=\"k\">if</span> <span class=\"k\">(!</span>bko<span class=\"k\">.</span>end<span class=\"k\">)</span> <span class=\"k\">{</span>","                        end <span class=\"k\">=</span> start<span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                    end <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>endParent <span class=\"k\">=</span> end<span class=\"k\">.</span>parentNode<span class=\"k\">);</span>","","                    <span class=\"k\">if</span> <span class=\"k\">(</span>startParent <span class=\"k\">===</span> endParent<span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">while</span> <span class=\"k\">(</span>start <span class=\"k\">!==</span> end<span class=\"k\">)</span> <span class=\"k\">{</span>","                            tmp <span class=\"k\">=</span> start<span class=\"k\">;</span>","                            start <span class=\"k\">=</span> start<span class=\"k\">.</span>nextSibling<span class=\"k\">;</span>","                            <span class=\"k\">if</span> <span class=\"k\">(!</span>domUtils<span class=\"k\">.</span>isBlockElm<span class=\"k\">(</span>tmp<span class=\"k\">.</span>firstChild<span class=\"k\">))</span> <span class=\"k\">{</span>","                                <span class=\"k\">var</span> p <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'p'</span><span class=\"k\">);</span>","                                <span class=\"k\">while</span> <span class=\"k\">(</span>tmp<span class=\"k\">.</span>firstChild<span class=\"k\">)</span> <span class=\"k\">{</span>","                                    p<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>tmp<span class=\"k\">.</span>firstChild<span class=\"k\">);</span>","                                <span class=\"k\">}</span>","                                tmp<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>p<span class=\"k\">);</span>","                            <span class=\"k\">}</span>","                            frag<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>tmp<span class=\"k\">);</span>","                        <span class=\"k\">}</span>","                        tmp <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'span'</span><span class=\"k\">);</span>","                        startParent<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>tmp<span class=\"k\">,</span> end<span class=\"k\">);</span>","                        <span class=\"k\">if</span> <span class=\"k\">(!</span>domUtils<span class=\"k\">.</span>isBlockElm<span class=\"k\">(</span>end<span class=\"k\">.</span>firstChild<span class=\"k\">))</span> <span class=\"k\">{</span>","                            p <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'p'</span><span class=\"k\">);</span>","                            <span class=\"k\">while</span> <span class=\"k\">(</span>end<span class=\"k\">.</span>firstChild<span class=\"k\">)</span> <span class=\"k\">{</span>","                                p<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>end<span class=\"k\">.</span>firstChild<span class=\"k\">);</span>","                            <span class=\"k\">}</span>","                            end<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>p<span class=\"k\">);</span>","                        <span class=\"k\">}</span>","                        frag<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>end<span class=\"k\">);</span>","                        domUtils<span class=\"k\">.</span>breakParent<span class=\"k\">(</span>tmp<span class=\"k\">,</span> startParent<span class=\"k\">);</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isEmptyNode<span class=\"k\">(</span>tmp<span class=\"k\">.</span>previousSibling<span class=\"k\">))</span> <span class=\"k\">{</span>","                            domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>tmp<span class=\"k\">.</span>previousSibling<span class=\"k\">);</span>","                        <span class=\"k\">}</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isEmptyNode<span class=\"k\">(</span>tmp<span class=\"k\">.</span>nextSibling<span class=\"k\">))</span> <span class=\"k\">{</span>","                            domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>tmp<span class=\"k\">.</span>nextSibling<span class=\"k\">)</span>","                        <span class=\"k\">}</span>","                        <span class=\"k\">var</span> nodeStyle <span class=\"k\">=</span> getStyle<span class=\"k\">(</span>startParent<span class=\"k\">)</span> <span class=\"k\">||</span> domUtils<span class=\"k\">.</span>getComputedStyle<span class=\"k\">(</span>startParent<span class=\"k\">,</span> <span class=\"s\">'list-style-type'</span><span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">(</span>command<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">==</span> <span class=\"s\">'insertorderedlist'</span> <span class=\"k\">?</span> <span class=\"s\">'decimal'</span> <span class=\"k\">:</span> <span class=\"s\">'disc'</span><span class=\"k\">);</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>startParent<span class=\"k\">.</span>tagName<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">==</span> tag <span class=\"k\">&amp;&amp;</span> nodeStyle <span class=\"k\">==</span> style<span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> ci<span class=\"k\">,</span> tmpFrag <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createDocumentFragment<span class=\"k\">();</span> ci <span class=\"k\">=</span> frag<span class=\"k\">.</span>childNodes<span class=\"k\">[</span>i<span class=\"k\">++];)</span> <span class=\"k\">{</span>","                                <span class=\"k\">if</span><span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isTagNode<span class=\"k\">(</span>ci<span class=\"k\">,</span><span class=\"s\">'ol ul'</span><span class=\"k\">))</span><span class=\"k\">{</span>","                                    utils<span class=\"k\">.</span>each<span class=\"k\">(</span>domUtils<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span>ci<span class=\"k\">,</span><span class=\"s\">'li'</span><span class=\"k\">),</span><span class=\"k\">function</span><span class=\"k\">(</span>li<span class=\"k\">)</span><span class=\"k\">{</span>","                                        <span class=\"k\">while</span><span class=\"k\">(</span>li<span class=\"k\">.</span>firstChild<span class=\"k\">)</span><span class=\"k\">{</span>","                                            tmpFrag<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>li<span class=\"k\">.</span>firstChild<span class=\"k\">);</span>","                                        <span class=\"k\">}</span>","","                                    <span class=\"k\">}</span><span class=\"k\">);</span>","                                <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","                                    <span class=\"k\">while</span> <span class=\"k\">(</span>ci<span class=\"k\">.</span>firstChild<span class=\"k\">)</span> <span class=\"k\">{</span>","                                        tmpFrag<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>ci<span class=\"k\">.</span>firstChild<span class=\"k\">);</span>","                                    <span class=\"k\">}</span>","                                <span class=\"k\">}</span>","","                            <span class=\"k\">}</span>","                            tmp<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>tmpFrag<span class=\"k\">,</span> tmp<span class=\"k\">);</span>","                        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                            list <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span>tag<span class=\"k\">);</span>","                            setListStyle<span class=\"k\">(</span>list<span class=\"k\">,</span>style<span class=\"k\">);</span>","                            list<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>frag<span class=\"k\">);</span>","                            tmp<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>list<span class=\"k\">,</span> tmp<span class=\"k\">);</span>","                        <span class=\"k\">}</span>","","                        domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>tmp<span class=\"k\">);</span>","                        list <span class=\"k\">&amp;&amp;</span> adjustList<span class=\"k\">(</span>list<span class=\"k\">,</span> tag<span class=\"k\">,</span> style<span class=\"k\">);</span>","                        range<span class=\"k\">.</span>moveToBookmark<span class=\"k\">(</span>bko<span class=\"k\">).</span>select<span class=\"k\">();</span>","                        <span class=\"k\">return</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                    <span class=\"c\">//&#24320;&#22987;</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>start<span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">while</span> <span class=\"k\">(</span>start<span class=\"k\">)</span> <span class=\"k\">{</span>","                            tmp <span class=\"k\">=</span> start<span class=\"k\">.</span>nextSibling<span class=\"k\">;</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isTagNode<span class=\"k\">(</span>start<span class=\"k\">,</span> <span class=\"s\">'ol ul'</span><span class=\"k\">))</span> <span class=\"k\">{</span>","                                frag<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>start<span class=\"k\">);</span>","                            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                                <span class=\"k\">var</span> tmpfrag <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createDocumentFragment<span class=\"k\">(),</span>","                                    hasBlock <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","                                <span class=\"k\">while</span> <span class=\"k\">(</span>start<span class=\"k\">.</span>firstChild<span class=\"k\">)</span> <span class=\"k\">{</span>","                                    <span class=\"k\">if</span> <span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isBlockElm<span class=\"k\">(</span>start<span class=\"k\">.</span>firstChild<span class=\"k\">))</span> <span class=\"k\">{</span>","                                        hasBlock <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","                                    <span class=\"k\">}</span>","                                    tmpfrag<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>start<span class=\"k\">.</span>firstChild<span class=\"k\">);</span>","                                <span class=\"k\">}</span>","                                <span class=\"k\">if</span> <span class=\"k\">(!</span>hasBlock<span class=\"k\">)</span> <span class=\"k\">{</span>","                                    <span class=\"k\">var</span> tmpP <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'p'</span><span class=\"k\">);</span>","                                    tmpP<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>tmpfrag<span class=\"k\">);</span>","                                    frag<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>tmpP<span class=\"k\">);</span>","                                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                                    frag<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>tmpfrag<span class=\"k\">);</span>","                                <span class=\"k\">}</span>","                                domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>start<span class=\"k\">);</span>","                            <span class=\"k\">}</span>","","                            start <span class=\"k\">=</span> tmp<span class=\"k\">;</span>","                        <span class=\"k\">}</span>","                        startParent<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>frag<span class=\"k\">,</span> startParent<span class=\"k\">.</span>nextSibling<span class=\"k\">);</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isEmptyNode<span class=\"k\">(</span>startParent<span class=\"k\">))</span> <span class=\"k\">{</span>","                            range<span class=\"k\">.</span>setStartBefore<span class=\"k\">(</span>startParent<span class=\"k\">);</span>","                            domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>startParent<span class=\"k\">);</span>","                        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                            range<span class=\"k\">.</span>setStartAfter<span class=\"k\">(</span>startParent<span class=\"k\">);</span>","                        <span class=\"k\">}</span>","                        modifyStart <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","","                    <span class=\"k\">if</span> <span class=\"k\">(</span>end <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>inDoc<span class=\"k\">(</span>endParent<span class=\"k\">,</span> me<span class=\"k\">.</span>document<span class=\"k\">))</span> <span class=\"k\">{</span>","                        <span class=\"c\">//&#32467;&#26463;</span>","                        start <span class=\"k\">=</span> endParent<span class=\"k\">.</span>firstChild<span class=\"k\">;</span>","                        <span class=\"k\">while</span> <span class=\"k\">(</span>start <span class=\"k\">&amp;&amp;</span> start <span class=\"k\">!==</span> end<span class=\"k\">)</span> <span class=\"k\">{</span>","                            tmp <span class=\"k\">=</span> start<span class=\"k\">.</span>nextSibling<span class=\"k\">;</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isTagNode<span class=\"k\">(</span>start<span class=\"k\">,</span> <span class=\"s\">'ol ul'</span><span class=\"k\">))</span> <span class=\"k\">{</span>","                                frag<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>start<span class=\"k\">);</span>","                            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                                tmpfrag <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createDocumentFragment<span class=\"k\">();</span>","                                hasBlock <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","                                <span class=\"k\">while</span> <span class=\"k\">(</span>start<span class=\"k\">.</span>firstChild<span class=\"k\">)</span> <span class=\"k\">{</span>","                                    <span class=\"k\">if</span> <span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isBlockElm<span class=\"k\">(</span>start<span class=\"k\">.</span>firstChild<span class=\"k\">))</span> <span class=\"k\">{</span>","                                        hasBlock <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","                                    <span class=\"k\">}</span>","                                    tmpfrag<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>start<span class=\"k\">.</span>firstChild<span class=\"k\">);</span>","                                <span class=\"k\">}</span>","                                <span class=\"k\">if</span> <span class=\"k\">(!</span>hasBlock<span class=\"k\">)</span> <span class=\"k\">{</span>","                                    tmpP <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'p'</span><span class=\"k\">);</span>","                                    tmpP<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>tmpfrag<span class=\"k\">);</span>","                                    frag<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>tmpP<span class=\"k\">);</span>","                                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                                    frag<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>tmpfrag<span class=\"k\">);</span>","                                <span class=\"k\">}</span>","                                domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>start<span class=\"k\">);</span>","                            <span class=\"k\">}</span>","                            start <span class=\"k\">=</span> tmp<span class=\"k\">;</span>","                        <span class=\"k\">}</span>","                        <span class=\"k\">var</span> tmpDiv <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>createElement<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">,</span> <span class=\"s\">'div'</span><span class=\"k\">,</span> <span class=\"k\">{</span>","                            <span class=\"s\">'tmpDiv'</span><span class=\"k\">:</span><span class=\"s\">1</span>","                        <span class=\"k\">}</span><span class=\"k\">);</span>","                        domUtils<span class=\"k\">.</span>moveChild<span class=\"k\">(</span>end<span class=\"k\">,</span> tmpDiv<span class=\"k\">);</span>","","                        frag<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>tmpDiv<span class=\"k\">);</span>","                        domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>end<span class=\"k\">);</span>","                        endParent<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>frag<span class=\"k\">,</span> endParent<span class=\"k\">);</span>","                        range<span class=\"k\">.</span>setEndBefore<span class=\"k\">(</span>endParent<span class=\"k\">);</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isEmptyNode<span class=\"k\">(</span>endParent<span class=\"k\">))</span> <span class=\"k\">{</span>","                            domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>endParent<span class=\"k\">);</span>","                        <span class=\"k\">}</span>","","                        modifyEnd <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","","","                <span class=\"k\">}</span>","","                <span class=\"k\">if</span> <span class=\"k\">(!</span>modifyStart<span class=\"k\">)</span> <span class=\"k\">{</span>","                    range<span class=\"k\">.</span>setStartBefore<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span>bko<span class=\"k\">.</span>start<span class=\"k\">));</span>","                <span class=\"k\">}</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>bko<span class=\"k\">.</span>end <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>modifyEnd<span class=\"k\">)</span> <span class=\"k\">{</span>","                    range<span class=\"k\">.</span>setEndAfter<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span>bko<span class=\"k\">.</span>end<span class=\"k\">));</span>","                <span class=\"k\">}</span>","                range<span class=\"k\">.</span>enlarge<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> notExchange<span class=\"k\">[</span>node<span class=\"k\">.</span>tagName<span class=\"k\">];</span>","                <span class=\"k\">}</span><span class=\"k\">);</span>","","                frag <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createDocumentFragment<span class=\"k\">();</span>","","                <span class=\"k\">var</span> bk <span class=\"k\">=</span> range<span class=\"k\">.</span>createBookmark<span class=\"k\">(),</span>","                    current <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getNextDomNode<span class=\"k\">(</span>bk<span class=\"k\">.</span>start<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">,</span> filterFn<span class=\"k\">),</span>","                    tmpRange <span class=\"k\">=</span> range<span class=\"k\">.</span>cloneRange<span class=\"k\">(),</span>","                    tmpNode<span class=\"k\">,</span>","                    block <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>isBlockElm<span class=\"k\">;</span>","","                <span class=\"k\">while</span> <span class=\"k\">(</span>current <span class=\"k\">&amp;&amp;</span> current <span class=\"k\">!==</span> bk<span class=\"k\">.</span>end <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>domUtils<span class=\"k\">.</span>getPosition<span class=\"k\">(</span>current<span class=\"k\">,</span> bk<span class=\"k\">.</span>end<span class=\"k\">)</span> <span class=\"k\">&amp;</span> domUtils<span class=\"k\">.</span>POSITION_PRECEDING<span class=\"k\">))</span> <span class=\"k\">{</span>","","                    <span class=\"k\">if</span> <span class=\"k\">(</span>current<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">3</span> <span class=\"k\">||</span> dtd<span class=\"k\">.</span>li<span class=\"k\">[</span>current<span class=\"k\">.</span>tagName<span class=\"k\">])</span> <span class=\"k\">{</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>current<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> dtd<span class=\"k\">.</span>$list<span class=\"k\">[</span>current<span class=\"k\">.</span>tagName<span class=\"k\">])</span> <span class=\"k\">{</span>","                            <span class=\"k\">while</span> <span class=\"k\">(</span>current<span class=\"k\">.</span>firstChild<span class=\"k\">)</span> <span class=\"k\">{</span>","                                frag<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>current<span class=\"k\">.</span>firstChild<span class=\"k\">);</span>","                            <span class=\"k\">}</span>","                            tmpNode <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getNextDomNode<span class=\"k\">(</span>current<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">,</span> filterFn<span class=\"k\">);</span>","                            domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>current<span class=\"k\">);</span>","                            current <span class=\"k\">=</span> tmpNode<span class=\"k\">;</span>","                            <span class=\"k\">continue</span><span class=\"k\">;</span>","","                        <span class=\"k\">}</span>","                        tmpNode <span class=\"k\">=</span> current<span class=\"k\">;</span>","                        tmpRange<span class=\"k\">.</span>setStartBefore<span class=\"k\">(</span>current<span class=\"k\">);</span>","","                        <span class=\"k\">while</span> <span class=\"k\">(</span>current <span class=\"k\">&amp;&amp;</span> current <span class=\"k\">!==</span> bk<span class=\"k\">.</span>end <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(!</span>block<span class=\"k\">(</span>current<span class=\"k\">)</span> <span class=\"k\">||</span> domUtils<span class=\"k\">.</span>isBookmarkNode<span class=\"k\">(</span>current<span class=\"k\">)</span> <span class=\"k\">))</span> <span class=\"k\">{</span>","                            tmpNode <span class=\"k\">=</span> current<span class=\"k\">;</span>","                            current <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getNextDomNode<span class=\"k\">(</span>current<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","                                <span class=\"k\">return</span> <span class=\"k\">!</span>notExchange<span class=\"k\">[</span>node<span class=\"k\">.</span>tagName<span class=\"k\">];</span>","                            <span class=\"k\">}</span><span class=\"k\">);</span>","                        <span class=\"k\">}</span>","","                        <span class=\"k\">if</span> <span class=\"k\">(</span>current <span class=\"k\">&amp;&amp;</span> block<span class=\"k\">(</span>current<span class=\"k\">))</span> <span class=\"k\">{</span>","                            tmp <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getNextDomNode<span class=\"k\">(</span>tmpNode<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">,</span> filterFn<span class=\"k\">);</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span>tmp <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>isBookmarkNode<span class=\"k\">(</span>tmp<span class=\"k\">))</span> <span class=\"k\">{</span>","                                current <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getNextDomNode<span class=\"k\">(</span>tmp<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">,</span> filterFn<span class=\"k\">);</span>","                                tmpNode <span class=\"k\">=</span> tmp<span class=\"k\">;</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","                        tmpRange<span class=\"k\">.</span>setEndAfter<span class=\"k\">(</span>tmpNode<span class=\"k\">);</span>","","                        current <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getNextDomNode<span class=\"k\">(</span>tmpNode<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">,</span> filterFn<span class=\"k\">);</span>","","                        <span class=\"k\">var</span> li <span class=\"k\">=</span> range<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'li'</span><span class=\"k\">);</span>","","                        li<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>tmpRange<span class=\"k\">.</span>extractContents<span class=\"k\">());</span>","                        <span class=\"k\">if</span><span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isEmptyNode<span class=\"k\">(</span>li<span class=\"k\">))</span><span class=\"k\">{</span>","                            <span class=\"k\">var</span> tmpNode <span class=\"k\">=</span> range<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'p'</span><span class=\"k\">);</span>","                            <span class=\"k\">while</span><span class=\"k\">(</span>li<span class=\"k\">.</span>firstChild<span class=\"k\">)</span><span class=\"k\">{</span>","                                tmpNode<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>li<span class=\"k\">.</span>firstChild<span class=\"k\">)</span>","                            <span class=\"k\">}</span>","                            li<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>tmpNode<span class=\"k\">);</span>","                        <span class=\"k\">}</span>","                        frag<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>li<span class=\"k\">);</span>","                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                        current <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getNextDomNode<span class=\"k\">(</span>current<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">,</span> filterFn<span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","                range<span class=\"k\">.</span>moveToBookmark<span class=\"k\">(</span>bk<span class=\"k\">).</span>collapse<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","                list <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span>tag<span class=\"k\">);</span>","                setListStyle<span class=\"k\">(</span>list<span class=\"k\">,</span>style<span class=\"k\">);</span>","                list<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>frag<span class=\"k\">);</span>","                range<span class=\"k\">.</span>insertNode<span class=\"k\">(</span>list<span class=\"k\">);</span>","                <span class=\"c\">//&#24403;&#21069;list&#19978;&#19979;&#30475;&#33021;&#21542;&#21512;&#24182;</span>","                adjustList<span class=\"k\">(</span>list<span class=\"k\">,</span> tag<span class=\"k\">,</span> style<span class=\"k\">,</span><span class=\"k\">true</span><span class=\"k\">);</span>","                <span class=\"c\">//&#21435;&#25481;&#20887;&#20313;&#30340;tmpDiv</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> ci<span class=\"k\">,</span> tmpDivs <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span>list<span class=\"k\">,</span> <span class=\"s\">'div'</span><span class=\"k\">);</span> ci <span class=\"k\">=</span> tmpDivs<span class=\"k\">[</span>i<span class=\"k\">++];)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>ci<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">'tmpDiv'</span><span class=\"k\">))</span> <span class=\"k\">{</span>","                        domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>ci<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">)</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","                range<span class=\"k\">.</span>moveToBookmark<span class=\"k\">(</span>bko<span class=\"k\">).</span>select<span class=\"k\">();</span>","","            <span class=\"k\">}</span><span class=\"k\">,</span>","            queryCommandState<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>command<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> domUtils<span class=\"k\">.</span>filterNodeList<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getStartElementPath<span class=\"k\">(),</span> command<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">==</span> <span class=\"s\">'insertorderedlist'</span> <span class=\"k\">?</span> <span class=\"s\">'ol'</span> <span class=\"k\">:</span> <span class=\"s\">'ul'</span><span class=\"k\">)</span> <span class=\"k\">?</span> <span class=\"s\">1</span> <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","            queryCommandValue<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>command<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> node <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>filterNodeList<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getStartElementPath<span class=\"k\">(),</span> command<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">==</span> <span class=\"s\">'insertorderedlist'</span> <span class=\"k\">?</span> <span class=\"s\">'ol'</span> <span class=\"k\">:</span> <span class=\"s\">'ul'</span><span class=\"k\">);</span>","                <span class=\"k\">return</span> node <span class=\"k\">?</span> getStyle<span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">||</span> domUtils<span class=\"k\">.</span>getComputedStyle<span class=\"k\">(</span>node<span class=\"k\">,</span> <span class=\"s\">'list-style-type'</span><span class=\"k\">)</span> <span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>",""];
_$jscoverage['plugins/list.js'][22]++;
UE.plugins.list = (function () {
  _$jscoverage['plugins/list.js'][23]++;
  var me = this, notExchange = {"TD": 1, "PRE": 1, "BLOCKQUOTE": 1};
  _$jscoverage['plugins/list.js'][29]++;
  var customStyle = {"cn": "cn-1-", "cn1": "cn-2-", "cn2": "cn-3-", "num": "num-1-", "num1": "num-2-", "num2": "num-3-", "dash": "dash", "dot": "dot"};
  _$jscoverage['plugins/list.js'][40]++;
  me.setOpt({"insertorderedlist": {"num": "", "num1": "", "num2": "", "cn": "", "cn1": "", "cn2": "", "decimal": "", "lower-alpha": "", "lower-roman": "", "upper-alpha": "", "upper-roman": ""}, "insertunorderedlist": {"circle": "", "disc": "", "square": "", "dash": "", "dot": ""}, listDefaultPaddingLeft: "30", listiconpath: "http://bs.baidu.com/listicon/", maxListLevel: 3});
  _$jscoverage['plugins/list.js'][65]++;
  var liiconpath = me.options.listiconpath;
  _$jscoverage['plugins/list.js'][68]++;
  for (var s in customStyle) {
    _$jscoverage['plugins/list.js'][69]++;
    if (((! me.options.insertorderedlist.hasOwnProperty(s)) && (! me.options.insertunorderedlist.hasOwnProperty(s)))) {
      _$jscoverage['plugins/list.js'][70]++;
      (delete customStyle[s]);
    }
}
  _$jscoverage['plugins/list.js'][74]++;
  me.ready((function () {
  _$jscoverage['plugins/list.js'][75]++;
  var customCss = [];
  _$jscoverage['plugins/list.js'][76]++;
  for (var p in customStyle) {
    _$jscoverage['plugins/list.js'][77]++;
    if (((p == "dash") || (p == "dot"))) {
      _$jscoverage['plugins/list.js'][78]++;
      customCss.push(("li.list-" + customStyle[p] + "{background-image:url(" + liiconpath + customStyle[p] + ".gif)}"));
      _$jscoverage['plugins/list.js'][79]++;
      customCss.push(("ul.custom_" + p + "{list-style:none;}ul.custom_" + p + " li{background-position:0 3px;background-repeat:no-repeat}"));
    }
    else {
      _$jscoverage['plugins/list.js'][81]++;
      for (var i = 0; (i < 99); (i++)) {
        _$jscoverage['plugins/list.js'][82]++;
        customCss.push(("li.list-" + customStyle[p] + i + "{background-image:url(" + liiconpath + "list-" + customStyle[p] + i + ".gif)}"));
}
      _$jscoverage['plugins/list.js'][84]++;
      customCss.push(("ol.custom_" + p + "{list-style:none;}ol.custom_" + p + " li{background-position:0 3px;background-repeat:no-repeat}"));
    }
    _$jscoverage['plugins/list.js'][86]++;
    switch (p) {
    case "cn":
      _$jscoverage['plugins/list.js'][88]++;
      customCss.push(("li.list-" + p + "-paddingleft-1{padding-left:25px}"));
      _$jscoverage['plugins/list.js'][89]++;
      customCss.push(("li.list-" + p + "-paddingleft-2{padding-left:40px}"));
      _$jscoverage['plugins/list.js'][90]++;
      customCss.push(("li.list-" + p + "-paddingleft-3{padding-left:55px}"));
      _$jscoverage['plugins/list.js'][91]++;
      break;
    case "cn1":
      _$jscoverage['plugins/list.js'][93]++;
      customCss.push(("li.list-" + p + "-paddingleft-1{padding-left:30px}"));
      _$jscoverage['plugins/list.js'][94]++;
      customCss.push(("li.list-" + p + "-paddingleft-2{padding-left:40px}"));
      _$jscoverage['plugins/list.js'][95]++;
      customCss.push(("li.list-" + p + "-paddingleft-3{padding-left:55px}"));
      _$jscoverage['plugins/list.js'][96]++;
      break;
    case "cn2":
      _$jscoverage['plugins/list.js'][98]++;
      customCss.push(("li.list-" + p + "-paddingleft-1{padding-left:40px}"));
      _$jscoverage['plugins/list.js'][99]++;
      customCss.push(("li.list-" + p + "-paddingleft-2{padding-left:55px}"));
      _$jscoverage['plugins/list.js'][100]++;
      customCss.push(("li.list-" + p + "-paddingleft-3{padding-left:68px}"));
      _$jscoverage['plugins/list.js'][101]++;
      break;
    case "num":
    case "num1":
      _$jscoverage['plugins/list.js'][104]++;
      customCss.push(("li.list-" + p + "-paddingleft-1{padding-left:25px}"));
      _$jscoverage['plugins/list.js'][105]++;
      break;
    case "num2":
      _$jscoverage['plugins/list.js'][107]++;
      customCss.push(("li.list-" + p + "-paddingleft-1{padding-left:35px}"));
      _$jscoverage['plugins/list.js'][108]++;
      customCss.push(("li.list-" + p + "-paddingleft-2{padding-left:40px}"));
      _$jscoverage['plugins/list.js'][109]++;
      break;
    case "dash":
      _$jscoverage['plugins/list.js'][111]++;
      customCss.push(("li.list-" + p + "-paddingleft{padding-left:35px}"));
      _$jscoverage['plugins/list.js'][112]++;
      break;
    case "dot":
      _$jscoverage['plugins/list.js'][114]++;
      customCss.push(("li.list-" + p + "-paddingleft{padding-left:20px}"));
    }
}
  _$jscoverage['plugins/list.js'][117]++;
  customCss.push(".list-paddingleft-1{padding-left:0}");
  _$jscoverage['plugins/list.js'][118]++;
  customCss.push((".list-paddingleft-2{padding-left:" + me.options.listDefaultPaddingLeft + "px}"));
  _$jscoverage['plugins/list.js'][119]++;
  customCss.push((".list-paddingleft-3{padding-left:" + (me.options.listDefaultPaddingLeft * 2) + "px}"));
  _$jscoverage['plugins/list.js'][121]++;
  utils.cssRule("list", ("ol,ul{margin:0;pading:0;" + (browser.ie? "": "width:95%") + "}li{clear:both;}" + customCss.join("\n")), me.document);
}));
  _$jscoverage['plugins/list.js'][124]++;
  me.ready((function () {
  _$jscoverage['plugins/list.js'][125]++;
  domUtils.on(me.body, "cut", (function () {
  _$jscoverage['plugins/list.js'][126]++;
  setTimeout((function () {
  _$jscoverage['plugins/list.js'][127]++;
  var rng = me.selection.getRange(), li;
  _$jscoverage['plugins/list.js'][128]++;
  if ((li = domUtils.findParentByTagName(rng.startContainer, "li", true))) {
    _$jscoverage['plugins/list.js'][129]++;
    if (((! li.nextSibling) && domUtils.isEmptyBlock(li))) {
      _$jscoverage['plugins/list.js'][130]++;
      var pn = li.parentNode, node;
      _$jscoverage['plugins/list.js'][131]++;
      if ((node = pn.previousSibling)) {
        _$jscoverage['plugins/list.js'][132]++;
        domUtils.remove(pn);
        _$jscoverage['plugins/list.js'][133]++;
        rng.setStartAtLast(node).collapse(true);
        _$jscoverage['plugins/list.js'][134]++;
        rng.select(true);
      }
      else {
        _$jscoverage['plugins/list.js'][135]++;
        if ((node = pn.nextSibling)) {
          _$jscoverage['plugins/list.js'][136]++;
          domUtils.remove(pn);
          _$jscoverage['plugins/list.js'][137]++;
          rng.setStartAtFirst(node).collapse(true);
          _$jscoverage['plugins/list.js'][138]++;
          rng.select(true);
        }
        else {
          _$jscoverage['plugins/list.js'][140]++;
          var tmpNode = me.document.createElement("p");
          _$jscoverage['plugins/list.js'][141]++;
          domUtils.fillNode(me.document, tmpNode);
          _$jscoverage['plugins/list.js'][142]++;
          pn.parentNode.insertBefore(tmpNode, pn);
          _$jscoverage['plugins/list.js'][143]++;
          domUtils.remove(pn);
          _$jscoverage['plugins/list.js'][144]++;
          rng.setStart(tmpNode, 0).collapse(true);
          _$jscoverage['plugins/list.js'][145]++;
          rng.select(true);
        }
      }
    }
  }
}));
}));
}));
  _$jscoverage['plugins/list.js'][153]++;
  function getStyle(node) {
    _$jscoverage['plugins/list.js'][154]++;
    var cls = node.className;
    _$jscoverage['plugins/list.js'][155]++;
    if (domUtils.hasClass(node, /custom_/)) {
      _$jscoverage['plugins/list.js'][156]++;
      return cls.match(/custom_(\w+)/)[1];
    }
    _$jscoverage['plugins/list.js'][158]++;
    return "";
}
  _$jscoverage['plugins/list.js'][161]++;
  me.addInputRule((function (root) {
  _$jscoverage['plugins/list.js'][162]++;
  utils.each(root.getNodesByTagName("li"), (function (li) {
  _$jscoverage['plugins/list.js'][163]++;
  var tmpP = UE.uNode.createElement("p");
  _$jscoverage['plugins/list.js'][164]++;
  for (var i = 0, ci; (ci = li.children[i]);) {
    _$jscoverage['plugins/list.js'][165]++;
    if (((ci.type == "text") || dtd.$inline[ci.tagName])) {
      _$jscoverage['plugins/list.js'][166]++;
      tmpP.appendChild(ci);
    }
    else {
      _$jscoverage['plugins/list.js'][168]++;
      if (tmpP.firstChild()) {
        _$jscoverage['plugins/list.js'][169]++;
        li.insertBefore(tmpP, ci);
        _$jscoverage['plugins/list.js'][170]++;
        tmpP = UE.uNode.createElement("p");
        _$jscoverage['plugins/list.js'][171]++;
        i = (i + 2);
      }
      else {
        _$jscoverage['plugins/list.js'][173]++;
        (i++);
      }
    }
}
  _$jscoverage['plugins/list.js'][178]++;
  if ((tmpP.firstChild() && (! tmpP.parentNode))) {
    _$jscoverage['plugins/list.js'][179]++;
    li.appendChild(tmpP);
  }
}));
}));
  _$jscoverage['plugins/list.js'][184]++;
  me.addListener("contentchange", (function () {
  _$jscoverage['plugins/list.js'][185]++;
  utils.each(domUtils.getElementsByTagName(me.document, "ol ul"), (function (node) {
  _$jscoverage['plugins/list.js'][187]++;
  if ((! domUtils.inDoc(node, me.document))) {
    _$jscoverage['plugins/list.js'][188]++;
    return;
  }
  _$jscoverage['plugins/list.js'][189]++;
  var index = 0, type = 2, parent = node.parentNode;
  _$jscoverage['plugins/list.js'][190]++;
  if (domUtils.hasClass(node, /custom_/)) {
    _$jscoverage['plugins/list.js'][191]++;
    if ((! (/[ou]l/i.test(parent.tagName) && domUtils.hasClass(parent, /custom_/)))) {
      _$jscoverage['plugins/list.js'][192]++;
      type = 1;
    }
  }
  else {
    _$jscoverage['plugins/list.js'][195]++;
    if ((/[ou]l/i.test(parent.tagName) && domUtils.hasClass(parent, /custom_/))) {
      _$jscoverage['plugins/list.js'][196]++;
      type = 3;
    }
  }
  _$jscoverage['plugins/list.js'][199]++;
  style = domUtils.getStyle(node, "list-style-type");
  _$jscoverage['plugins/list.js'][200]++;
  node.style.cssText = (style? ("list-style-type:" + style): "");
  _$jscoverage['plugins/list.js'][201]++;
  node.className = (utils.trim(node.className.replace(/list-paddingleft-\w+/, "")) + " list-paddingleft-" + type);
  _$jscoverage['plugins/list.js'][202]++;
  utils.each(domUtils.getElementsByTagName(node, "li"), (function (li) {
  _$jscoverage['plugins/list.js'][203]++;
  (li.style.cssText && (li.style.cssText = ""));
  _$jscoverage['plugins/list.js'][204]++;
  if ((! li.firstChild)) {
    _$jscoverage['plugins/list.js'][205]++;
    domUtils.remove(li);
    _$jscoverage['plugins/list.js'][206]++;
    return;
  }
  _$jscoverage['plugins/list.js'][208]++;
  if ((li.parentNode !== node)) {
    _$jscoverage['plugins/list.js'][209]++;
    return;
  }
  _$jscoverage['plugins/list.js'][211]++;
  (index++);
  _$jscoverage['plugins/list.js'][212]++;
  if (domUtils.hasClass(node, /custom_/)) {
    _$jscoverage['plugins/list.js'][213]++;
    var paddingLeft = 1, currentStyle = getStyle(node);
    _$jscoverage['plugins/list.js'][214]++;
    if ((node.tagName == "OL")) {
      _$jscoverage['plugins/list.js'][215]++;
      if (currentStyle) {
        _$jscoverage['plugins/list.js'][216]++;
        switch (currentStyle) {
        case "cn":
        case "cn1":
        case "cn2":
          _$jscoverage['plugins/list.js'][220]++;
          if (((index > 10) && (((index % 10) == 0) || ((index > 10) && (index < 20))))) {
            _$jscoverage['plugins/list.js'][221]++;
            paddingLeft = 2;
          }
          else {
            _$jscoverage['plugins/list.js'][222]++;
            if ((index > 20)) {
              _$jscoverage['plugins/list.js'][223]++;
              paddingLeft = 3;
            }
          }
          _$jscoverage['plugins/list.js'][225]++;
          break;
        case "num2":
          _$jscoverage['plugins/list.js'][227]++;
          if ((index > 9)) {
            _$jscoverage['plugins/list.js'][228]++;
            paddingLeft = 2;
          }
        }
      }
      _$jscoverage['plugins/list.js'][232]++;
      li.className = ("list-" + customStyle[currentStyle] + index + " " + "list-" + currentStyle + "-paddingleft-" + paddingLeft);
    }
    else {
      _$jscoverage['plugins/list.js'][234]++;
      li.className = ("list-" + customStyle[currentStyle] + " " + "list-" + currentStyle + "-paddingleft");
    }
  }
  else {
    _$jscoverage['plugins/list.js'][237]++;
    li.className = li.className.replace(/list-[\w\-]+/gi, "");
  }
  _$jscoverage['plugins/list.js'][239]++;
  var className = li.getAttribute("class");
  _$jscoverage['plugins/list.js'][240]++;
  if (((className !== null) && (! className.replace(/\s/g, "")))) {
    _$jscoverage['plugins/list.js'][241]++;
    domUtils.removeAttributes(li, "class");
  }
}));
  _$jscoverage['plugins/list.js'][244]++;
  adjustList(node, node.tagName.toLowerCase(), (getStyle(node) || domUtils.getStyle(node, "list-style-type")), true);
}));
}));
  _$jscoverage['plugins/list.js'][249]++;
  function adjustList(list, tag, style, ignoreEmpty) {
    _$jscoverage['plugins/list.js'][250]++;
    var nextList = list.nextSibling;
    _$jscoverage['plugins/list.js'][251]++;
    if ((nextList && (nextList.nodeType == 1) && (nextList.tagName.toLowerCase() == tag) && ((getStyle(nextList) || domUtils.getStyle(nextList, "list-style-type") || ((tag == "ol")? "decimal": "disc")) == style))) {
      _$jscoverage['plugins/list.js'][252]++;
      domUtils.moveChild(nextList, list);
      _$jscoverage['plugins/list.js'][253]++;
      if ((nextList.childNodes.length == 0)) {
        _$jscoverage['plugins/list.js'][254]++;
        domUtils.remove(nextList);
      }
    }
    _$jscoverage['plugins/list.js'][257]++;
    if ((nextList && domUtils.isFillChar(nextList))) {
      _$jscoverage['plugins/list.js'][258]++;
      domUtils.remove(nextList);
    }
    _$jscoverage['plugins/list.js'][260]++;
    var preList = list.previousSibling;
    _$jscoverage['plugins/list.js'][261]++;
    if ((preList && (preList.nodeType == 1) && (preList.tagName.toLowerCase() == tag) && ((getStyle(preList) || domUtils.getStyle(preList, "list-style-type") || ((tag == "ol")? "decimal": "disc")) == style))) {
      _$jscoverage['plugins/list.js'][262]++;
      domUtils.moveChild(list, preList);
    }
    _$jscoverage['plugins/list.js'][264]++;
    if ((preList && domUtils.isFillChar(preList))) {
      _$jscoverage['plugins/list.js'][265]++;
      domUtils.remove(preList);
    }
    _$jscoverage['plugins/list.js'][267]++;
    ((! ignoreEmpty) && domUtils.isEmptyBlock(list) && domUtils.remove(list));
}
  _$jscoverage['plugins/list.js'][270]++;
  function setListStyle(list, style) {
    _$jscoverage['plugins/list.js'][271]++;
    if (customStyle[style]) {
      _$jscoverage['plugins/list.js'][272]++;
      list.className = ("custom_" + style);
    }
    _$jscoverage['plugins/list.js'][274]++;
    try {
      _$jscoverage['plugins/list.js'][275]++;
      domUtils.setStyle(list, "list-style-type", style);
    }
    catch (e) {
    }
}
  _$jscoverage['plugins/list.js'][278]++;
  function clearEmptySibling(node) {
    _$jscoverage['plugins/list.js'][279]++;
    var tmpNode = node.previousSibling;
    _$jscoverage['plugins/list.js'][280]++;
    if ((tmpNode && domUtils.isEmptyBlock(tmpNode))) {
      _$jscoverage['plugins/list.js'][281]++;
      domUtils.remove(tmpNode);
    }
    _$jscoverage['plugins/list.js'][283]++;
    tmpNode = node.nextSibling;
    _$jscoverage['plugins/list.js'][284]++;
    if ((tmpNode && domUtils.isEmptyBlock(tmpNode))) {
      _$jscoverage['plugins/list.js'][285]++;
      domUtils.remove(tmpNode);
    }
}
  _$jscoverage['plugins/list.js'][289]++;
  me.addListener("keydown", (function (type, evt) {
  _$jscoverage['plugins/list.js'][290]++;
  function preventAndSave() {
    _$jscoverage['plugins/list.js'][291]++;
    (evt.preventDefault? evt.preventDefault(): (evt.returnValue = false));
    _$jscoverage['plugins/list.js'][292]++;
    me.fireEvent("contentchange");
    _$jscoverage['plugins/list.js'][293]++;
    (me.undoManger && me.undoManger.save());
}
  _$jscoverage['plugins/list.js'][295]++;
  function findList(node, filterFn) {
    _$jscoverage['plugins/list.js'][296]++;
    while ((node && (! domUtils.isBody(node)))) {
      _$jscoverage['plugins/list.js'][297]++;
      if (filterFn(node)) {
        _$jscoverage['plugins/list.js'][298]++;
        return null;
      }
      _$jscoverage['plugins/list.js'][300]++;
      if (((node.nodeType == 1) && /[ou]l/i.test(node.tagName))) {
        _$jscoverage['plugins/list.js'][301]++;
        return node;
      }
      _$jscoverage['plugins/list.js'][303]++;
      node = node.parentNode;
}
    _$jscoverage['plugins/list.js'][305]++;
    return null;
}
  _$jscoverage['plugins/list.js'][307]++;
  var keyCode = (evt.keyCode || evt.which);
  _$jscoverage['plugins/list.js'][308]++;
  if (((keyCode == 13) && (! evt.shiftKey))) {
    _$jscoverage['plugins/list.js'][309]++;
    var range = me.selection.getRange(), start = findList(range.startContainer, (function (node) {
  _$jscoverage['plugins/list.js'][311]++;
  return (node.tagName == "TABLE");
})), end = (range.collapsed? start: findList(range.endContainer, (function (node) {
  _$jscoverage['plugins/list.js'][314]++;
  return (node.tagName == "TABLE");
})));
    _$jscoverage['plugins/list.js'][317]++;
    if ((start && end && (start === end))) {
      _$jscoverage['plugins/list.js'][319]++;
      if ((! range.collapsed)) {
        _$jscoverage['plugins/list.js'][320]++;
        start = domUtils.findParentByTagName(range.startContainer, "li", true);
        _$jscoverage['plugins/list.js'][321]++;
        end = domUtils.findParentByTagName(range.endContainer, "li", true);
        _$jscoverage['plugins/list.js'][322]++;
        if ((start && end && (start === end))) {
          _$jscoverage['plugins/list.js'][323]++;
          range.deleteContents();
          _$jscoverage['plugins/list.js'][324]++;
          li = domUtils.findParentByTagName(range.startContainer, "li", true);
          _$jscoverage['plugins/list.js'][325]++;
          if ((li && domUtils.isEmptyBlock(li))) {
            _$jscoverage['plugins/list.js'][327]++;
            pre = li.previousSibling;
            _$jscoverage['plugins/list.js'][328]++;
            next = li.nextSibling;
            _$jscoverage['plugins/list.js'][329]++;
            p = me.document.createElement("p");
            _$jscoverage['plugins/list.js'][331]++;
            domUtils.fillNode(me.document, p);
            _$jscoverage['plugins/list.js'][332]++;
            parentList = li.parentNode;
            _$jscoverage['plugins/list.js'][333]++;
            if ((pre && next)) {
              _$jscoverage['plugins/list.js'][334]++;
              range.setStart(next, 0).collapse(true).select(true);
              _$jscoverage['plugins/list.js'][335]++;
              domUtils.remove(li);
            }
            else {
              _$jscoverage['plugins/list.js'][338]++;
              if ((((! pre) && (! next)) || (! pre))) {
                _$jscoverage['plugins/list.js'][340]++;
                parentList.parentNode.insertBefore(p, parentList);
              }
              else {
                _$jscoverage['plugins/list.js'][344]++;
                li.parentNode.parentNode.insertBefore(p, parentList.nextSibling);
              }
              _$jscoverage['plugins/list.js'][346]++;
              domUtils.remove(li);
              _$jscoverage['plugins/list.js'][347]++;
              if ((! parentList.firstChild)) {
                _$jscoverage['plugins/list.js'][348]++;
                domUtils.remove(parentList);
              }
              _$jscoverage['plugins/list.js'][350]++;
              range.setStart(p, 0).setCursor();
            }
            _$jscoverage['plugins/list.js'][354]++;
            preventAndSave();
            _$jscoverage['plugins/list.js'][355]++;
            return;
          }
        }
        else {
          _$jscoverage['plugins/list.js'][359]++;
          var tmpRange = range.cloneRange(), bk = tmpRange.collapse(false).createBookmark();
          _$jscoverage['plugins/list.js'][362]++;
          range.deleteContents();
          _$jscoverage['plugins/list.js'][363]++;
          tmpRange.moveToBookmark(bk);
          _$jscoverage['plugins/list.js'][364]++;
          var li = domUtils.findParentByTagName(tmpRange.startContainer, "li", true);
          _$jscoverage['plugins/list.js'][366]++;
          clearEmptySibling(li);
          _$jscoverage['plugins/list.js'][367]++;
          tmpRange.select();
          _$jscoverage['plugins/list.js'][368]++;
          preventAndSave();
          _$jscoverage['plugins/list.js'][369]++;
          return;
        }
      }
      _$jscoverage['plugins/list.js'][374]++;
      li = domUtils.findParentByTagName(range.startContainer, "li", true);
      _$jscoverage['plugins/list.js'][376]++;
      if (li) {
        _$jscoverage['plugins/list.js'][377]++;
        if (domUtils.isEmptyBlock(li)) {
          _$jscoverage['plugins/list.js'][378]++;
          bk = range.createBookmark();
          _$jscoverage['plugins/list.js'][379]++;
          var parentList = li.parentNode;
          _$jscoverage['plugins/list.js'][380]++;
          if ((li !== parentList.lastChild)) {
            _$jscoverage['plugins/list.js'][381]++;
            domUtils.breakParent(li, parentList);
            _$jscoverage['plugins/list.js'][382]++;
            clearEmptySibling(li);
          }
          else {
            _$jscoverage['plugins/list.js'][385]++;
            parentList.parentNode.insertBefore(li, parentList.nextSibling);
            _$jscoverage['plugins/list.js'][386]++;
            if (domUtils.isEmptyNode(parentList)) {
              _$jscoverage['plugins/list.js'][387]++;
              domUtils.remove(parentList);
            }
          }
          _$jscoverage['plugins/list.js'][391]++;
          if ((! dtd.$list[li.parentNode.tagName])) {
            _$jscoverage['plugins/list.js'][393]++;
            if ((! domUtils.isBlockElm(li.firstChild))) {
              _$jscoverage['plugins/list.js'][394]++;
              p = me.document.createElement("p");
              _$jscoverage['plugins/list.js'][395]++;
              li.parentNode.insertBefore(p, li);
              _$jscoverage['plugins/list.js'][396]++;
              while (li.firstChild) {
                _$jscoverage['plugins/list.js'][397]++;
                p.appendChild(li.firstChild);
}
              _$jscoverage['plugins/list.js'][399]++;
              domUtils.remove(li);
            }
            else {
              _$jscoverage['plugins/list.js'][401]++;
              domUtils.remove(li, true);
            }
          }
          _$jscoverage['plugins/list.js'][404]++;
          range.moveToBookmark(bk).select();
        }
        else {
          _$jscoverage['plugins/list.js'][408]++;
          var first = li.firstChild;
          _$jscoverage['plugins/list.js'][409]++;
          if (((! first) || (! domUtils.isBlockElm(first)))) {
            _$jscoverage['plugins/list.js'][410]++;
            var p = me.document.createElement("p");
            _$jscoverage['plugins/list.js'][412]++;
            ((! li.firstChild) && domUtils.fillNode(me.document, p));
            _$jscoverage['plugins/list.js'][413]++;
            while (li.firstChild) {
              _$jscoverage['plugins/list.js'][415]++;
              p.appendChild(li.firstChild);
}
            _$jscoverage['plugins/list.js'][417]++;
            li.appendChild(p);
            _$jscoverage['plugins/list.js'][418]++;
            first = p;
          }
          _$jscoverage['plugins/list.js'][421]++;
          var span = me.document.createElement("span");
          _$jscoverage['plugins/list.js'][423]++;
          range.insertNode(span);
          _$jscoverage['plugins/list.js'][424]++;
          domUtils.breakParent(span, li);
          _$jscoverage['plugins/list.js'][426]++;
          var nextLi = span.nextSibling;
          _$jscoverage['plugins/list.js'][427]++;
          first = nextLi.firstChild;
          _$jscoverage['plugins/list.js'][429]++;
          if ((! first)) {
            _$jscoverage['plugins/list.js'][430]++;
            p = me.document.createElement("p");
            _$jscoverage['plugins/list.js'][432]++;
            domUtils.fillNode(me.document, p);
            _$jscoverage['plugins/list.js'][433]++;
            nextLi.appendChild(p);
            _$jscoverage['plugins/list.js'][434]++;
            first = p;
          }
          _$jscoverage['plugins/list.js'][436]++;
          if (domUtils.isEmptyNode(first)) {
            _$jscoverage['plugins/list.js'][437]++;
            first.innerHTML = "";
            _$jscoverage['plugins/list.js'][438]++;
            domUtils.fillNode(me.document, first);
          }
          _$jscoverage['plugins/list.js'][441]++;
          range.setStart(first, 0).collapse(true).shrinkBoundary().select();
          _$jscoverage['plugins/list.js'][442]++;
          domUtils.remove(span);
          _$jscoverage['plugins/list.js'][443]++;
          var pre = nextLi.previousSibling;
          _$jscoverage['plugins/list.js'][444]++;
          if ((pre && domUtils.isEmptyBlock(pre))) {
            _$jscoverage['plugins/list.js'][445]++;
            pre.innerHTML = "<p></p>";
            _$jscoverage['plugins/list.js'][446]++;
            domUtils.fillNode(me.document, pre.firstChild);
          }
        }
        _$jscoverage['plugins/list.js'][451]++;
        preventAndSave();
      }
    }
  }
  _$jscoverage['plugins/list.js'][457]++;
  if ((keyCode == 8)) {
    _$jscoverage['plugins/list.js'][460]++;
    range = me.selection.getRange();
    _$jscoverage['plugins/list.js'][461]++;
    if ((range.collapsed && domUtils.isStartInblock(range))) {
      _$jscoverage['plugins/list.js'][462]++;
      tmpRange = range.cloneRange().trimBoundary();
      _$jscoverage['plugins/list.js'][463]++;
      li = domUtils.findParentByTagName(range.startContainer, "li", true);
      _$jscoverage['plugins/list.js'][465]++;
      if ((li && domUtils.isStartInblock(tmpRange))) {
        _$jscoverage['plugins/list.js'][466]++;
        start = domUtils.findParentByTagName(range.startContainer, "p", true);
        _$jscoverage['plugins/list.js'][467]++;
        if ((start && (start !== li.firstChild))) {
          _$jscoverage['plugins/list.js'][468]++;
          var parentList = domUtils.findParentByTagName(start, ["ol", "ul"]);
          _$jscoverage['plugins/list.js'][469]++;
          domUtils.breakParent(start, parentList);
          _$jscoverage['plugins/list.js'][470]++;
          clearEmptySibling(start);
          _$jscoverage['plugins/list.js'][471]++;
          me.fireEvent("contentchange");
          _$jscoverage['plugins/list.js'][472]++;
          range.setStart(start, 0).setCursor(false, true);
          _$jscoverage['plugins/list.js'][473]++;
          me.fireEvent("saveScene");
          _$jscoverage['plugins/list.js'][474]++;
          domUtils.preventDefault(evt);
          _$jscoverage['plugins/list.js'][475]++;
          return;
        }
        _$jscoverage['plugins/list.js'][478]++;
        if ((li && (pre = li.previousSibling))) {
          _$jscoverage['plugins/list.js'][479]++;
          if (((keyCode == 46) && li.childNodes.length)) {
            _$jscoverage['plugins/list.js'][480]++;
            return;
          }
          _$jscoverage['plugins/list.js'][483]++;
          if (dtd.$list[pre.tagName]) {
            _$jscoverage['plugins/list.js'][484]++;
            pre = pre.lastChild;
          }
          _$jscoverage['plugins/list.js'][486]++;
          (me.undoManger && me.undoManger.save());
          _$jscoverage['plugins/list.js'][487]++;
          first = li.firstChild;
          _$jscoverage['plugins/list.js'][488]++;
          if (domUtils.isBlockElm(first)) {
            _$jscoverage['plugins/list.js'][489]++;
            if (domUtils.isEmptyNode(first)) {
              _$jscoverage['plugins/list.js'][491]++;
              pre.appendChild(first);
              _$jscoverage['plugins/list.js'][492]++;
              range.setStart(first, 0).setCursor(false, true);
              _$jscoverage['plugins/list.js'][494]++;
              while (li.firstChild) {
                _$jscoverage['plugins/list.js'][495]++;
                pre.appendChild(li.firstChild);
}
            }
            else {
              _$jscoverage['plugins/list.js'][499]++;
              span = me.document.createElement("span");
              _$jscoverage['plugins/list.js'][500]++;
              range.insertNode(span);
              _$jscoverage['plugins/list.js'][502]++;
              if (domUtils.isEmptyBlock(pre)) {
                _$jscoverage['plugins/list.js'][503]++;
                pre.innerHTML = "";
              }
              _$jscoverage['plugins/list.js'][505]++;
              domUtils.moveChild(li, pre);
              _$jscoverage['plugins/list.js'][506]++;
              range.setStartBefore(span).collapse(true).select(true);
              _$jscoverage['plugins/list.js'][508]++;
              domUtils.remove(span);
            }
          }
          else {
            _$jscoverage['plugins/list.js'][512]++;
            if (domUtils.isEmptyNode(li)) {
              _$jscoverage['plugins/list.js'][513]++;
              var p = me.document.createElement("p");
              _$jscoverage['plugins/list.js'][514]++;
              pre.appendChild(p);
              _$jscoverage['plugins/list.js'][515]++;
              range.setStart(p, 0).setCursor();
            }
            else {
              _$jscoverage['plugins/list.js'][518]++;
              range.setEnd(pre, pre.childNodes.length).collapse().select(true);
              _$jscoverage['plugins/list.js'][519]++;
              while (li.firstChild) {
                _$jscoverage['plugins/list.js'][520]++;
                pre.appendChild(li.firstChild);
}
            }
          }
          _$jscoverage['plugins/list.js'][524]++;
          domUtils.remove(li);
          _$jscoverage['plugins/list.js'][525]++;
          me.fireEvent("contentchange");
          _$jscoverage['plugins/list.js'][526]++;
          me.fireEvent("saveScene");
          _$jscoverage['plugins/list.js'][527]++;
          domUtils.preventDefault(evt);
          _$jscoverage['plugins/list.js'][528]++;
          return;
        }
        _$jscoverage['plugins/list.js'][533]++;
        if ((li && (! li.previousSibling))) {
          _$jscoverage['plugins/list.js'][534]++;
          var parentList = li.parentNode;
          _$jscoverage['plugins/list.js'][535]++;
          var bk = range.createBookmark();
          _$jscoverage['plugins/list.js'][536]++;
          if (domUtils.isTagNode(parentList.parentNode, "ol ul")) {
            _$jscoverage['plugins/list.js'][537]++;
            parentList.parentNode.insertBefore(li, parentList);
            _$jscoverage['plugins/list.js'][538]++;
            if (domUtils.isEmptyNode(parentList)) {
              _$jscoverage['plugins/list.js'][539]++;
              domUtils.remove(parentList);
            }
          }
          else {
            _$jscoverage['plugins/list.js'][543]++;
            while (li.firstChild) {
              _$jscoverage['plugins/list.js'][544]++;
              parentList.parentNode.insertBefore(li.firstChild, parentList);
}
            _$jscoverage['plugins/list.js'][547]++;
            domUtils.remove(li);
            _$jscoverage['plugins/list.js'][548]++;
            if (domUtils.isEmptyNode(parentList)) {
              _$jscoverage['plugins/list.js'][549]++;
              domUtils.remove(parentList);
            }
          }
          _$jscoverage['plugins/list.js'][553]++;
          range.moveToBookmark(bk).setCursor(false, true);
          _$jscoverage['plugins/list.js'][554]++;
          me.fireEvent("contentchange");
          _$jscoverage['plugins/list.js'][555]++;
          me.fireEvent("saveScene");
          _$jscoverage['plugins/list.js'][556]++;
          domUtils.preventDefault(evt);
          _$jscoverage['plugins/list.js'][557]++;
          return;
        }
      }
    }
  }
}));
  _$jscoverage['plugins/list.js'][571]++;
  me.addListener("tabkeydown", (function () {
  _$jscoverage['plugins/list.js'][572]++;
  function listToArray(list) {
    _$jscoverage['plugins/list.js'][573]++;
    var arr = [];
    _$jscoverage['plugins/list.js'][574]++;
    for (var p in list) {
      _$jscoverage['plugins/list.js'][575]++;
      arr.push(p);
}
    _$jscoverage['plugins/list.js'][577]++;
    return arr;
}
  _$jscoverage['plugins/list.js'][579]++;
  var range = me.selection.getRange(), listStyle = {"OL": listToArray(me.options.insertorderedlist), "UL": listToArray(me.options.insertunorderedlist)};
  _$jscoverage['plugins/list.js'][585]++;
  function checkLevel(li) {
    _$jscoverage['plugins/list.js'][586]++;
    if ((me.options.maxListLevel != -1)) {
      _$jscoverage['plugins/list.js'][587]++;
      var level = li.parentNode, levelNum = 0;
      _$jscoverage['plugins/list.js'][588]++;
      while (/[ou]l/i.test(level.tagName)) {
        _$jscoverage['plugins/list.js'][589]++;
        (levelNum++);
        _$jscoverage['plugins/list.js'][590]++;
        level = level.parentNode;
}
      _$jscoverage['plugins/list.js'][592]++;
      if ((levelNum >= me.options.maxListLevel)) {
        _$jscoverage['plugins/list.js'][593]++;
        return true;
      }
    }
}
  _$jscoverage['plugins/list.js'][599]++;
  var li = domUtils.findParentByTagName(range.startContainer, "li", true);
  _$jscoverage['plugins/list.js'][600]++;
  if (li) {
    _$jscoverage['plugins/list.js'][602]++;
    var bk;
    _$jscoverage['plugins/list.js'][603]++;
    if (range.collapsed) {
      _$jscoverage['plugins/list.js'][604]++;
      if (checkLevel(li)) {
        _$jscoverage['plugins/list.js'][605]++;
        return true;
      }
      _$jscoverage['plugins/list.js'][606]++;
      var parentLi = li.parentNode, list = me.document.createElement(parentLi.tagName), index = utils.indexOf(listStyle[list.tagName], (getStyle(parentLi) || domUtils.getComputedStyle(parentLi, "list-style-type")));
      _$jscoverage['plugins/list.js'][609]++;
      index = (((index + 1) == listStyle[list.tagName].length)? 0: (index + 1));
      _$jscoverage['plugins/list.js'][610]++;
      var currentStyle = listStyle[list.tagName][index];
      _$jscoverage['plugins/list.js'][611]++;
      setListStyle(list, currentStyle);
      _$jscoverage['plugins/list.js'][612]++;
      if (domUtils.isStartInblock(range)) {
        _$jscoverage['plugins/list.js'][613]++;
        me.fireEvent("saveScene");
        _$jscoverage['plugins/list.js'][614]++;
        bk = range.createBookmark();
        _$jscoverage['plugins/list.js'][615]++;
        parentLi.insertBefore(list, li);
        _$jscoverage['plugins/list.js'][616]++;
        list.appendChild(li);
        _$jscoverage['plugins/list.js'][617]++;
        adjustList(list, list.tagName.toLowerCase(), currentStyle);
        _$jscoverage['plugins/list.js'][618]++;
        me.fireEvent("contentchange");
        _$jscoverage['plugins/list.js'][619]++;
        range.moveToBookmark(bk).select(true);
        _$jscoverage['plugins/list.js'][620]++;
        return true;
      }
    }
    else {
      _$jscoverage['plugins/list.js'][623]++;
      me.fireEvent("saveScene");
      _$jscoverage['plugins/list.js'][624]++;
      bk = range.createBookmark();
      _$jscoverage['plugins/list.js'][625]++;
      for (var i = 0, closeList, parents = domUtils.findParents(li), ci; (ci = parents[(i++)]);) {
        _$jscoverage['plugins/list.js'][626]++;
        if (domUtils.isTagNode(ci, "ol ul")) {
          _$jscoverage['plugins/list.js'][627]++;
          closeList = ci;
          _$jscoverage['plugins/list.js'][628]++;
          break;
        }
}
      _$jscoverage['plugins/list.js'][631]++;
      var current = li;
      _$jscoverage['plugins/list.js'][632]++;
      if (bk.end) {
        _$jscoverage['plugins/list.js'][633]++;
        while ((current && (! (domUtils.getPosition(current, bk.end) & domUtils.POSITION_FOLLOWING)))) {
          _$jscoverage['plugins/list.js'][634]++;
          if (checkLevel(current)) {
            _$jscoverage['plugins/list.js'][635]++;
            current = domUtils.getNextDomNode(current, false, null, (function (node) {
  _$jscoverage['plugins/list.js'][635]++;
  return (node !== closeList);
}));
            _$jscoverage['plugins/list.js'][636]++;
            continue;
          }
          _$jscoverage['plugins/list.js'][638]++;
          var parentLi = current.parentNode, list = me.document.createElement(parentLi.tagName), index = utils.indexOf(listStyle[list.tagName], (getStyle(parentLi) || domUtils.getComputedStyle(parentLi, "list-style-type")));
          _$jscoverage['plugins/list.js'][641]++;
          var currentIndex = (((index + 1) == listStyle[list.tagName].length)? 0: (index + 1));
          _$jscoverage['plugins/list.js'][642]++;
          var currentStyle = listStyle[list.tagName][currentIndex];
          _$jscoverage['plugins/list.js'][643]++;
          setListStyle(list, currentStyle);
          _$jscoverage['plugins/list.js'][644]++;
          parentLi.insertBefore(list, current);
          _$jscoverage['plugins/list.js'][645]++;
          while ((current && (! (domUtils.getPosition(current, bk.end) & domUtils.POSITION_FOLLOWING)))) {
            _$jscoverage['plugins/list.js'][646]++;
            li = current.nextSibling;
            _$jscoverage['plugins/list.js'][647]++;
            list.appendChild(current);
            _$jscoverage['plugins/list.js'][648]++;
            if (((! li) || domUtils.isTagNode(li, "ol ul"))) {
              _$jscoverage['plugins/list.js'][649]++;
              if (li) {
                _$jscoverage['plugins/list.js'][650]++;
                while ((li = li.firstChild)) {
                  _$jscoverage['plugins/list.js'][651]++;
                  if ((li.tagName == "LI")) {
                    _$jscoverage['plugins/list.js'][652]++;
                    break;
                  }
}
              }
              else {
                _$jscoverage['plugins/list.js'][656]++;
                li = domUtils.getNextDomNode(current, false, null, (function (node) {
  _$jscoverage['plugins/list.js'][656]++;
  return (node !== closeList);
}));
              }
              _$jscoverage['plugins/list.js'][658]++;
              break;
            }
            _$jscoverage['plugins/list.js'][660]++;
            current = li;
}
          _$jscoverage['plugins/list.js'][662]++;
          adjustList(list, list.tagName.toLowerCase(), currentStyle);
          _$jscoverage['plugins/list.js'][663]++;
          current = li;
}
      }
      _$jscoverage['plugins/list.js'][666]++;
      me.fireEvent("contentchange");
      _$jscoverage['plugins/list.js'][667]++;
      range.moveToBookmark(bk).select();
      _$jscoverage['plugins/list.js'][668]++;
      return true;
    }
  }
}));
  _$jscoverage['plugins/list.js'][674]++;
  me.commands.insertorderedlist = (me.commands.insertunorderedlist = {execCommand: (function (command, style) {
  _$jscoverage['plugins/list.js'][678]++;
  if ((! style)) {
    _$jscoverage['plugins/list.js'][679]++;
    style = ((command.toLowerCase() == "insertorderedlist")? "decimal": "disc");
  }
  _$jscoverage['plugins/list.js'][681]++;
  var me = this, range = this.selection.getRange(), filterFn = (function (node) {
  _$jscoverage['plugins/list.js'][684]++;
  return ((node.nodeType == 1)? (node.tagName.toLowerCase() != "br"): (! domUtils.isWhitespace(node)));
}), tag = ((command.toLowerCase() == "insertorderedlist")? "ol": "ul"), frag = me.document.createDocumentFragment();
  _$jscoverage['plugins/list.js'][690]++;
  range.adjustmentBoundary().shrinkBoundary();
  _$jscoverage['plugins/list.js'][691]++;
  var bko = range.createBookmark(true), start = domUtils.findParentByTagName(me.document.getElementById(bko.start), "li"), modifyStart = 0, end = domUtils.findParentByTagName(me.document.getElementById(bko.end), "li"), modifyEnd = 0, startParent, endParent, list, tmp;
  _$jscoverage['plugins/list.js'][699]++;
  if ((start || end)) {
    _$jscoverage['plugins/list.js'][700]++;
    (start && (startParent = start.parentNode));
    _$jscoverage['plugins/list.js'][701]++;
    if ((! bko.end)) {
      _$jscoverage['plugins/list.js'][702]++;
      end = start;
    }
    _$jscoverage['plugins/list.js'][704]++;
    (end && (endParent = end.parentNode));
    _$jscoverage['plugins/list.js'][706]++;
    if ((startParent === endParent)) {
      _$jscoverage['plugins/list.js'][707]++;
      while ((start !== end)) {
        _$jscoverage['plugins/list.js'][708]++;
        tmp = start;
        _$jscoverage['plugins/list.js'][709]++;
        start = start.nextSibling;
        _$jscoverage['plugins/list.js'][710]++;
        if ((! domUtils.isBlockElm(tmp.firstChild))) {
          _$jscoverage['plugins/list.js'][711]++;
          var p = me.document.createElement("p");
          _$jscoverage['plugins/list.js'][712]++;
          while (tmp.firstChild) {
            _$jscoverage['plugins/list.js'][713]++;
            p.appendChild(tmp.firstChild);
}
          _$jscoverage['plugins/list.js'][715]++;
          tmp.appendChild(p);
        }
        _$jscoverage['plugins/list.js'][717]++;
        frag.appendChild(tmp);
}
      _$jscoverage['plugins/list.js'][719]++;
      tmp = me.document.createElement("span");
      _$jscoverage['plugins/list.js'][720]++;
      startParent.insertBefore(tmp, end);
      _$jscoverage['plugins/list.js'][721]++;
      if ((! domUtils.isBlockElm(end.firstChild))) {
        _$jscoverage['plugins/list.js'][722]++;
        p = me.document.createElement("p");
        _$jscoverage['plugins/list.js'][723]++;
        while (end.firstChild) {
          _$jscoverage['plugins/list.js'][724]++;
          p.appendChild(end.firstChild);
}
        _$jscoverage['plugins/list.js'][726]++;
        end.appendChild(p);
      }
      _$jscoverage['plugins/list.js'][728]++;
      frag.appendChild(end);
      _$jscoverage['plugins/list.js'][729]++;
      domUtils.breakParent(tmp, startParent);
      _$jscoverage['plugins/list.js'][730]++;
      if (domUtils.isEmptyNode(tmp.previousSibling)) {
        _$jscoverage['plugins/list.js'][731]++;
        domUtils.remove(tmp.previousSibling);
      }
      _$jscoverage['plugins/list.js'][733]++;
      if (domUtils.isEmptyNode(tmp.nextSibling)) {
        _$jscoverage['plugins/list.js'][734]++;
        domUtils.remove(tmp.nextSibling);
      }
      _$jscoverage['plugins/list.js'][736]++;
      var nodeStyle = (getStyle(startParent) || domUtils.getComputedStyle(startParent, "list-style-type") || ((command.toLowerCase() == "insertorderedlist")? "decimal": "disc"));
      _$jscoverage['plugins/list.js'][737]++;
      if (((startParent.tagName.toLowerCase() == tag) && (nodeStyle == style))) {
        _$jscoverage['plugins/list.js'][738]++;
        for (var i = 0, ci, tmpFrag = me.document.createDocumentFragment(); (ci = frag.childNodes[(i++)]);) {
          _$jscoverage['plugins/list.js'][739]++;
          if (domUtils.isTagNode(ci, "ol ul")) {
            _$jscoverage['plugins/list.js'][740]++;
            utils.each(domUtils.getElementsByTagName(ci, "li"), (function (li) {
  _$jscoverage['plugins/list.js'][741]++;
  while (li.firstChild) {
    _$jscoverage['plugins/list.js'][742]++;
    tmpFrag.appendChild(li.firstChild);
}
}));
          }
          else {
            _$jscoverage['plugins/list.js'][747]++;
            while (ci.firstChild) {
              _$jscoverage['plugins/list.js'][748]++;
              tmpFrag.appendChild(ci.firstChild);
}
          }
}
        _$jscoverage['plugins/list.js'][753]++;
        tmp.parentNode.insertBefore(tmpFrag, tmp);
      }
      else {
        _$jscoverage['plugins/list.js'][755]++;
        list = me.document.createElement(tag);
        _$jscoverage['plugins/list.js'][756]++;
        setListStyle(list, style);
        _$jscoverage['plugins/list.js'][757]++;
        list.appendChild(frag);
        _$jscoverage['plugins/list.js'][758]++;
        tmp.parentNode.insertBefore(list, tmp);
      }
      _$jscoverage['plugins/list.js'][761]++;
      domUtils.remove(tmp);
      _$jscoverage['plugins/list.js'][762]++;
      (list && adjustList(list, tag, style));
      _$jscoverage['plugins/list.js'][763]++;
      range.moveToBookmark(bko).select();
      _$jscoverage['plugins/list.js'][764]++;
      return;
    }
    _$jscoverage['plugins/list.js'][767]++;
    if (start) {
      _$jscoverage['plugins/list.js'][768]++;
      while (start) {
        _$jscoverage['plugins/list.js'][769]++;
        tmp = start.nextSibling;
        _$jscoverage['plugins/list.js'][770]++;
        if (domUtils.isTagNode(start, "ol ul")) {
          _$jscoverage['plugins/list.js'][771]++;
          frag.appendChild(start);
        }
        else {
          _$jscoverage['plugins/list.js'][773]++;
          var tmpfrag = me.document.createDocumentFragment(), hasBlock = 0;
          _$jscoverage['plugins/list.js'][775]++;
          while (start.firstChild) {
            _$jscoverage['plugins/list.js'][776]++;
            if (domUtils.isBlockElm(start.firstChild)) {
              _$jscoverage['plugins/list.js'][777]++;
              hasBlock = 1;
            }
            _$jscoverage['plugins/list.js'][779]++;
            tmpfrag.appendChild(start.firstChild);
}
          _$jscoverage['plugins/list.js'][781]++;
          if ((! hasBlock)) {
            _$jscoverage['plugins/list.js'][782]++;
            var tmpP = me.document.createElement("p");
            _$jscoverage['plugins/list.js'][783]++;
            tmpP.appendChild(tmpfrag);
            _$jscoverage['plugins/list.js'][784]++;
            frag.appendChild(tmpP);
          }
          else {
            _$jscoverage['plugins/list.js'][786]++;
            frag.appendChild(tmpfrag);
          }
          _$jscoverage['plugins/list.js'][788]++;
          domUtils.remove(start);
        }
        _$jscoverage['plugins/list.js'][791]++;
        start = tmp;
}
      _$jscoverage['plugins/list.js'][793]++;
      startParent.parentNode.insertBefore(frag, startParent.nextSibling);
      _$jscoverage['plugins/list.js'][794]++;
      if (domUtils.isEmptyNode(startParent)) {
        _$jscoverage['plugins/list.js'][795]++;
        range.setStartBefore(startParent);
        _$jscoverage['plugins/list.js'][796]++;
        domUtils.remove(startParent);
      }
      else {
        _$jscoverage['plugins/list.js'][798]++;
        range.setStartAfter(startParent);
      }
      _$jscoverage['plugins/list.js'][800]++;
      modifyStart = 1;
    }
    _$jscoverage['plugins/list.js'][803]++;
    if ((end && domUtils.inDoc(endParent, me.document))) {
      _$jscoverage['plugins/list.js'][805]++;
      start = endParent.firstChild;
      _$jscoverage['plugins/list.js'][806]++;
      while ((start && (start !== end))) {
        _$jscoverage['plugins/list.js'][807]++;
        tmp = start.nextSibling;
        _$jscoverage['plugins/list.js'][808]++;
        if (domUtils.isTagNode(start, "ol ul")) {
          _$jscoverage['plugins/list.js'][809]++;
          frag.appendChild(start);
        }
        else {
          _$jscoverage['plugins/list.js'][811]++;
          tmpfrag = me.document.createDocumentFragment();
          _$jscoverage['plugins/list.js'][812]++;
          hasBlock = 0;
          _$jscoverage['plugins/list.js'][813]++;
          while (start.firstChild) {
            _$jscoverage['plugins/list.js'][814]++;
            if (domUtils.isBlockElm(start.firstChild)) {
              _$jscoverage['plugins/list.js'][815]++;
              hasBlock = 1;
            }
            _$jscoverage['plugins/list.js'][817]++;
            tmpfrag.appendChild(start.firstChild);
}
          _$jscoverage['plugins/list.js'][819]++;
          if ((! hasBlock)) {
            _$jscoverage['plugins/list.js'][820]++;
            tmpP = me.document.createElement("p");
            _$jscoverage['plugins/list.js'][821]++;
            tmpP.appendChild(tmpfrag);
            _$jscoverage['plugins/list.js'][822]++;
            frag.appendChild(tmpP);
          }
          else {
            _$jscoverage['plugins/list.js'][824]++;
            frag.appendChild(tmpfrag);
          }
          _$jscoverage['plugins/list.js'][826]++;
          domUtils.remove(start);
        }
        _$jscoverage['plugins/list.js'][828]++;
        start = tmp;
}
      _$jscoverage['plugins/list.js'][830]++;
      var tmpDiv = domUtils.createElement(me.document, "div", {"tmpDiv": 1});
      _$jscoverage['plugins/list.js'][833]++;
      domUtils.moveChild(end, tmpDiv);
      _$jscoverage['plugins/list.js'][835]++;
      frag.appendChild(tmpDiv);
      _$jscoverage['plugins/list.js'][836]++;
      domUtils.remove(end);
      _$jscoverage['plugins/list.js'][837]++;
      endParent.parentNode.insertBefore(frag, endParent);
      _$jscoverage['plugins/list.js'][838]++;
      range.setEndBefore(endParent);
      _$jscoverage['plugins/list.js'][839]++;
      if (domUtils.isEmptyNode(endParent)) {
        _$jscoverage['plugins/list.js'][840]++;
        domUtils.remove(endParent);
      }
      _$jscoverage['plugins/list.js'][843]++;
      modifyEnd = 1;
    }
  }
  _$jscoverage['plugins/list.js'][849]++;
  if ((! modifyStart)) {
    _$jscoverage['plugins/list.js'][850]++;
    range.setStartBefore(me.document.getElementById(bko.start));
  }
  _$jscoverage['plugins/list.js'][852]++;
  if ((bko.end && (! modifyEnd))) {
    _$jscoverage['plugins/list.js'][853]++;
    range.setEndAfter(me.document.getElementById(bko.end));
  }
  _$jscoverage['plugins/list.js'][855]++;
  range.enlarge(true, (function (node) {
  _$jscoverage['plugins/list.js'][856]++;
  return notExchange[node.tagName];
}));
  _$jscoverage['plugins/list.js'][859]++;
  frag = me.document.createDocumentFragment();
  _$jscoverage['plugins/list.js'][861]++;
  var bk = range.createBookmark(), current = domUtils.getNextDomNode(bk.start, false, filterFn), tmpRange = range.cloneRange(), tmpNode, block = domUtils.isBlockElm;
  _$jscoverage['plugins/list.js'][867]++;
  while ((current && (current !== bk.end) && (domUtils.getPosition(current, bk.end) & domUtils.POSITION_PRECEDING))) {
    _$jscoverage['plugins/list.js'][869]++;
    if (((current.nodeType == 3) || dtd.li[current.tagName])) {
      _$jscoverage['plugins/list.js'][870]++;
      if (((current.nodeType == 1) && dtd.$list[current.tagName])) {
        _$jscoverage['plugins/list.js'][871]++;
        while (current.firstChild) {
          _$jscoverage['plugins/list.js'][872]++;
          frag.appendChild(current.firstChild);
}
        _$jscoverage['plugins/list.js'][874]++;
        tmpNode = domUtils.getNextDomNode(current, false, filterFn);
        _$jscoverage['plugins/list.js'][875]++;
        domUtils.remove(current);
        _$jscoverage['plugins/list.js'][876]++;
        current = tmpNode;
        _$jscoverage['plugins/list.js'][877]++;
        continue;
      }
      _$jscoverage['plugins/list.js'][880]++;
      tmpNode = current;
      _$jscoverage['plugins/list.js'][881]++;
      tmpRange.setStartBefore(current);
      _$jscoverage['plugins/list.js'][883]++;
      while ((current && (current !== bk.end) && ((! block(current)) || domUtils.isBookmarkNode(current)))) {
        _$jscoverage['plugins/list.js'][884]++;
        tmpNode = current;
        _$jscoverage['plugins/list.js'][885]++;
        current = domUtils.getNextDomNode(current, false, null, (function (node) {
  _$jscoverage['plugins/list.js'][886]++;
  return (! notExchange[node.tagName]);
}));
}
      _$jscoverage['plugins/list.js'][890]++;
      if ((current && block(current))) {
        _$jscoverage['plugins/list.js'][891]++;
        tmp = domUtils.getNextDomNode(tmpNode, false, filterFn);
        _$jscoverage['plugins/list.js'][892]++;
        if ((tmp && domUtils.isBookmarkNode(tmp))) {
          _$jscoverage['plugins/list.js'][893]++;
          current = domUtils.getNextDomNode(tmp, false, filterFn);
          _$jscoverage['plugins/list.js'][894]++;
          tmpNode = tmp;
        }
      }
      _$jscoverage['plugins/list.js'][897]++;
      tmpRange.setEndAfter(tmpNode);
      _$jscoverage['plugins/list.js'][899]++;
      current = domUtils.getNextDomNode(tmpNode, false, filterFn);
      _$jscoverage['plugins/list.js'][901]++;
      var li = range.document.createElement("li");
      _$jscoverage['plugins/list.js'][903]++;
      li.appendChild(tmpRange.extractContents());
      _$jscoverage['plugins/list.js'][904]++;
      if (domUtils.isEmptyNode(li)) {
        _$jscoverage['plugins/list.js'][905]++;
        var tmpNode = range.document.createElement("p");
        _$jscoverage['plugins/list.js'][906]++;
        while (li.firstChild) {
          _$jscoverage['plugins/list.js'][907]++;
          tmpNode.appendChild(li.firstChild);
}
        _$jscoverage['plugins/list.js'][909]++;
        li.appendChild(tmpNode);
      }
      _$jscoverage['plugins/list.js'][911]++;
      frag.appendChild(li);
    }
    else {
      _$jscoverage['plugins/list.js'][913]++;
      current = domUtils.getNextDomNode(current, true, filterFn);
    }
}
  _$jscoverage['plugins/list.js'][916]++;
  range.moveToBookmark(bk).collapse(true);
  _$jscoverage['plugins/list.js'][917]++;
  list = me.document.createElement(tag);
  _$jscoverage['plugins/list.js'][918]++;
  setListStyle(list, style);
  _$jscoverage['plugins/list.js'][919]++;
  list.appendChild(frag);
  _$jscoverage['plugins/list.js'][920]++;
  range.insertNode(list);
  _$jscoverage['plugins/list.js'][922]++;
  adjustList(list, tag, style, true);
  _$jscoverage['plugins/list.js'][924]++;
  for (var i = 0, ci = ci, tmpDivs = domUtils.getElementsByTagName(list, "div"); (ci = tmpDivs[(i++)]);) {
    _$jscoverage['plugins/list.js'][925]++;
    if (ci.getAttribute("tmpDiv")) {
      _$jscoverage['plugins/list.js'][926]++;
      domUtils.remove(ci, true);
    }
}
  _$jscoverage['plugins/list.js'][929]++;
  range.moveToBookmark(bko).select();
}), queryCommandState: (function (command) {
  _$jscoverage['plugins/list.js'][933]++;
  return (domUtils.filterNodeList(this.selection.getStartElementPath(), ((command.toLowerCase() == "insertorderedlist")? "ol": "ul"))? 1: 0);
}), queryCommandValue: (function (command) {
  _$jscoverage['plugins/list.js'][936]++;
  var node = domUtils.filterNodeList(this.selection.getStartElementPath(), ((command.toLowerCase() == "insertorderedlist")? "ol": "ul"));
  _$jscoverage['plugins/list.js'][937]++;
  return (node? (getStyle(node) || domUtils.getComputedStyle(node, "list-style-type")): null);
})});
});
