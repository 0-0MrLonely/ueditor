/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['plugins/formula.js']) {
  _$jscoverage['plugins/formula.js'] = [];
  _$jscoverage['plugins/formula.js'][8] = 0;
  _$jscoverage['plugins/formula.js'][9] = 0;
  _$jscoverage['plugins/formula.js'][10] = 0;
  _$jscoverage['plugins/formula.js'][12] = 0;
  _$jscoverage['plugins/formula.js'][13] = 0;
  _$jscoverage['plugins/formula.js'][14] = 0;
  _$jscoverage['plugins/formula.js'][18] = 0;
  _$jscoverage['plugins/formula.js'][19] = 0;
  _$jscoverage['plugins/formula.js'][26] = 0;
  _$jscoverage['plugins/formula.js'][33] = 0;
  _$jscoverage['plugins/formula.js'][43] = 0;
  _$jscoverage['plugins/formula.js'][44] = 0;
  _$jscoverage['plugins/formula.js'][47] = 0;
  _$jscoverage['plugins/formula.js'][48] = 0;
  _$jscoverage['plugins/formula.js'][50] = 0;
  _$jscoverage['plugins/formula.js'][51] = 0;
  _$jscoverage['plugins/formula.js'][55] = 0;
  _$jscoverage['plugins/formula.js'][56] = 0;
  _$jscoverage['plugins/formula.js'][57] = 0;
  _$jscoverage['plugins/formula.js'][58] = 0;
  _$jscoverage['plugins/formula.js'][59] = 0;
  _$jscoverage['plugins/formula.js'][60] = 0;
  _$jscoverage['plugins/formula.js'][61] = 0;
  _$jscoverage['plugins/formula.js'][62] = 0;
  _$jscoverage['plugins/formula.js'][64] = 0;
  _$jscoverage['plugins/formula.js'][68] = 0;
  _$jscoverage['plugins/formula.js'][73] = 0;
  _$jscoverage['plugins/formula.js'][90] = 0;
  _$jscoverage['plugins/formula.js'][91] = 0;
  _$jscoverage['plugins/formula.js'][92] = 0;
  _$jscoverage['plugins/formula.js'][93] = 0;
  _$jscoverage['plugins/formula.js'][95] = 0;
  _$jscoverage['plugins/formula.js'][98] = 0;
  _$jscoverage['plugins/formula.js'][99] = 0;
  _$jscoverage['plugins/formula.js'][100] = 0;
  _$jscoverage['plugins/formula.js'][101] = 0;
  _$jscoverage['plugins/formula.js'][102] = 0;
  _$jscoverage['plugins/formula.js'][103] = 0;
  _$jscoverage['plugins/formula.js'][104] = 0;
  _$jscoverage['plugins/formula.js'][106] = 0;
  _$jscoverage['plugins/formula.js'][107] = 0;
  _$jscoverage['plugins/formula.js'][108] = 0;
  _$jscoverage['plugins/formula.js'][109] = 0;
  _$jscoverage['plugins/formula.js'][114] = 0;
  _$jscoverage['plugins/formula.js'][115] = 0;
  _$jscoverage['plugins/formula.js'][116] = 0;
  _$jscoverage['plugins/formula.js'][117] = 0;
  _$jscoverage['plugins/formula.js'][118] = 0;
  _$jscoverage['plugins/formula.js'][120] = 0;
  _$jscoverage['plugins/formula.js'][121] = 0;
  _$jscoverage['plugins/formula.js'][129] = 0;
  _$jscoverage['plugins/formula.js'][131] = 0;
  _$jscoverage['plugins/formula.js'][132] = 0;
  _$jscoverage['plugins/formula.js'][133] = 0;
  _$jscoverage['plugins/formula.js'][134] = 0;
  _$jscoverage['plugins/formula.js'][136] = 0;
  _$jscoverage['plugins/formula.js'][137] = 0;
  _$jscoverage['plugins/formula.js'][139] = 0;
  _$jscoverage['plugins/formula.js'][140] = 0;
  _$jscoverage['plugins/formula.js'][144] = 0;
  _$jscoverage['plugins/formula.js'][145] = 0;
  _$jscoverage['plugins/formula.js'][147] = 0;
  _$jscoverage['plugins/formula.js'][148] = 0;
  _$jscoverage['plugins/formula.js'][149] = 0;
  _$jscoverage['plugins/formula.js'][152] = 0;
  _$jscoverage['plugins/formula.js'][153] = 0;
  _$jscoverage['plugins/formula.js'][156] = 0;
}
_$jscoverage['plugins/formula.js'].source = ["<span class=\"c\">///import core</span>","<span class=\"c\">///import commands/inserthtml.js</span>","<span class=\"c\">///commands &#25554;&#20837;&#20844;&#24335;</span>","<span class=\"c\">///commandsName  insertmath</span>","<span class=\"c\">///commandsTitle  &#25554;&#20837;&#20844;&#24335;</span>","<span class=\"c\">///commandsDialog  dialogs\\math\\math.html</span>","","UE<span class=\"k\">.</span>plugins<span class=\"k\">[</span><span class=\"s\">'formula'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> me <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","    me<span class=\"k\">.</span>_formulaid <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","    <span class=\"k\">var</span> filter <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> domUtils<span class=\"k\">.</span>findParent<span class=\"k\">(</span>node<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> node<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> node<span class=\"k\">.</span>tagName<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">==</span> <span class=\"s\">'span'</span> <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>hasClass<span class=\"k\">(</span>node<span class=\"k\">,</span> <span class=\"s\">'mathquill-editable'</span><span class=\"k\">)</span>","        <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    me<span class=\"k\">.</span>addListener<span class=\"k\">(</span><span class=\"s\">\"ready\"</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        utils<span class=\"k\">.</span>loadFile<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">,</span> <span class=\"k\">{</span>","            id<span class=\"k\">:</span><span class=\"s\">\"mathquill_css\"</span><span class=\"k\">,</span>","            tag<span class=\"k\">:</span><span class=\"s\">\"link\"</span><span class=\"k\">,</span>","            rel<span class=\"k\">:</span><span class=\"s\">\"stylesheet\"</span><span class=\"k\">,</span>","            type<span class=\"k\">:</span><span class=\"s\">\"text/css\"</span><span class=\"k\">,</span>","            href<span class=\"k\">:</span>me<span class=\"k\">.</span>options<span class=\"k\">.</span>formulaCssUrl <span class=\"k\">||</span> me<span class=\"k\">.</span>options<span class=\"k\">.</span>UEDITOR_HOME_URL <span class=\"k\">+</span> <span class=\"s\">\"third-party/mathquill/mathquill.css\"</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","        utils<span class=\"k\">.</span>loadFile<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">,</span> <span class=\"k\">{</span>","            id<span class=\"k\">:</span><span class=\"s\">\"jquery-1.8.3.min_js\"</span><span class=\"k\">,</span>","            src<span class=\"k\">:</span>me<span class=\"k\">.</span>options<span class=\"k\">.</span>jqueryUrl <span class=\"k\">||</span> me<span class=\"k\">.</span>options<span class=\"k\">.</span>UEDITOR_HOME_URL <span class=\"k\">+</span> <span class=\"s\">\"third-party/mathquill/jquery-1.8.3.min.js\"</span><span class=\"k\">,</span>","            tag<span class=\"k\">:</span><span class=\"s\">\"script\"</span><span class=\"k\">,</span>","            type<span class=\"k\">:</span><span class=\"s\">\"text/javascript\"</span><span class=\"k\">,</span>","            defer<span class=\"k\">:</span><span class=\"s\">\"defer\"</span>","        <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            utils<span class=\"k\">.</span>loadFile<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">,</span> <span class=\"k\">{</span>","                id<span class=\"k\">:</span><span class=\"s\">\"mathquill_js\"</span><span class=\"k\">,</span>","                src<span class=\"k\">:</span>me<span class=\"k\">.</span>options<span class=\"k\">.</span>formulaJsUrl <span class=\"k\">||</span> me<span class=\"k\">.</span>options<span class=\"k\">.</span>UEDITOR_HOME_URL <span class=\"k\">+</span> <span class=\"s\">\"third-party/mathquill/mathquill.min.js\"</span><span class=\"k\">,</span>","                tag<span class=\"k\">:</span><span class=\"s\">\"script\"</span><span class=\"k\">,</span>","                type<span class=\"k\">:</span><span class=\"s\">\"text/javascript\"</span><span class=\"k\">,</span>","                defer<span class=\"k\">:</span><span class=\"s\">\"defer\"</span>","            <span class=\"k\">}</span><span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","","    <span class=\"k\">function</span> addFillChar<span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> previous <span class=\"k\">=</span> node<span class=\"k\">.</span>previousSibling<span class=\"k\">,</span>","            next <span class=\"k\">=</span> node<span class=\"k\">.</span>nextSibling<span class=\"k\">;</span>","","        <span class=\"k\">if</span> <span class=\"k\">(!</span>previous <span class=\"k\">||</span> <span class=\"k\">!</span>domUtils<span class=\"k\">.</span>isFillChar<span class=\"k\">(</span>previous<span class=\"k\">))</span> <span class=\"k\">{</span>","            node<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>document<span class=\"k\">.</span>createTextNode<span class=\"k\">(</span>domUtils<span class=\"k\">.</span>fillChar<span class=\"k\">),</span> node<span class=\"k\">);</span>","        <span class=\"k\">}</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span>next <span class=\"k\">||</span> <span class=\"k\">!</span>domUtils<span class=\"k\">.</span>isFillChar<span class=\"k\">(</span>next<span class=\"k\">))</span> <span class=\"k\">{</span>","            domUtils<span class=\"k\">.</span>insertAfter<span class=\"k\">(</span>node<span class=\"k\">,</span> document<span class=\"k\">.</span>createTextNode<span class=\"k\">(</span>domUtils<span class=\"k\">.</span>fillChar<span class=\"k\">));</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> queryState<span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">try</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> rng <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">();</span>","            <span class=\"k\">var</span> start <span class=\"k\">=</span> filter<span class=\"k\">(</span>rng<span class=\"k\">.</span>startContainer<span class=\"k\">);</span>","            end <span class=\"k\">=</span> filter<span class=\"k\">(</span>rng<span class=\"k\">.</span>endContainer<span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>start <span class=\"k\">&amp;&amp;</span> end <span class=\"k\">&amp;&amp;</span> start <span class=\"k\">==</span> end<span class=\"k\">)</span> <span class=\"k\">{</span>","                addFillChar<span class=\"k\">(</span>start<span class=\"k\">);</span>","                <span class=\"k\">return</span> <span class=\"s\">1</span><span class=\"k\">;</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> <span class=\"s\">0</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        <span class=\"k\">catch</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"s\">0</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"c\">//&#19981;&#38656;&#35201;&#21028;&#26029;highlight&#30340;command&#21015;&#34920;</span>","    me<span class=\"k\">.</span>notNeedmathQuery <span class=\"k\">=</span> <span class=\"k\">{</span>","        help<span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        undo<span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        redo<span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        source<span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        print<span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        searchreplace<span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        fullscreen<span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        autotypeset<span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        pasteplain<span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        preview<span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        insertparagraph<span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        elementpath<span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        formula<span class=\"k\">:</span><span class=\"s\">1</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"c\">//&#23558;queyCommamndState&#37325;&#32622;</span>","    <span class=\"k\">var</span> orgQuery <span class=\"k\">=</span> me<span class=\"k\">.</span>queryCommandState<span class=\"k\">;</span>","    me<span class=\"k\">.</span>queryCommandState <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>cmd<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span>me<span class=\"k\">.</span>notNeedmathQuery<span class=\"k\">[</span>cmd<span class=\"k\">.</span>toLowerCase<span class=\"k\">()]</span> <span class=\"k\">&amp;&amp;</span> queryState<span class=\"k\">.</span>call<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">)</span> <span class=\"k\">==</span> <span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> orgQuery<span class=\"k\">.</span>apply<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> arguments<span class=\"k\">)</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    me<span class=\"k\">.</span>addOutputRule<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>root<span class=\"k\">)</span> <span class=\"k\">{</span>","        utils<span class=\"k\">.</span>each<span class=\"k\">(</span>root<span class=\"k\">.</span>getNodesByTagName<span class=\"k\">(</span><span class=\"s\">'span'</span><span class=\"k\">),</span> <span class=\"k\">function</span> <span class=\"k\">(</span>pi<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> cls<span class=\"k\">;</span>","            <span class=\"k\">if</span> <span class=\"k\">((</span>cls <span class=\"k\">=</span> pi<span class=\"k\">.</span>getAttr<span class=\"k\">(</span><span class=\"s\">'class'</span><span class=\"k\">))</span> <span class=\"k\">&amp;&amp;</span> <span class=\"s\">/mathquill-rendered-math/</span><span class=\"k\">.</span>test<span class=\"k\">(</span>cls<span class=\"k\">))</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> id <span class=\"k\">=</span> pi<span class=\"k\">.</span>getAttr<span class=\"k\">(</span><span class=\"s\">\"formulaid\"</span><span class=\"k\">);</span>","                <span class=\"k\">var</span> txt <span class=\"k\">=</span> me<span class=\"k\">.</span>window<span class=\"k\">.</span>$<span class=\"k\">(</span><span class=\"s\">\"[formulaid=\"</span> <span class=\"k\">+</span> id <span class=\"k\">+</span> <span class=\"s\">\"]\"</span><span class=\"k\">).</span>mathquill<span class=\"k\">(</span><span class=\"s\">\"latex\"</span><span class=\"k\">);</span>","                <span class=\"k\">var</span> span <span class=\"k\">=</span> UE<span class=\"k\">.</span>uNode<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">\"span\"</span><span class=\"k\">);</span>","","                span<span class=\"k\">.</span>setAttr<span class=\"k\">(</span><span class=\"s\">'class'</span><span class=\"k\">,</span> <span class=\"s\">'mathquill-embedded-latex'</span><span class=\"k\">);</span>","                span<span class=\"k\">.</span>setAttr<span class=\"k\">(</span><span class=\"s\">\"formulaid\"</span><span class=\"k\">,</span> id<span class=\"k\">);</span>","                span<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>UE<span class=\"k\">.</span>uNode<span class=\"k\">.</span>createText<span class=\"k\">(</span>txt<span class=\"k\">));</span>","                pi<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>replaceChild<span class=\"k\">(</span>span<span class=\"k\">,</span> pi<span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","","    me<span class=\"k\">.</span>addListener<span class=\"k\">(</span><span class=\"s\">\"aftersetcontent\"</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span>me<span class=\"k\">.</span>window <span class=\"k\">||</span> <span class=\"k\">!</span>me<span class=\"k\">.</span>window<span class=\"k\">.</span>$<span class=\"k\">)</span><span class=\"k\">return</span><span class=\"k\">;</span>","        <span class=\"k\">var</span> list <span class=\"k\">=</span> me<span class=\"k\">.</span>window<span class=\"k\">.</span>$<span class=\"k\">(</span><span class=\"s\">\".mathquill-embedded-latex\"</span><span class=\"k\">),</span> obj <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> len <span class=\"k\">=</span> list<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","            obj<span class=\"k\">[</span>list<span class=\"k\">[</span>i<span class=\"k\">].</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"formulaid\"</span><span class=\"k\">)]</span> <span class=\"k\">=</span> list<span class=\"k\">[</span>i<span class=\"k\">].</span>innerText <span class=\"k\">||</span> list<span class=\"k\">[</span>i<span class=\"k\">].</span>textContent <span class=\"k\">||</span> list<span class=\"k\">[</span>i<span class=\"k\">].</span>nodeValue<span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> attr <span class=\"k\">in</span> obj<span class=\"k\">)</span> <span class=\"k\">{</span>","            me<span class=\"k\">.</span>window<span class=\"k\">.</span>$<span class=\"k\">(</span><span class=\"s\">\"[formulaid=\"</span> <span class=\"k\">+</span> attr <span class=\"k\">+</span> <span class=\"s\">\"]\"</span><span class=\"k\">)</span>","                <span class=\"k\">.</span>html<span class=\"k\">(</span><span class=\"s\">\"\"</span><span class=\"k\">)</span>","                <span class=\"k\">.</span>mathquill<span class=\"k\">(</span><span class=\"s\">\"editable\"</span><span class=\"k\">)</span>","                <span class=\"k\">.</span>mathquill<span class=\"k\">(</span><span class=\"s\">\"write\"</span><span class=\"k\">,</span> obj<span class=\"k\">[</span>attr<span class=\"k\">].</span>replace<span class=\"k\">(</span><span class=\"s\">\"{/}\"</span><span class=\"k\">,</span> <span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">\"</span><span class=\"k\">));</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","","","    me<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">'formula'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","        execCommand<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>cmdName<span class=\"k\">,</span> txt<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> rng <span class=\"k\">=</span> me<span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">();</span>","            <span class=\"k\">var</span> start <span class=\"k\">=</span> filter<span class=\"k\">(</span>rng<span class=\"k\">.</span>startContainer<span class=\"k\">);</span>","            <span class=\"k\">var</span> end <span class=\"k\">=</span> filter<span class=\"k\">(</span>rng<span class=\"k\">.</span>endContainer<span class=\"k\">);</span>","            <span class=\"k\">var</span> id<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>start <span class=\"k\">&amp;&amp;</span> end <span class=\"k\">&amp;&amp;</span> start <span class=\"k\">==</span> end<span class=\"k\">)</span> <span class=\"k\">{</span>","                id <span class=\"k\">=</span> start<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"formulaid\"</span><span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> doc <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">;</span>","                <span class=\"k\">var</span> span <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>createElement<span class=\"k\">(</span>doc<span class=\"k\">,</span> <span class=\"s\">\"span\"</span><span class=\"k\">,</span> <span class=\"k\">{</span>","                    class<span class=\"k\">:</span><span class=\"s\">'mathquill-editable'</span><span class=\"k\">,</span>","                    formulaid<span class=\"k\">:</span>me<span class=\"k\">.</span>_formulaid","                <span class=\"k\">}</span><span class=\"k\">);</span>","                span<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>doc<span class=\"k\">.</span>createTextNode<span class=\"k\">(</span>txt<span class=\"k\">));</span>","                me<span class=\"k\">.</span>execCommand<span class=\"k\">(</span><span class=\"s\">'inserthtml'</span><span class=\"k\">,</span> span<span class=\"k\">.</span>outerHTML<span class=\"k\">);</span>","","                id <span class=\"k\">=</span> me<span class=\"k\">.</span>_formulaid<span class=\"k\">;</span>","                me<span class=\"k\">.</span>window<span class=\"k\">.</span>$<span class=\"k\">(</span><span class=\"s\">\"[formulaid=\"</span> <span class=\"k\">+</span> id<span class=\"k\">+</span> <span class=\"s\">\"]\"</span><span class=\"k\">).</span>html<span class=\"k\">(</span><span class=\"s\">\"\"</span><span class=\"k\">).</span>mathquill<span class=\"k\">(</span><span class=\"s\">'editable'</span><span class=\"k\">);</span>","                me<span class=\"k\">.</span>_formulaid <span class=\"k\">+=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">var</span> selector <span class=\"k\">=</span> <span class=\"s\">\"[formulaid=\"</span> <span class=\"k\">+</span> id <span class=\"k\">+</span> <span class=\"s\">\"]\"</span><span class=\"k\">;</span>","            me<span class=\"k\">.</span>window<span class=\"k\">.</span>$<span class=\"k\">(</span>selector<span class=\"k\">).</span>focus<span class=\"k\">().</span>mathquill<span class=\"k\">(</span><span class=\"s\">\"write\"</span><span class=\"k\">,</span> txt<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">\"{/}\"</span><span class=\"k\">,</span> <span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">\"</span><span class=\"k\">));</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        queryCommandState<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> queryState<span class=\"k\">.</span>call<span class=\"k\">(</span>me<span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"];
_$jscoverage['plugins/formula.js'][8]++;
UE.plugins.formula = (function () {
  _$jscoverage['plugins/formula.js'][9]++;
  var me = this;
  _$jscoverage['plugins/formula.js'][10]++;
  me._formulaid = 0;
  _$jscoverage['plugins/formula.js'][12]++;
  var filter = (function (node) {
  _$jscoverage['plugins/formula.js'][13]++;
  return domUtils.findParent(node, (function (node) {
  _$jscoverage['plugins/formula.js'][14]++;
  return ((node.nodeType == 1) && (node.tagName.toLowerCase() == "span") && domUtils.hasClass(node, "mathquill-editable"));
}), true);
});
  _$jscoverage['plugins/formula.js'][18]++;
  me.addListener("ready", (function () {
  _$jscoverage['plugins/formula.js'][19]++;
  utils.loadFile(me.document, {id: "mathquill_css", tag: "link", rel: "stylesheet", type: "text/css", href: (me.options.formulaCssUrl || (me.options.UEDITOR_HOME_URL + "third-party/mathquill/mathquill.css"))});
  _$jscoverage['plugins/formula.js'][26]++;
  utils.loadFile(me.document, {id: "jquery-1.8.3.min_js", src: (me.options.jqueryUrl || (me.options.UEDITOR_HOME_URL + "third-party/mathquill/jquery-1.8.3.min.js")), tag: "script", type: "text/javascript", defer: "defer"}, (function () {
  _$jscoverage['plugins/formula.js'][33]++;
  utils.loadFile(me.document, {id: "mathquill_js", src: (me.options.formulaJsUrl || (me.options.UEDITOR_HOME_URL + "third-party/mathquill/mathquill.min.js")), tag: "script", type: "text/javascript", defer: "defer"});
}));
}));
  _$jscoverage['plugins/formula.js'][43]++;
  function addFillChar(node) {
    _$jscoverage['plugins/formula.js'][44]++;
    var previous = node.previousSibling, next = node.nextSibling;
    _$jscoverage['plugins/formula.js'][47]++;
    if (((! previous) || (! domUtils.isFillChar(previous)))) {
      _$jscoverage['plugins/formula.js'][48]++;
      node.parentNode.insertBefore(document.createTextNode(domUtils.fillChar), node);
    }
    _$jscoverage['plugins/formula.js'][50]++;
    if (((! next) || (! domUtils.isFillChar(next)))) {
      _$jscoverage['plugins/formula.js'][51]++;
      domUtils.insertAfter(node, document.createTextNode(domUtils.fillChar));
    }
}
  _$jscoverage['plugins/formula.js'][55]++;
  function queryState() {
    _$jscoverage['plugins/formula.js'][56]++;
    try {
      _$jscoverage['plugins/formula.js'][57]++;
      var rng = this.selection.getRange();
      _$jscoverage['plugins/formula.js'][58]++;
      var start = filter(rng.startContainer);
      _$jscoverage['plugins/formula.js'][59]++;
      end = filter(rng.endContainer);
      _$jscoverage['plugins/formula.js'][60]++;
      if ((start && end && (start == end))) {
        _$jscoverage['plugins/formula.js'][61]++;
        addFillChar(start);
        _$jscoverage['plugins/formula.js'][62]++;
        return 1;
      }
      else {
        _$jscoverage['plugins/formula.js'][64]++;
        return 0;
      }
    }
    catch (e) {
      _$jscoverage['plugins/formula.js'][68]++;
      return 0;
    }
}
  _$jscoverage['plugins/formula.js'][73]++;
  me.notNeedmathQuery = {help: 1, undo: 1, redo: 1, source: 1, print: 1, searchreplace: 1, fullscreen: 1, autotypeset: 1, pasteplain: 1, preview: 1, insertparagraph: 1, elementpath: 1, formula: 1};
  _$jscoverage['plugins/formula.js'][90]++;
  var orgQuery = me.queryCommandState;
  _$jscoverage['plugins/formula.js'][91]++;
  me.queryCommandState = (function (cmd) {
  _$jscoverage['plugins/formula.js'][92]++;
  if (((! me.notNeedmathQuery[cmd.toLowerCase()]) && (queryState.call(this) == 1))) {
    _$jscoverage['plugins/formula.js'][93]++;
    return -1;
  }
  _$jscoverage['plugins/formula.js'][95]++;
  return orgQuery.apply(this, arguments);
});
  _$jscoverage['plugins/formula.js'][98]++;
  me.addOutputRule((function (root) {
  _$jscoverage['plugins/formula.js'][99]++;
  utils.each(root.getNodesByTagName("span"), (function (pi) {
  _$jscoverage['plugins/formula.js'][100]++;
  var cls;
  _$jscoverage['plugins/formula.js'][101]++;
  if (((cls = pi.getAttr("class")) && /mathquill-rendered-math/.test(cls))) {
    _$jscoverage['plugins/formula.js'][102]++;
    var id = pi.getAttr("formulaid");
    _$jscoverage['plugins/formula.js'][103]++;
    var txt = me.window.$(("[formulaid=" + id + "]")).mathquill("latex");
    _$jscoverage['plugins/formula.js'][104]++;
    var span = UE.uNode.createElement("span");
    _$jscoverage['plugins/formula.js'][106]++;
    span.setAttr("class", "mathquill-embedded-latex");
    _$jscoverage['plugins/formula.js'][107]++;
    span.setAttr("formulaid", id);
    _$jscoverage['plugins/formula.js'][108]++;
    span.appendChild(UE.uNode.createText(txt));
    _$jscoverage['plugins/formula.js'][109]++;
    pi.parentNode.replaceChild(span, pi);
  }
}));
}));
  _$jscoverage['plugins/formula.js'][114]++;
  me.addListener("aftersetcontent", (function () {
  _$jscoverage['plugins/formula.js'][115]++;
  if (((! me.window) || (! me.window.$))) {
    _$jscoverage['plugins/formula.js'][115]++;
    return;
  }
  _$jscoverage['plugins/formula.js'][116]++;
  var list = me.window.$(".mathquill-embedded-latex"), obj = {};
  _$jscoverage['plugins/formula.js'][117]++;
  for (var i = 0, len = list.length; (i < len); (i++)) {
    _$jscoverage['plugins/formula.js'][118]++;
    obj[list[i].getAttribute("formulaid")] = (list[i].innerText || list[i].textContent || list[i].nodeValue);
}
  _$jscoverage['plugins/formula.js'][120]++;
  for (var attr in obj) {
    _$jscoverage['plugins/formula.js'][121]++;
    me.window.$(("[formulaid=" + attr + "]")).html("").mathquill("editable").mathquill("write", obj[attr].replace("{/}", "\\"));
}
}));
  _$jscoverage['plugins/formula.js'][129]++;
  me.commands.formula = {execCommand: (function (cmdName, txt) {
  _$jscoverage['plugins/formula.js'][131]++;
  var rng = me.selection.getRange();
  _$jscoverage['plugins/formula.js'][132]++;
  var start = filter(rng.startContainer);
  _$jscoverage['plugins/formula.js'][133]++;
  var end = filter(rng.endContainer);
  _$jscoverage['plugins/formula.js'][134]++;
  var id = 0;
  _$jscoverage['plugins/formula.js'][136]++;
  if ((start && end && (start == end))) {
    _$jscoverage['plugins/formula.js'][137]++;
    id = start.getAttribute("formulaid");
  }
  else {
    _$jscoverage['plugins/formula.js'][139]++;
    var doc = me.document;
    _$jscoverage['plugins/formula.js'][140]++;
    var span = domUtils.createElement(doc, "span", {class: "mathquill-editable", formulaid: me._formulaid});
    _$jscoverage['plugins/formula.js'][144]++;
    span.appendChild(doc.createTextNode(txt));
    _$jscoverage['plugins/formula.js'][145]++;
    me.execCommand("inserthtml", span.outerHTML);
    _$jscoverage['plugins/formula.js'][147]++;
    id = me._formulaid;
    _$jscoverage['plugins/formula.js'][148]++;
    me.window.$(("[formulaid=" + id + "]")).html("").mathquill("editable");
    _$jscoverage['plugins/formula.js'][149]++;
    me._formulaid += 1;
  }
  _$jscoverage['plugins/formula.js'][152]++;
  var selector = ("[formulaid=" + id + "]");
  _$jscoverage['plugins/formula.js'][153]++;
  me.window.$(selector).focus().mathquill("write", txt.replace("{/}", "\\"));
}), queryCommandState: (function () {
  _$jscoverage['plugins/formula.js'][156]++;
  return queryState.call(me);
})};
});
