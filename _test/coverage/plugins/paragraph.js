/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['plugins/paragraph.js']) {
  _$jscoverage['plugins/paragraph.js'] = [];
  _$jscoverage['plugins/paragraph.js'][14] = 0;
  _$jscoverage['plugins/paragraph.js'][15] = 0;
  _$jscoverage['plugins/paragraph.js'][20] = 0;
  _$jscoverage['plugins/paragraph.js'][22] = 0;
  _$jscoverage['plugins/paragraph.js'][26] = 0;
  _$jscoverage['plugins/paragraph.js'][27] = 0;
  _$jscoverage['plugins/paragraph.js'][31] = 0;
  _$jscoverage['plugins/paragraph.js'][32] = 0;
  _$jscoverage['plugins/paragraph.js'][33] = 0;
  _$jscoverage['plugins/paragraph.js'][34] = 0;
  _$jscoverage['plugins/paragraph.js'][35] = 0;
  _$jscoverage['plugins/paragraph.js'][36] = 0;
  _$jscoverage['plugins/paragraph.js'][37] = 0;
  _$jscoverage['plugins/paragraph.js'][40] = 0;
  _$jscoverage['plugins/paragraph.js'][42] = 0;
  _$jscoverage['plugins/paragraph.js'][43] = 0;
  _$jscoverage['plugins/paragraph.js'][44] = 0;
  _$jscoverage['plugins/paragraph.js'][45] = 0;
  _$jscoverage['plugins/paragraph.js'][46] = 0;
  _$jscoverage['plugins/paragraph.js'][49] = 0;
  _$jscoverage['plugins/paragraph.js'][51] = 0;
  _$jscoverage['plugins/paragraph.js'][52] = 0;
  _$jscoverage['plugins/paragraph.js'][56] = 0;
  _$jscoverage['plugins/paragraph.js'][58] = 0;
  _$jscoverage['plugins/paragraph.js'][60] = 0;
  _$jscoverage['plugins/paragraph.js'][62] = 0;
  _$jscoverage['plugins/paragraph.js'][63] = 0;
  _$jscoverage['plugins/paragraph.js'][65] = 0;
  _$jscoverage['plugins/paragraph.js'][67] = 0;
  _$jscoverage['plugins/paragraph.js'][68] = 0;
  _$jscoverage['plugins/paragraph.js'][69] = 0;
  _$jscoverage['plugins/paragraph.js'][73] = 0;
  _$jscoverage['plugins/paragraph.js'][74] = 0;
  _$jscoverage['plugins/paragraph.js'][75] = 0;
  _$jscoverage['plugins/paragraph.js'][76] = 0;
  _$jscoverage['plugins/paragraph.js'][78] = 0;
  _$jscoverage['plugins/paragraph.js'][79] = 0;
  _$jscoverage['plugins/paragraph.js'][81] = 0;
  _$jscoverage['plugins/paragraph.js'][85] = 0;
  _$jscoverage['plugins/paragraph.js'][86] = 0;
  _$jscoverage['plugins/paragraph.js'][88] = 0;
  _$jscoverage['plugins/paragraph.js'][92] = 0;
  _$jscoverage['plugins/paragraph.js'][94] = 0;
  _$jscoverage['plugins/paragraph.js'][97] = 0;
  _$jscoverage['plugins/paragraph.js'][99] = 0;
  _$jscoverage['plugins/paragraph.js'][100] = 0;
  _$jscoverage['plugins/paragraph.js'][102] = 0;
  _$jscoverage['plugins/paragraph.js'][104] = 0;
  _$jscoverage['plugins/paragraph.js'][105] = 0;
  _$jscoverage['plugins/paragraph.js'][106] = 0;
  _$jscoverage['plugins/paragraph.js'][108] = 0;
  _$jscoverage['plugins/paragraph.js'][109] = 0;
  _$jscoverage['plugins/paragraph.js'][110] = 0;
  _$jscoverage['plugins/paragraph.js'][111] = 0;
  _$jscoverage['plugins/paragraph.js'][113] = 0;
  _$jscoverage['plugins/paragraph.js'][114] = 0;
  _$jscoverage['plugins/paragraph.js'][115] = 0;
  _$jscoverage['plugins/paragraph.js'][120] = 0;
  _$jscoverage['plugins/paragraph.js'][121] = 0;
  _$jscoverage['plugins/paragraph.js'][122] = 0;
  _$jscoverage['plugins/paragraph.js'][123] = 0;
  _$jscoverage['plugins/paragraph.js'][125] = 0;
  _$jscoverage['plugins/paragraph.js'][127] = 0;
  _$jscoverage['plugins/paragraph.js'][128] = 0;
  _$jscoverage['plugins/paragraph.js'][133] = 0;
  _$jscoverage['plugins/paragraph.js'][134] = 0;
  _$jscoverage['plugins/paragraph.js'][135] = 0;
  _$jscoverage['plugins/paragraph.js'][136] = 0;
  _$jscoverage['plugins/paragraph.js'][140] = 0;
  _$jscoverage['plugins/paragraph.js'][143] = 0;
  _$jscoverage['plugins/paragraph.js'][146] = 0;
  _$jscoverage['plugins/paragraph.js'][147] = 0;
}
_$jscoverage['plugins/paragraph.js'].source = ["<span class=\"c\">///import core</span>","<span class=\"c\">///commands &#26684;&#24335;</span>","<span class=\"c\">///commandsName  Paragraph</span>","<span class=\"c\">///commandsTitle  &#27573;&#33853;&#26684;&#24335;</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#27573;&#33853;&#26679;&#24335;</span>","<span class=\"c\"> * @function</span>","<span class=\"c\"> * @name baidu.editor.execCommand</span>","<span class=\"c\"> * @param   {String}   cmdName     paragraph&#25554;&#20837;&#27573;&#33853;&#25191;&#34892;&#21629;&#20196;</span>","<span class=\"c\"> * @param   {String}   style               &#26631;&#31614;&#20540;&#20026;&#65306;'p', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'</span>","<span class=\"c\"> * @param   {String}   attrs               &#26631;&#31614;&#30340;&#23646;&#24615;</span>","<span class=\"c\"> * @author zhanyi</span>","<span class=\"c\"> */</span>","UE<span class=\"k\">.</span>plugins<span class=\"k\">[</span><span class=\"s\">'paragraph'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> me <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">,</span>","        block <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>isBlockElm<span class=\"k\">,</span>","        notExchange <span class=\"k\">=</span> <span class=\"k\">[</span><span class=\"s\">'TD'</span><span class=\"k\">,</span><span class=\"s\">'LI'</span><span class=\"k\">,</span><span class=\"s\">'PRE'</span><span class=\"k\">],</span>","","        doParagraph <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>range<span class=\"k\">,</span>style<span class=\"k\">,</span>attrs<span class=\"k\">,</span>sourceCmdName<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">var</span> bookmark <span class=\"k\">=</span> range<span class=\"k\">.</span>createBookmark<span class=\"k\">(),</span>","                filterFn <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> node <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span>   node<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">1</span> <span class=\"k\">?</span> node<span class=\"k\">.</span>tagName<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">!=</span> <span class=\"s\">'br'</span> <span class=\"k\">&amp;&amp;</span>  <span class=\"k\">!</span>domUtils<span class=\"k\">.</span>isBookmarkNode<span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">:</span> <span class=\"k\">!</span>domUtils<span class=\"k\">.</span>isWhitespace<span class=\"k\">(</span> node <span class=\"k\">);</span>","                <span class=\"k\">}</span><span class=\"k\">,</span>","                para<span class=\"k\">;</span>","","            range<span class=\"k\">.</span>enlarge<span class=\"k\">(</span> <span class=\"k\">true</span> <span class=\"k\">);</span>","            <span class=\"k\">var</span> bookmark2 <span class=\"k\">=</span> range<span class=\"k\">.</span>createBookmark<span class=\"k\">(),</span>","                current <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getNextDomNode<span class=\"k\">(</span> bookmark2<span class=\"k\">.</span>start<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">,</span> filterFn <span class=\"k\">),</span>","                tmpRange <span class=\"k\">=</span> range<span class=\"k\">.</span>cloneRange<span class=\"k\">(),</span>","                tmpNode<span class=\"k\">;</span>","            <span class=\"k\">while</span> <span class=\"k\">(</span> current <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!(</span>domUtils<span class=\"k\">.</span>getPosition<span class=\"k\">(</span> current<span class=\"k\">,</span> bookmark2<span class=\"k\">.</span>end <span class=\"k\">)</span> <span class=\"k\">&amp;</span> domUtils<span class=\"k\">.</span>POSITION_FOLLOWING<span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> current<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">3</span> <span class=\"k\">||</span> <span class=\"k\">!</span>block<span class=\"k\">(</span> current <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    tmpRange<span class=\"k\">.</span>setStartBefore<span class=\"k\">(</span> current <span class=\"k\">);</span>","                    <span class=\"k\">while</span> <span class=\"k\">(</span> current <span class=\"k\">&amp;&amp;</span> current <span class=\"k\">!==</span> bookmark2<span class=\"k\">.</span>end <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>block<span class=\"k\">(</span> current <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        tmpNode <span class=\"k\">=</span> current<span class=\"k\">;</span>","                        current <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getNextDomNode<span class=\"k\">(</span> current<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> node <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">return</span> <span class=\"k\">!</span>block<span class=\"k\">(</span> node <span class=\"k\">);</span>","                        <span class=\"k\">}</span> <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                    tmpRange<span class=\"k\">.</span>setEndAfter<span class=\"k\">(</span> tmpNode <span class=\"k\">);</span>","                    ","                    para <span class=\"k\">=</span> range<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span> style <span class=\"k\">);</span>","                    <span class=\"k\">if</span><span class=\"k\">(</span>attrs<span class=\"k\">)</span><span class=\"k\">{</span>","                        domUtils<span class=\"k\">.</span>setAttributes<span class=\"k\">(</span>para<span class=\"k\">,</span>attrs<span class=\"k\">);</span>","                        <span class=\"k\">if</span><span class=\"k\">(</span>sourceCmdName <span class=\"k\">&amp;&amp;</span> sourceCmdName <span class=\"k\">==</span> <span class=\"s\">'customstyle'</span> <span class=\"k\">&amp;&amp;</span> attrs<span class=\"k\">.</span>style<span class=\"k\">)</span><span class=\"k\">{</span>","                            para<span class=\"k\">.</span>style<span class=\"k\">.</span>cssText <span class=\"k\">=</span> attrs<span class=\"k\">.</span>style<span class=\"k\">;</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","                    para<span class=\"k\">.</span>appendChild<span class=\"k\">(</span> tmpRange<span class=\"k\">.</span>extractContents<span class=\"k\">()</span> <span class=\"k\">);</span>","                    <span class=\"c\">//&#38656;&#35201;&#20869;&#23481;&#21344;&#20301;</span>","                    <span class=\"k\">if</span><span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isEmptyNode<span class=\"k\">(</span>para<span class=\"k\">))</span><span class=\"k\">{</span>","                        domUtils<span class=\"k\">.</span>fillChar<span class=\"k\">(</span>range<span class=\"k\">.</span>document<span class=\"k\">,</span>para<span class=\"k\">);</span>","                        ","                    <span class=\"k\">}</span>","","                    tmpRange<span class=\"k\">.</span>insertNode<span class=\"k\">(</span> para <span class=\"k\">);</span>","","                    <span class=\"k\">var</span> parent <span class=\"k\">=</span> para<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","                    <span class=\"c\">//&#22914;&#26524;para&#19978;&#19968;&#32423;&#26159;&#19968;&#20010;block&#20803;&#32032;&#19988;&#19981;&#26159;body,td&#23601;&#21024;&#38500;&#23427;</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> block<span class=\"k\">(</span> parent <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>domUtils<span class=\"k\">.</span>isBody<span class=\"k\">(</span> para<span class=\"k\">.</span>parentNode <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> utils<span class=\"k\">.</span>indexOf<span class=\"k\">(</span>notExchange<span class=\"k\">,</span>parent<span class=\"k\">.</span>tagName<span class=\"k\">)==-</span><span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"c\">//&#23384;&#20648;dir,style</span>","                        <span class=\"k\">if</span><span class=\"k\">(!(</span>sourceCmdName <span class=\"k\">&amp;&amp;</span> sourceCmdName <span class=\"k\">==</span> <span class=\"s\">'customstyle'</span><span class=\"k\">))</span><span class=\"k\">{</span>","                            parent<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">'dir'</span><span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> para<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">'dir'</span><span class=\"k\">,</span>parent<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">'dir'</span><span class=\"k\">));</span>","                            <span class=\"c\">//trace:1070</span>","                            parent<span class=\"k\">.</span>style<span class=\"k\">.</span>cssText <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>para<span class=\"k\">.</span>style<span class=\"k\">.</span>cssText <span class=\"k\">=</span> parent<span class=\"k\">.</span>style<span class=\"k\">.</span>cssText <span class=\"k\">+</span> <span class=\"s\">';'</span> <span class=\"k\">+</span> para<span class=\"k\">.</span>style<span class=\"k\">.</span>cssText<span class=\"k\">);</span>","                            <span class=\"c\">//trace:1030</span>","                            parent<span class=\"k\">.</span>style<span class=\"k\">.</span>textAlign <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>para<span class=\"k\">.</span>style<span class=\"k\">.</span>textAlign <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>para<span class=\"k\">.</span>style<span class=\"k\">.</span>textAlign <span class=\"k\">=</span> parent<span class=\"k\">.</span>style<span class=\"k\">.</span>textAlign<span class=\"k\">);</span>","                            parent<span class=\"k\">.</span>style<span class=\"k\">.</span>textIndent <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>para<span class=\"k\">.</span>style<span class=\"k\">.</span>textIndent <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>para<span class=\"k\">.</span>style<span class=\"k\">.</span>textIndent <span class=\"k\">=</span> parent<span class=\"k\">.</span>style<span class=\"k\">.</span>textIndent<span class=\"k\">);</span>","                            parent<span class=\"k\">.</span>style<span class=\"k\">.</span>padding <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>para<span class=\"k\">.</span>style<span class=\"k\">.</span>padding <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>para<span class=\"k\">.</span>style<span class=\"k\">.</span>padding <span class=\"k\">=</span> parent<span class=\"k\">.</span>style<span class=\"k\">.</span>padding<span class=\"k\">);</span>","                        <span class=\"k\">}</span>","","                        <span class=\"c\">//trace:1706 &#36873;&#25321;&#30340;&#23601;&#26159;h1-6&#35201;&#21024;&#38500;</span>","                        <span class=\"k\">if</span><span class=\"k\">(</span>attrs <span class=\"k\">&amp;&amp;</span> <span class=\"s\">/h\\d/i</span><span class=\"k\">.</span>test<span class=\"k\">(</span>parent<span class=\"k\">.</span>tagName<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span><span class=\"s\">/h\\d/i</span><span class=\"k\">.</span>test<span class=\"k\">(</span>para<span class=\"k\">.</span>tagName<span class=\"k\">)</span> <span class=\"k\">)</span><span class=\"k\">{</span>","                            domUtils<span class=\"k\">.</span>setAttributes<span class=\"k\">(</span>parent<span class=\"k\">,</span>attrs<span class=\"k\">);</span>","                            <span class=\"k\">if</span><span class=\"k\">(</span>sourceCmdName <span class=\"k\">&amp;&amp;</span> sourceCmdName <span class=\"k\">==</span> <span class=\"s\">'customstyle'</span> <span class=\"k\">&amp;&amp;</span> attrs<span class=\"k\">.</span>style<span class=\"k\">)</span><span class=\"k\">{</span>","                                parent<span class=\"k\">.</span>style<span class=\"k\">.</span>cssText <span class=\"k\">=</span> attrs<span class=\"k\">.</span>style<span class=\"k\">;</span>","                            <span class=\"k\">}</span>","                            domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>para<span class=\"k\">,</span><span class=\"k\">true</span><span class=\"k\">);</span>","                            para <span class=\"k\">=</span> parent<span class=\"k\">;</span>","                        <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","                            domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span> para<span class=\"k\">.</span>parentNode<span class=\"k\">,</span> <span class=\"k\">true</span> <span class=\"k\">);</span>","                        <span class=\"k\">}</span>","","                    <span class=\"k\">}</span>","                    <span class=\"k\">if</span><span class=\"k\">(</span>  utils<span class=\"k\">.</span>indexOf<span class=\"k\">(</span>notExchange<span class=\"k\">,</span>parent<span class=\"k\">.</span>tagName<span class=\"k\">)!=-</span><span class=\"s\">1</span><span class=\"k\">)</span><span class=\"k\">{</span>","                        current <span class=\"k\">=</span> parent<span class=\"k\">;</span>","                    <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","                       current <span class=\"k\">=</span> para<span class=\"k\">;</span>","                    <span class=\"k\">}</span>","","","                    current <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getNextDomNode<span class=\"k\">(</span> current<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">,</span> filterFn <span class=\"k\">);</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    current <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getNextDomNode<span class=\"k\">(</span> current<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">,</span> filterFn <span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","            <span class=\"k\">return</span> range<span class=\"k\">.</span>moveToBookmark<span class=\"k\">(</span> bookmark2 <span class=\"k\">).</span>moveToBookmark<span class=\"k\">(</span> bookmark <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","    me<span class=\"k\">.</span>setOpt<span class=\"k\">(</span><span class=\"s\">'paragraph'</span><span class=\"k\">,</span><span class=\"k\">{</span><span class=\"s\">'p'</span><span class=\"k\">:</span><span class=\"s\">''</span><span class=\"k\">,</span> <span class=\"s\">'h1'</span><span class=\"k\">:</span><span class=\"s\">''</span><span class=\"k\">,</span> <span class=\"s\">'h2'</span><span class=\"k\">:</span><span class=\"s\">''</span><span class=\"k\">,</span> <span class=\"s\">'h3'</span><span class=\"k\">:</span><span class=\"s\">''</span><span class=\"k\">,</span> <span class=\"s\">'h4'</span><span class=\"k\">:</span><span class=\"s\">''</span><span class=\"k\">,</span> <span class=\"s\">'h5'</span><span class=\"k\">:</span><span class=\"s\">''</span><span class=\"k\">,</span> <span class=\"s\">'h6'</span><span class=\"k\">:</span><span class=\"s\">''</span><span class=\"k\">}</span><span class=\"k\">);</span>","    me<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">'paragraph'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","        execCommand <span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> cmdName<span class=\"k\">,</span> style<span class=\"k\">,</span>attrs<span class=\"k\">,</span>sourceCmdName <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> range <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">();</span>","             <span class=\"c\">//&#38381;&#21512;&#26102;&#21333;&#29420;&#22788;&#29702;</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>range<span class=\"k\">.</span>collapsed<span class=\"k\">)</span><span class=\"k\">{</span>","                <span class=\"k\">var</span> txt <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>document<span class=\"k\">.</span>createTextNode<span class=\"k\">(</span><span class=\"s\">'p'</span><span class=\"k\">);</span>","                range<span class=\"k\">.</span>insertNode<span class=\"k\">(</span>txt<span class=\"k\">);</span>","                <span class=\"c\">//&#21435;&#25481;&#20887;&#20313;&#30340;fillchar</span>","                <span class=\"k\">if</span><span class=\"k\">(</span>browser<span class=\"k\">.</span>ie<span class=\"k\">)</span><span class=\"k\">{</span>","                    <span class=\"k\">var</span> node <span class=\"k\">=</span> txt<span class=\"k\">.</span>previousSibling<span class=\"k\">;</span>","                    <span class=\"k\">if</span><span class=\"k\">(</span>node <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>isWhitespace<span class=\"k\">(</span>node<span class=\"k\">))</span><span class=\"k\">{</span>","                        domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>node<span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                    node <span class=\"k\">=</span> txt<span class=\"k\">.</span>nextSibling<span class=\"k\">;</span>","                    <span class=\"k\">if</span><span class=\"k\">(</span>node <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>isWhitespace<span class=\"k\">(</span>node<span class=\"k\">))</span><span class=\"k\">{</span>","                        domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>node<span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","","            <span class=\"k\">}</span>","            range <span class=\"k\">=</span> doParagraph<span class=\"k\">(</span>range<span class=\"k\">,</span>style<span class=\"k\">,</span>attrs<span class=\"k\">,</span>sourceCmdName<span class=\"k\">);</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>txt<span class=\"k\">)</span><span class=\"k\">{</span>","                range<span class=\"k\">.</span>setStartBefore<span class=\"k\">(</span>txt<span class=\"k\">).</span>collapse<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","                pN <span class=\"k\">=</span> txt<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","","                domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>txt<span class=\"k\">);</span>","","                <span class=\"k\">if</span><span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isBlockElm<span class=\"k\">(</span>pN<span class=\"k\">)&amp;&amp;</span>domUtils<span class=\"k\">.</span>isEmptyNode<span class=\"k\">(</span>pN<span class=\"k\">))</span><span class=\"k\">{</span>","                    domUtils<span class=\"k\">.</span>fillNode<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>document<span class=\"k\">,</span>pN<span class=\"k\">);</span>","                <span class=\"k\">}</span>","","            <span class=\"k\">}</span>","","            <span class=\"k\">if</span><span class=\"k\">(</span>browser<span class=\"k\">.</span>gecko <span class=\"k\">&amp;&amp;</span> range<span class=\"k\">.</span>collapsed <span class=\"k\">&amp;&amp;</span> range<span class=\"k\">.</span>startContainer<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">1</span><span class=\"k\">)</span><span class=\"k\">{</span>","                <span class=\"k\">var</span> child <span class=\"k\">=</span> range<span class=\"k\">.</span>startContainer<span class=\"k\">.</span>childNodes<span class=\"k\">[</span>range<span class=\"k\">.</span>startOffset<span class=\"k\">];</span>","                <span class=\"k\">if</span><span class=\"k\">(</span>child <span class=\"k\">&amp;&amp;</span> child<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> child<span class=\"k\">.</span>tagName<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">==</span> style<span class=\"k\">)</span><span class=\"k\">{</span>","                    range<span class=\"k\">.</span>setStart<span class=\"k\">(</span>child<span class=\"k\">,</span><span class=\"s\">0</span><span class=\"k\">).</span>collapse<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","            <span class=\"c\">//trace:1097 &#21407;&#26469;&#26377;true&#65292;&#21407;&#22240;&#24536;&#20102;&#65292;&#20294;&#21435;&#20102;&#23601;&#19981;&#33021;&#28165;&#38500;&#22810;&#20313;&#30340;&#21344;&#20301;&#31526;&#20102;</span>","            range<span class=\"k\">.</span>select<span class=\"k\">();</span>","","","            <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        queryCommandValue <span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> node <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>filterNodeList<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getStartElementPath<span class=\"k\">(),</span><span class=\"s\">'p h1 h2 h3 h4 h5 h6'</span><span class=\"k\">);</span>","            <span class=\"k\">return</span> node <span class=\"k\">?</span> node<span class=\"k\">.</span>tagName<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">:</span> <span class=\"s\">''</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"];
_$jscoverage['plugins/paragraph.js'][14]++;
UE.plugins.paragraph = (function () {
  _$jscoverage['plugins/paragraph.js'][15]++;
  var me = this, block = domUtils.isBlockElm, notExchange = ["TD", "LI", "PRE"], doParagraph = (function (range, style, attrs, sourceCmdName) {
  _$jscoverage['plugins/paragraph.js'][20]++;
  var bookmark = range.createBookmark(), filterFn = (function (node) {
  _$jscoverage['plugins/paragraph.js'][22]++;
  return ((node.nodeType == 1)? ((node.tagName.toLowerCase() != "br") && (! domUtils.isBookmarkNode(node))): (! domUtils.isWhitespace(node)));
}), para;
  _$jscoverage['plugins/paragraph.js'][26]++;
  range.enlarge(true);
  _$jscoverage['plugins/paragraph.js'][27]++;
  var bookmark2 = range.createBookmark(), current = domUtils.getNextDomNode(bookmark2.start, false, filterFn), tmpRange = range.cloneRange(), tmpNode;
  _$jscoverage['plugins/paragraph.js'][31]++;
  while ((current && (! (domUtils.getPosition(current, bookmark2.end) & domUtils.POSITION_FOLLOWING)))) {
    _$jscoverage['plugins/paragraph.js'][32]++;
    if (((current.nodeType == 3) || (! block(current)))) {
      _$jscoverage['plugins/paragraph.js'][33]++;
      tmpRange.setStartBefore(current);
      _$jscoverage['plugins/paragraph.js'][34]++;
      while ((current && (current !== bookmark2.end) && (! block(current)))) {
        _$jscoverage['plugins/paragraph.js'][35]++;
        tmpNode = current;
        _$jscoverage['plugins/paragraph.js'][36]++;
        current = domUtils.getNextDomNode(current, false, null, (function (node) {
  _$jscoverage['plugins/paragraph.js'][37]++;
  return (! block(node));
}));
}
      _$jscoverage['plugins/paragraph.js'][40]++;
      tmpRange.setEndAfter(tmpNode);
      _$jscoverage['plugins/paragraph.js'][42]++;
      para = range.document.createElement(style);
      _$jscoverage['plugins/paragraph.js'][43]++;
      if (attrs) {
        _$jscoverage['plugins/paragraph.js'][44]++;
        domUtils.setAttributes(para, attrs);
        _$jscoverage['plugins/paragraph.js'][45]++;
        if ((sourceCmdName && (sourceCmdName == "customstyle") && attrs.style)) {
          _$jscoverage['plugins/paragraph.js'][46]++;
          para.style.cssText = attrs.style;
        }
      }
      _$jscoverage['plugins/paragraph.js'][49]++;
      para.appendChild(tmpRange.extractContents());
      _$jscoverage['plugins/paragraph.js'][51]++;
      if (domUtils.isEmptyNode(para)) {
        _$jscoverage['plugins/paragraph.js'][52]++;
        domUtils.fillChar(range.document, para);
      }
      _$jscoverage['plugins/paragraph.js'][56]++;
      tmpRange.insertNode(para);
      _$jscoverage['plugins/paragraph.js'][58]++;
      var parent = para.parentNode;
      _$jscoverage['plugins/paragraph.js'][60]++;
      if ((block(parent) && (! domUtils.isBody(para.parentNode)) && (utils.indexOf(notExchange, parent.tagName) == -1))) {
        _$jscoverage['plugins/paragraph.js'][62]++;
        if ((! (sourceCmdName && (sourceCmdName == "customstyle")))) {
          _$jscoverage['plugins/paragraph.js'][63]++;
          (parent.getAttribute("dir") && para.setAttribute("dir", parent.getAttribute("dir")));
          _$jscoverage['plugins/paragraph.js'][65]++;
          (parent.style.cssText && (para.style.cssText = (parent.style.cssText + ";" + para.style.cssText)));
          _$jscoverage['plugins/paragraph.js'][67]++;
          (parent.style.textAlign && (! para.style.textAlign) && (para.style.textAlign = parent.style.textAlign));
          _$jscoverage['plugins/paragraph.js'][68]++;
          (parent.style.textIndent && (! para.style.textIndent) && (para.style.textIndent = parent.style.textIndent));
          _$jscoverage['plugins/paragraph.js'][69]++;
          (parent.style.padding && (! para.style.padding) && (para.style.padding = parent.style.padding));
        }
        _$jscoverage['plugins/paragraph.js'][73]++;
        if ((attrs && /h\d/i.test(parent.tagName) && (! /h\d/i.test(para.tagName)))) {
          _$jscoverage['plugins/paragraph.js'][74]++;
          domUtils.setAttributes(parent, attrs);
          _$jscoverage['plugins/paragraph.js'][75]++;
          if ((sourceCmdName && (sourceCmdName == "customstyle") && attrs.style)) {
            _$jscoverage['plugins/paragraph.js'][76]++;
            parent.style.cssText = attrs.style;
          }
          _$jscoverage['plugins/paragraph.js'][78]++;
          domUtils.remove(para, true);
          _$jscoverage['plugins/paragraph.js'][79]++;
          para = parent;
        }
        else {
          _$jscoverage['plugins/paragraph.js'][81]++;
          domUtils.remove(para.parentNode, true);
        }
      }
      _$jscoverage['plugins/paragraph.js'][85]++;
      if ((utils.indexOf(notExchange, parent.tagName) != -1)) {
        _$jscoverage['plugins/paragraph.js'][86]++;
        current = parent;
      }
      else {
        _$jscoverage['plugins/paragraph.js'][88]++;
        current = para;
      }
      _$jscoverage['plugins/paragraph.js'][92]++;
      current = domUtils.getNextDomNode(current, false, filterFn);
    }
    else {
      _$jscoverage['plugins/paragraph.js'][94]++;
      current = domUtils.getNextDomNode(current, true, filterFn);
    }
}
  _$jscoverage['plugins/paragraph.js'][97]++;
  return range.moveToBookmark(bookmark2).moveToBookmark(bookmark);
});
  _$jscoverage['plugins/paragraph.js'][99]++;
  me.setOpt("paragraph", {"p": "", "h1": "", "h2": "", "h3": "", "h4": "", "h5": "", "h6": ""});
  _$jscoverage['plugins/paragraph.js'][100]++;
  me.commands.paragraph = {execCommand: (function (cmdName, style, attrs, sourceCmdName) {
  _$jscoverage['plugins/paragraph.js'][102]++;
  var range = this.selection.getRange();
  _$jscoverage['plugins/paragraph.js'][104]++;
  if (range.collapsed) {
    _$jscoverage['plugins/paragraph.js'][105]++;
    var txt = this.document.createTextNode("p");
    _$jscoverage['plugins/paragraph.js'][106]++;
    range.insertNode(txt);
    _$jscoverage['plugins/paragraph.js'][108]++;
    if (browser.ie) {
      _$jscoverage['plugins/paragraph.js'][109]++;
      var node = txt.previousSibling;
      _$jscoverage['plugins/paragraph.js'][110]++;
      if ((node && domUtils.isWhitespace(node))) {
        _$jscoverage['plugins/paragraph.js'][111]++;
        domUtils.remove(node);
      }
      _$jscoverage['plugins/paragraph.js'][113]++;
      node = txt.nextSibling;
      _$jscoverage['plugins/paragraph.js'][114]++;
      if ((node && domUtils.isWhitespace(node))) {
        _$jscoverage['plugins/paragraph.js'][115]++;
        domUtils.remove(node);
      }
    }
  }
  _$jscoverage['plugins/paragraph.js'][120]++;
  range = doParagraph(range, style, attrs, sourceCmdName);
  _$jscoverage['plugins/paragraph.js'][121]++;
  if (txt) {
    _$jscoverage['plugins/paragraph.js'][122]++;
    range.setStartBefore(txt).collapse(true);
    _$jscoverage['plugins/paragraph.js'][123]++;
    pN = txt.parentNode;
    _$jscoverage['plugins/paragraph.js'][125]++;
    domUtils.remove(txt);
    _$jscoverage['plugins/paragraph.js'][127]++;
    if ((domUtils.isBlockElm(pN) && domUtils.isEmptyNode(pN))) {
      _$jscoverage['plugins/paragraph.js'][128]++;
      domUtils.fillNode(this.document, pN);
    }
  }
  _$jscoverage['plugins/paragraph.js'][133]++;
  if ((browser.gecko && range.collapsed && (range.startContainer.nodeType == 1))) {
    _$jscoverage['plugins/paragraph.js'][134]++;
    var child = range.startContainer.childNodes[range.startOffset];
    _$jscoverage['plugins/paragraph.js'][135]++;
    if ((child && (child.nodeType == 1) && (child.tagName.toLowerCase() == style))) {
      _$jscoverage['plugins/paragraph.js'][136]++;
      range.setStart(child, 0).collapse(true);
    }
  }
  _$jscoverage['plugins/paragraph.js'][140]++;
  range.select();
  _$jscoverage['plugins/paragraph.js'][143]++;
  return true;
}), queryCommandValue: (function () {
  _$jscoverage['plugins/paragraph.js'][146]++;
  var node = domUtils.filterNodeList(this.selection.getStartElementPath(), "p h1 h2 h3 h4 h5 h6");
  _$jscoverage['plugins/paragraph.js'][147]++;
  return (node? node.tagName.toLowerCase(): "");
})};
});
