/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['core/utils.js']) {
  _$jscoverage['core/utils.js'] = [];
  _$jscoverage['core/utils.js'][8] = 0;
  _$jscoverage['core/utils.js'][28] = 0;
  _$jscoverage['core/utils.js'][29] = 0;
  _$jscoverage['core/utils.js'][30] = 0;
  _$jscoverage['core/utils.js'][31] = 0;
  _$jscoverage['core/utils.js'][32] = 0;
  _$jscoverage['core/utils.js'][35] = 0;
  _$jscoverage['core/utils.js'][36] = 0;
  _$jscoverage['core/utils.js'][37] = 0;
  _$jscoverage['core/utils.js'][38] = 0;
  _$jscoverage['core/utils.js'][45] = 0;
  _$jscoverage['core/utils.js'][46] = 0;
  _$jscoverage['core/utils.js'][47] = 0;
  _$jscoverage['core/utils.js'][48] = 0;
  _$jscoverage['core/utils.js'][49] = 0;
  _$jscoverage['core/utils.js'][58] = 0;
  _$jscoverage['core/utils.js'][59] = 0;
  _$jscoverage['core/utils.js'][60] = 0;
  _$jscoverage['core/utils.js'][61] = 0;
  _$jscoverage['core/utils.js'][65] = 0;
  _$jscoverage['core/utils.js'][68] = 0;
  _$jscoverage['core/utils.js'][69] = 0;
  _$jscoverage['core/utils.js'][70] = 0;
  _$jscoverage['core/utils.js'][71] = 0;
  _$jscoverage['core/utils.js'][72] = 0;
  _$jscoverage['core/utils.js'][73] = 0;
  _$jscoverage['core/utils.js'][77] = 0;
  _$jscoverage['core/utils.js'][100] = 0;
  _$jscoverage['core/utils.js'][102] = 0;
  _$jscoverage['core/utils.js'][103] = 0;
  _$jscoverage['core/utils.js'][104] = 0;
  _$jscoverage['core/utils.js'][113] = 0;
  _$jscoverage['core/utils.js'][114] = 0;
  _$jscoverage['core/utils.js'][137] = 0;
  _$jscoverage['core/utils.js'][138] = 0;
  _$jscoverage['core/utils.js'][139] = 0;
  _$jscoverage['core/utils.js'][140] = 0;
  _$jscoverage['core/utils.js'][142] = 0;
  _$jscoverage['core/utils.js'][153] = 0;
  _$jscoverage['core/utils.js'][154] = 0;
  _$jscoverage['core/utils.js'][155] = 0;
  _$jscoverage['core/utils.js'][156] = 0;
  _$jscoverage['core/utils.js'][157] = 0;
  _$jscoverage['core/utils.js'][158] = 0;
  _$jscoverage['core/utils.js'][161] = 0;
  _$jscoverage['core/utils.js'][170] = 0;
  _$jscoverage['core/utils.js'][171] = 0;
  _$jscoverage['core/utils.js'][172] = 0;
  _$jscoverage['core/utils.js'][173] = 0;
  _$jscoverage['core/utils.js'][184] = 0;
  _$jscoverage['core/utils.js'][193] = 0;
  _$jscoverage['core/utils.js'][194] = 0;
  _$jscoverage['core/utils.js'][195] = 0;
  _$jscoverage['core/utils.js'][196] = 0;
  _$jscoverage['core/utils.js'][198] = 0;
  _$jscoverage['core/utils.js'][212] = 0;
  _$jscoverage['core/utils.js'][213] = 0;
  _$jscoverage['core/utils.js'][214] = 0;
  _$jscoverage['core/utils.js'][216] = 0;
  _$jscoverage['core/utils.js'][232] = 0;
  _$jscoverage['core/utils.js'][233] = 0;
  _$jscoverage['core/utils.js'][247] = 0;
  _$jscoverage['core/utils.js'][252] = 0;
  _$jscoverage['core/utils.js'][253] = 0;
  _$jscoverage['core/utils.js'][254] = 0;
  _$jscoverage['core/utils.js'][275] = 0;
  _$jscoverage['core/utils.js'][277] = 0;
  _$jscoverage['core/utils.js'][278] = 0;
  _$jscoverage['core/utils.js'][279] = 0;
  _$jscoverage['core/utils.js'][280] = 0;
  _$jscoverage['core/utils.js'][281] = 0;
  _$jscoverage['core/utils.js'][285] = 0;
  _$jscoverage['core/utils.js'][290] = 0;
  _$jscoverage['core/utils.js'][291] = 0;
  _$jscoverage['core/utils.js'][292] = 0;
  _$jscoverage['core/utils.js'][293] = 0;
  _$jscoverage['core/utils.js'][294] = 0;
  _$jscoverage['core/utils.js'][296] = 0;
  _$jscoverage['core/utils.js'][298] = 0;
  _$jscoverage['core/utils.js'][300] = 0;
  _$jscoverage['core/utils.js'][305] = 0;
  _$jscoverage['core/utils.js'][306] = 0;
  _$jscoverage['core/utils.js'][307] = 0;
  _$jscoverage['core/utils.js'][308] = 0;
  _$jscoverage['core/utils.js'][309] = 0;
  _$jscoverage['core/utils.js'][311] = 0;
  _$jscoverage['core/utils.js'][312] = 0;
  _$jscoverage['core/utils.js'][314] = 0;
  _$jscoverage['core/utils.js'][315] = 0;
  _$jscoverage['core/utils.js'][317] = 0;
  _$jscoverage['core/utils.js'][318] = 0;
  _$jscoverage['core/utils.js'][319] = 0;
  _$jscoverage['core/utils.js'][320] = 0;
  _$jscoverage['core/utils.js'][322] = 0;
  _$jscoverage['core/utils.js'][323] = 0;
  _$jscoverage['core/utils.js'][324] = 0;
  _$jscoverage['core/utils.js'][325] = 0;
  _$jscoverage['core/utils.js'][326] = 0;
  _$jscoverage['core/utils.js'][327] = 0;
  _$jscoverage['core/utils.js'][328] = 0;
  _$jscoverage['core/utils.js'][331] = 0;
  _$jscoverage['core/utils.js'][334] = 0;
  _$jscoverage['core/utils.js'][335] = 0;
  _$jscoverage['core/utils.js'][337] = 0;
  _$jscoverage['core/utils.js'][350] = 0;
  _$jscoverage['core/utils.js'][351] = 0;
  _$jscoverage['core/utils.js'][352] = 0;
  _$jscoverage['core/utils.js'][353] = 0;
  _$jscoverage['core/utils.js'][364] = 0;
  _$jscoverage['core/utils.js'][365] = 0;
  _$jscoverage['core/utils.js'][366] = 0;
  _$jscoverage['core/utils.js'][367] = 0;
  _$jscoverage['core/utils.js'][368] = 0;
  _$jscoverage['core/utils.js'][369] = 0;
  _$jscoverage['core/utils.js'][370] = 0;
  _$jscoverage['core/utils.js'][371] = 0;
  _$jscoverage['core/utils.js'][373] = 0;
  _$jscoverage['core/utils.js'][375] = 0;
  _$jscoverage['core/utils.js'][384] = 0;
  _$jscoverage['core/utils.js'][385] = 0;
  _$jscoverage['core/utils.js'][386] = 0;
  _$jscoverage['core/utils.js'][387] = 0;
  _$jscoverage['core/utils.js'][389] = 0;
  _$jscoverage['core/utils.js'][390] = 0;
  _$jscoverage['core/utils.js'][391] = 0;
  _$jscoverage['core/utils.js'][393] = 0;
  _$jscoverage['core/utils.js'][394] = 0;
  _$jscoverage['core/utils.js'][395] = 0;
  _$jscoverage['core/utils.js'][397] = 0;
  _$jscoverage['core/utils.js'][400] = 0;
  _$jscoverage['core/utils.js'][403] = 0;
  _$jscoverage['core/utils.js'][404] = 0;
  _$jscoverage['core/utils.js'][405] = 0;
  _$jscoverage['core/utils.js'][407] = 0;
  _$jscoverage['core/utils.js'][408] = 0;
  _$jscoverage['core/utils.js'][409] = 0;
  _$jscoverage['core/utils.js'][410] = 0;
  _$jscoverage['core/utils.js'][413] = 0;
  _$jscoverage['core/utils.js'][418] = 0;
  _$jscoverage['core/utils.js'][421] = 0;
  _$jscoverage['core/utils.js'][422] = 0;
  _$jscoverage['core/utils.js'][424] = 0;
  _$jscoverage['core/utils.js'][434] = 0;
  _$jscoverage['core/utils.js'][435] = 0;
  _$jscoverage['core/utils.js'][436] = 0;
  _$jscoverage['core/utils.js'][437] = 0;
  _$jscoverage['core/utils.js'][438] = 0;
  _$jscoverage['core/utils.js'][439] = 0;
  _$jscoverage['core/utils.js'][440] = 0;
  _$jscoverage['core/utils.js'][441] = 0;
  _$jscoverage['core/utils.js'][443] = 0;
  _$jscoverage['core/utils.js'][447] = 0;
  _$jscoverage['core/utils.js'][456] = 0;
  _$jscoverage['core/utils.js'][457] = 0;
  _$jscoverage['core/utils.js'][459] = 0;
  _$jscoverage['core/utils.js'][460] = 0;
  _$jscoverage['core/utils.js'][461] = 0;
  _$jscoverage['core/utils.js'][462] = 0;
  _$jscoverage['core/utils.js'][464] = 0;
  _$jscoverage['core/utils.js'][466] = 0;
  _$jscoverage['core/utils.js'][467] = 0;
  _$jscoverage['core/utils.js'][469] = 0;
  _$jscoverage['core/utils.js'][471] = 0;
  _$jscoverage['core/utils.js'][480] = 0;
  _$jscoverage['core/utils.js'][482] = 0;
  _$jscoverage['core/utils.js'][484] = 0;
  _$jscoverage['core/utils.js'][485] = 0;
  _$jscoverage['core/utils.js'][489] = 0;
  _$jscoverage['core/utils.js'][490] = 0;
  _$jscoverage['core/utils.js'][491] = 0;
  _$jscoverage['core/utils.js'][492] = 0;
  _$jscoverage['core/utils.js'][493] = 0;
  _$jscoverage['core/utils.js'][494] = 0;
  _$jscoverage['core/utils.js'][496] = 0;
  _$jscoverage['core/utils.js'][497] = 0;
  _$jscoverage['core/utils.js'][498] = 0;
  _$jscoverage['core/utils.js'][499] = 0;
  _$jscoverage['core/utils.js'][500] = 0;
  _$jscoverage['core/utils.js'][501] = 0;
  _$jscoverage['core/utils.js'][503] = 0;
  _$jscoverage['core/utils.js'][504] = 0;
  _$jscoverage['core/utils.js'][506] = 0;
  _$jscoverage['core/utils.js'][508] = 0;
  _$jscoverage['core/utils.js'][509] = 0;
  _$jscoverage['core/utils.js'][512] = 0;
  _$jscoverage['core/utils.js'][513] = 0;
  _$jscoverage['core/utils.js'][514] = 0;
  _$jscoverage['core/utils.js'][516] = 0;
  _$jscoverage['core/utils.js'][517] = 0;
  _$jscoverage['core/utils.js'][533] = 0;
  _$jscoverage['core/utils.js'][534] = 0;
  _$jscoverage['core/utils.js'][535] = 0;
  _$jscoverage['core/utils.js'][536] = 0;
  _$jscoverage['core/utils.js'][538] = 0;
  _$jscoverage['core/utils.js'][540] = 0;
  _$jscoverage['core/utils.js'][541] = 0;
  _$jscoverage['core/utils.js'][542] = 0;
  _$jscoverage['core/utils.js'][543] = 0;
  _$jscoverage['core/utils.js'][545] = 0;
  _$jscoverage['core/utils.js'][546] = 0;
  _$jscoverage['core/utils.js'][548] = 0;
  _$jscoverage['core/utils.js'][550] = 0;
  _$jscoverage['core/utils.js'][551] = 0;
  _$jscoverage['core/utils.js'][553] = 0;
  _$jscoverage['core/utils.js'][555] = 0;
  _$jscoverage['core/utils.js'][556] = 0;
  _$jscoverage['core/utils.js'][557] = 0;
  _$jscoverage['core/utils.js'][558] = 0;
  _$jscoverage['core/utils.js'][559] = 0;
  _$jscoverage['core/utils.js'][561] = 0;
  _$jscoverage['core/utils.js'][562] = 0;
  _$jscoverage['core/utils.js'][563] = 0;
  _$jscoverage['core/utils.js'][565] = 0;
  _$jscoverage['core/utils.js'][566] = 0;
  _$jscoverage['core/utils.js'][568] = 0;
  _$jscoverage['core/utils.js'][569] = 0;
  _$jscoverage['core/utils.js'][571] = 0;
  _$jscoverage['core/utils.js'][575] = 0;
  _$jscoverage['core/utils.js'][576] = 0;
  _$jscoverage['core/utils.js'][577] = 0;
  _$jscoverage['core/utils.js'][578] = 0;
  _$jscoverage['core/utils.js'][579] = 0;
  _$jscoverage['core/utils.js'][580] = 0;
  _$jscoverage['core/utils.js'][581] = 0;
  _$jscoverage['core/utils.js'][585] = 0;
  _$jscoverage['core/utils.js'][609] = 0;
  _$jscoverage['core/utils.js'][610] = 0;
  _$jscoverage['core/utils.js'][611] = 0;
}
_$jscoverage['core/utils.js'].source = ["<span class=\"c\">/**</span>","<span class=\"c\"> * @file</span>","<span class=\"c\"> * @name UE.Utils</span>","<span class=\"c\"> * @short Utils</span>","<span class=\"c\"> * @desc UEditor&#23553;&#35013;&#20351;&#29992;&#30340;&#38745;&#24577;&#24037;&#20855;&#20989;&#25968;</span>","<span class=\"c\"> * @import editor.js</span>","<span class=\"c\"> */</span>","<span class=\"k\">var</span> utils <span class=\"k\">=</span> UE<span class=\"k\">.</span>utils <span class=\"k\">=</span> <span class=\"k\">{</span>","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#36941;&#21382;&#25968;&#32452;&#65292;&#23545;&#35937;&#65292;nodeList</span>","<span class=\"c\">     * @name each</span>","<span class=\"c\">     * @grammar UE.utils.each(obj,iterator,[context])</span>","<span class=\"c\">     * @since 1.2.4+</span>","<span class=\"c\">     * @desc</span>","<span class=\"c\">     * * obj &#35201;&#36941;&#21382;&#30340;&#23545;&#35937;</span>","<span class=\"c\">     * * iterator &#36941;&#21382;&#30340;&#26041;&#27861;,&#26041;&#27861;&#30340;&#31532;&#19968;&#20010;&#26159;&#36941;&#21382;&#30340;&#20540;&#65292;&#31532;&#20108;&#20010;&#26159;&#32034;&#24341;&#65292;&#31532;&#19977;&#20010;&#26159;obj</span>","<span class=\"c\">     * * context  iterator&#30340;&#19978;&#19979;&#25991;</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * UE.utils.each([1,2],function(v,i){</span>","<span class=\"c\">     *     console.log(v)//&#20540;</span>","<span class=\"c\">     *     console.log(i)//&#32034;&#24341;</span>","<span class=\"c\">     * })</span>","<span class=\"c\">     * UE.utils.each(document.getElementsByTagName('*'),function(n){</span>","<span class=\"c\">     *     console.log(n.tagName)</span>","<span class=\"c\">     * })</span>","<span class=\"c\">     */</span>","    each <span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>obj<span class=\"k\">,</span> iterator<span class=\"k\">,</span> context<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>obj <span class=\"k\">==</span> <span class=\"k\">null</span><span class=\"k\">)</span> <span class=\"k\">return</span><span class=\"k\">;</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>obj<span class=\"k\">.</span>length <span class=\"k\">===</span> <span class=\"k\">+</span>obj<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> l <span class=\"k\">=</span> obj<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span><span class=\"k\">(</span>iterator<span class=\"k\">.</span>call<span class=\"k\">(</span>context<span class=\"k\">,</span> obj<span class=\"k\">[</span>i<span class=\"k\">],</span> i<span class=\"k\">,</span> obj<span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"k\">false</span><span class=\"k\">)</span>","                    <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> key <span class=\"k\">in</span> obj<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>obj<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>key<span class=\"k\">))</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span><span class=\"k\">(</span>iterator<span class=\"k\">.</span>call<span class=\"k\">(</span>context<span class=\"k\">,</span> obj<span class=\"k\">[</span>key<span class=\"k\">],</span> key<span class=\"k\">,</span> obj<span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"k\">false</span><span class=\"k\">)</span>","                        <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    makeInstance<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>obj<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> noop <span class=\"k\">=</span> <span class=\"k\">new</span> Function<span class=\"k\">();</span>","        noop<span class=\"k\">.</span>prototype <span class=\"k\">=</span> obj<span class=\"k\">;</span>","        obj <span class=\"k\">=</span> <span class=\"k\">new</span> noop<span class=\"k\">;</span>","        noop<span class=\"k\">.</span>prototype <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","        <span class=\"k\">return</span> obj<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#23558;source&#23545;&#35937;&#20013;&#30340;&#23646;&#24615;&#25193;&#23637;&#21040;target&#23545;&#35937;&#19978;</span>","<span class=\"c\">     * @name extend</span>","<span class=\"c\">     * @grammar UE.utils.extend(target,source)  =&gt; Object  //&#35206;&#30422;&#25193;&#23637;</span>","<span class=\"c\">     * @grammar UE.utils.extend(target,source,true)  ==&gt; Object  //&#20445;&#30041;&#25193;&#23637;</span>","<span class=\"c\">     */</span>","    extend<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>t<span class=\"k\">,</span> s<span class=\"k\">,</span> b<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>s<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> k <span class=\"k\">in</span> s<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(!</span>b <span class=\"k\">||</span> <span class=\"k\">!</span>t<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>k<span class=\"k\">))</span> <span class=\"k\">{</span>","                    t<span class=\"k\">[</span>k<span class=\"k\">]</span> <span class=\"k\">=</span> s<span class=\"k\">[</span>k<span class=\"k\">];</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> t<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","    extend2<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>t<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> a <span class=\"k\">=</span> arguments<span class=\"k\">;</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> a<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> x <span class=\"k\">=</span> a<span class=\"k\">[</span>i<span class=\"k\">];</span>","            <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> k <span class=\"k\">in</span> x<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(!</span>t<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>k<span class=\"k\">))</span> <span class=\"k\">{</span>","                    t<span class=\"k\">[</span>k<span class=\"k\">]</span> <span class=\"k\">=</span> x<span class=\"k\">[</span>k<span class=\"k\">];</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> t<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#27169;&#25311;&#32487;&#25215;&#26426;&#21046;&#65292;subClass&#32487;&#25215;superClass</span>","<span class=\"c\">     * @name inherits</span>","<span class=\"c\">     * @grammar UE.utils.inherits(subClass,superClass) =&gt; subClass</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * function SuperClass(){</span>","<span class=\"c\">     *     this.name = \"&#23567;&#26446;\";</span>","<span class=\"c\">     * }</span>","<span class=\"c\">     * SuperClass.prototype = {</span>","<span class=\"c\">     *     hello:function(str){</span>","<span class=\"c\">     *         console.log(this.name + str);</span>","<span class=\"c\">     *     }</span>","<span class=\"c\">     * }</span>","<span class=\"c\">     * function SubClass(){</span>","<span class=\"c\">     *     this.name = \"&#23567;&#24352;\";</span>","<span class=\"c\">     * }</span>","<span class=\"c\">     * UE.utils.inherits(SubClass,SuperClass);</span>","<span class=\"c\">     * var sub = new SubClass();</span>","<span class=\"c\">     * sub.hello(\"&#26089;&#19978;&#22909;!\"); ==&gt; \"&#23567;&#24352;&#26089;&#19978;&#22909;&#65281;\"</span>","<span class=\"c\">     */</span>","    inherits<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>subClass<span class=\"k\">,</span> superClass<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> oldP <span class=\"k\">=</span> subClass<span class=\"k\">.</span>prototype<span class=\"k\">,</span>","            newP <span class=\"k\">=</span> utils<span class=\"k\">.</span>makeInstance<span class=\"k\">(</span>superClass<span class=\"k\">.</span>prototype<span class=\"k\">);</span>","        utils<span class=\"k\">.</span>extend<span class=\"k\">(</span>newP<span class=\"k\">,</span> oldP<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","        subClass<span class=\"k\">.</span>prototype <span class=\"k\">=</span> newP<span class=\"k\">;</span>","        <span class=\"k\">return</span> <span class=\"k\">(</span>newP<span class=\"k\">.</span>constructor <span class=\"k\">=</span> subClass<span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#29992;&#25351;&#23450;&#30340;context&#20316;&#20026;fn&#19978;&#19979;&#25991;&#65292;&#20063;&#23601;&#26159;this</span>","<span class=\"c\">     * @name bind</span>","<span class=\"c\">     * @grammar UE.utils.bind(fn,context)  =&gt;  fn</span>","<span class=\"c\">     */</span>","    bind<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>fn<span class=\"k\">,</span> context<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> fn<span class=\"k\">.</span>apply<span class=\"k\">(</span>context<span class=\"k\">,</span> arguments<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#21019;&#24314;&#24310;&#36831;delay&#25191;&#34892;&#30340;&#20989;&#25968;fn</span>","<span class=\"c\">     * @name defer</span>","<span class=\"c\">     * @grammar UE.utils.defer(fn,delay)  =&gt;fn   //&#24310;&#36831;delay&#27627;&#31186;&#25191;&#34892;fn&#65292;&#36820;&#22238;fn</span>","<span class=\"c\">     * @grammar UE.utils.defer(fn,delay,exclusion)  =&gt;fn   //&#24310;&#36831;delay&#27627;&#31186;&#25191;&#34892;fn&#65292;&#33509;exclusion&#20026;&#30495;&#65292;&#21017;&#20114;&#26021;&#25191;&#34892;fn</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * function test(){</span>","<span class=\"c\">     *     console.log(\"&#24310;&#36831;&#36755;&#20986;&#65281;\");</span>","<span class=\"c\">     * }</span>","<span class=\"c\">     * //&#38750;&#20114;&#26021;&#24310;&#36831;&#25191;&#34892;</span>","<span class=\"c\">     * var testDefer = UE.utils.defer(test,1000);</span>","<span class=\"c\">     * testDefer();   =&gt;  \"&#24310;&#36831;&#36755;&#20986;&#65281;\";</span>","<span class=\"c\">     * testDefer();   =&gt;  \"&#24310;&#36831;&#36755;&#20986;&#65281;\";</span>","<span class=\"c\">     * //&#20114;&#26021;&#24310;&#36831;&#25191;&#34892;</span>","<span class=\"c\">     * var testDefer1 = UE.utils.defer(test,1000,true);</span>","<span class=\"c\">     * testDefer1();   =&gt;  //&#26412;&#27425;&#19981;&#25191;&#34892;</span>","<span class=\"c\">     * testDefer1();   =&gt;  \"&#24310;&#36831;&#36755;&#20986;&#65281;\";</span>","<span class=\"c\">     */</span>","    defer<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>fn<span class=\"k\">,</span> delay<span class=\"k\">,</span> exclusion<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> timerID<span class=\"k\">;</span>","        <span class=\"k\">return</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>exclusion<span class=\"k\">)</span> <span class=\"k\">{</span>","                clearTimeout<span class=\"k\">(</span>timerID<span class=\"k\">);</span>","            <span class=\"k\">}</span>","            timerID <span class=\"k\">=</span> setTimeout<span class=\"k\">(</span>fn<span class=\"k\">,</span> delay<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#26597;&#25214;&#20803;&#32032;item&#22312;&#25968;&#32452;array&#20013;&#30340;&#32034;&#24341;, &#33509;&#25214;&#19981;&#21040;&#36820;&#22238;-1</span>","<span class=\"c\">     * @name indexOf</span>","<span class=\"c\">     * @grammar UE.utils.indexOf(array,item)  =&gt; index|-1  //&#40664;&#35748;&#20174;&#25968;&#32452;&#24320;&#22836;&#37096;&#24320;&#22987;&#25628;&#32034;</span>","<span class=\"c\">     * @grammar UE.utils.indexOf(array,item,start)  =&gt; index|-1  //start&#25351;&#23450;&#24320;&#22987;&#26597;&#25214;&#30340;&#20301;&#32622;</span>","<span class=\"c\">     */</span>","    indexOf<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>array<span class=\"k\">,</span> item<span class=\"k\">,</span> start<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> index <span class=\"k\">=</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","        start <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>isNumber<span class=\"k\">(</span>start<span class=\"k\">)</span> <span class=\"k\">?</span> start <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">;</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>each<span class=\"k\">(</span>array<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>v<span class=\"k\">,</span> i<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>i <span class=\"k\">&gt;=</span> start <span class=\"k\">&amp;&amp;</span> v <span class=\"k\">===</span> item<span class=\"k\">)</span> <span class=\"k\">{</span>","                index <span class=\"k\">=</span> i<span class=\"k\">;</span>","                <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","        <span class=\"k\">return</span> index<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#31227;&#38500;&#25968;&#32452;array&#20013;&#30340;&#20803;&#32032;item</span>","<span class=\"c\">     * @name removeItem</span>","<span class=\"c\">     * @grammar UE.utils.removeItem(array,item)</span>","<span class=\"c\">     */</span>","    removeItem<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>array<span class=\"k\">,</span> item<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> l <span class=\"k\">=</span> array<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>array<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">===</span> item<span class=\"k\">)</span> <span class=\"k\">{</span>","                array<span class=\"k\">.</span>splice<span class=\"k\">(</span>i<span class=\"k\">,</span> <span class=\"s\">1</span><span class=\"k\">);</span>","                i<span class=\"k\">--;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#21024;&#38500;&#23383;&#31526;&#20018;str&#30340;&#39318;&#23614;&#31354;&#26684;</span>","<span class=\"c\">     * @name trim</span>","<span class=\"c\">     * @grammar UE.utils.trim(str) =&gt; String</span>","<span class=\"c\">     */</span>","    trim<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>str<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> str<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/(^[ \\t\\n\\r]+)|([ \\t\\n\\r]+$)/g</span><span class=\"k\">,</span> <span class=\"s\">''</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#23558;&#23383;&#31526;&#20018;list(&#20197;','&#20998;&#38548;)&#25110;&#32773;&#25968;&#32452;list&#36716;&#25104;&#21704;&#24076;&#23545;&#35937;</span>","<span class=\"c\">     * @name listToMap</span>","<span class=\"c\">     * @grammar UE.utils.listToMap(list)  =&gt; Object  //Object&#24418;&#22914;{test:1,br:1,textarea:1}</span>","<span class=\"c\">     */</span>","    listToMap<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>list<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span>list<span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","        list <span class=\"k\">=</span> utils<span class=\"k\">.</span>isArray<span class=\"k\">(</span>list<span class=\"k\">)</span> <span class=\"k\">?</span> list <span class=\"k\">:</span> list<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">','</span><span class=\"k\">);</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> ci<span class=\"k\">,</span> obj <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span> ci <span class=\"k\">=</span> list<span class=\"k\">[</span>i<span class=\"k\">++];)</span> <span class=\"k\">{</span>","            obj<span class=\"k\">[</span>ci<span class=\"k\">.</span>toUpperCase<span class=\"k\">()]</span> <span class=\"k\">=</span> obj<span class=\"k\">[</span>ci<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> obj<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#23558;str&#20013;&#30340;html&#31526;&#21495;&#36716;&#20041;,&#40664;&#35748;&#23558;&#36716;&#20041;''&amp;&lt;\"&gt;''&#22235;&#20010;&#23383;&#31526;&#65292;&#21487;&#33258;&#23450;&#20041;reg&#26469;&#30830;&#23450;&#38656;&#35201;&#36716;&#20041;&#30340;&#23383;&#31526;</span>","<span class=\"c\">     * @name unhtml</span>","<span class=\"c\">     * @grammar UE.utils.unhtml(str);  =&gt; String</span>","<span class=\"c\">     * @grammar UE.utils.unhtml(str,reg)  =&gt; String</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * var html = '&lt;body&gt;You say:\"&#20320;&#22909;&#65281;Baidu &amp; UEditor!\"&lt;/body&gt;';</span>","<span class=\"c\">     * UE.utils.unhtml(html);   ==&gt;  &amp;lt;body&amp;gt;You say:&amp;quot;&#20320;&#22909;&#65281;Baidu &amp;amp; UEditor!&amp;quot;&amp;lt;/body&amp;gt;</span>","<span class=\"c\">     * UE.utils.unhtml(html,/[&lt;&gt;]/g)  ==&gt;  &amp;lt;body&amp;gt;You say:\"&#20320;&#22909;&#65281;Baidu &amp; UEditor!\"&amp;lt;/body&amp;gt;</span>","<span class=\"c\">     */</span>","    unhtml<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>str<span class=\"k\">,</span> reg<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> str <span class=\"k\">?</span> str<span class=\"k\">.</span>replace<span class=\"k\">(</span>reg <span class=\"k\">||</span> <span class=\"s\">/[&amp;&lt;\"&gt;](?:(amp|lt|quot|gt);)?/g</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>a<span class=\"k\">,</span> b<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>b<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> a<span class=\"k\">;</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> <span class=\"k\">{</span>","                    <span class=\"s\">'&lt;'</span><span class=\"k\">:</span><span class=\"s\">'&amp;lt;'</span><span class=\"k\">,</span>","                    <span class=\"s\">'&amp;'</span><span class=\"k\">:</span><span class=\"s\">'&amp;amp;'</span><span class=\"k\">,</span>","                    <span class=\"s\">'\"'</span><span class=\"k\">:</span><span class=\"s\">'&amp;quot;'</span><span class=\"k\">,</span>","                    <span class=\"s\">'&gt;'</span><span class=\"k\">:</span><span class=\"s\">'&amp;gt;'</span>","                <span class=\"k\">}</span><span class=\"k\">[</span>a<span class=\"k\">]</span>","            <span class=\"k\">}</span>","","        <span class=\"k\">}</span><span class=\"k\">)</span> <span class=\"k\">:</span> <span class=\"s\">''</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#23558;str&#20013;&#30340;&#36716;&#20041;&#23383;&#31526;&#36824;&#21407;&#25104;html&#23383;&#31526;</span>","<span class=\"c\">     * @name html</span>","<span class=\"c\">     * @grammar UE.utils.html(str)  =&gt; String   //&#35814;&#32454;&#21442;&#35265;&lt;code&gt;&lt;a href = '#unhtml'&gt;unhtml&lt;/a&gt;&lt;/code&gt;</span>","<span class=\"c\">     */</span>","    html<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>str<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> str <span class=\"k\">?</span> str<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/&amp;((g|l|quo)t|amp);/g</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>m<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">{</span>","                <span class=\"s\">'&amp;lt;'</span><span class=\"k\">:</span><span class=\"s\">'&lt;'</span><span class=\"k\">,</span>","                <span class=\"s\">'&amp;amp;'</span><span class=\"k\">:</span><span class=\"s\">'&amp;'</span><span class=\"k\">,</span>","                <span class=\"s\">'&amp;quot;'</span><span class=\"k\">:</span><span class=\"s\">'\"'</span><span class=\"k\">,</span>","                <span class=\"s\">'&amp;gt;'</span><span class=\"k\">:</span><span class=\"s\">'&gt;'</span>","            <span class=\"k\">}</span><span class=\"k\">[</span>m<span class=\"k\">]</span>","        <span class=\"k\">}</span><span class=\"k\">)</span> <span class=\"k\">:</span> <span class=\"s\">''</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#23558;css&#26679;&#24335;&#36716;&#25442;&#20026;&#39548;&#23792;&#30340;&#24418;&#24335;&#12290;&#22914;font-size =&gt; fontSize</span>","<span class=\"c\">     * @name cssStyleToDomStyle</span>","<span class=\"c\">     * @grammar UE.utils.cssStyleToDomStyle(cssName)  =&gt; String</span>","<span class=\"c\">     */</span>","    cssStyleToDomStyle<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> test <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'div'</span><span class=\"k\">).</span>style<span class=\"k\">,</span>","            cache <span class=\"k\">=</span> <span class=\"k\">{</span>","                <span class=\"s\">'float'</span><span class=\"k\">:</span>test<span class=\"k\">.</span>cssFloat <span class=\"k\">!=</span> undefined <span class=\"k\">?</span> <span class=\"s\">'cssFloat'</span> <span class=\"k\">:</span> test<span class=\"k\">.</span>styleFloat <span class=\"k\">!=</span> undefined <span class=\"k\">?</span> <span class=\"s\">'styleFloat'</span> <span class=\"k\">:</span> <span class=\"s\">'float'</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","","        <span class=\"k\">return</span> <span class=\"k\">function</span> <span class=\"k\">(</span>cssName<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> cache<span class=\"k\">[</span>cssName<span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"k\">(</span>cache<span class=\"k\">[</span>cssName<span class=\"k\">]</span> <span class=\"k\">=</span> cssName<span class=\"k\">.</span>toLowerCase<span class=\"k\">().</span>replace<span class=\"k\">(</span><span class=\"s\">/-./g</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>match<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> match<span class=\"k\">.</span>charAt<span class=\"k\">(</span><span class=\"s\">1</span><span class=\"k\">).</span>toUpperCase<span class=\"k\">();</span>","            <span class=\"k\">}</span><span class=\"k\">));</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">(),</span>","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#21160;&#24577;&#21152;&#36733;&#25991;&#20214;&#21040;doc&#20013;&#65292;&#24182;&#20381;&#25454;obj&#26469;&#35774;&#32622;&#23646;&#24615;&#65292;&#21152;&#36733;&#25104;&#21151;&#21518;&#25191;&#34892;&#22238;&#35843;&#20989;&#25968;fn</span>","<span class=\"c\">     * @name loadFile</span>","<span class=\"c\">     * @grammar UE.utils.loadFile(doc,obj)</span>","<span class=\"c\">     * @grammar UE.utils.loadFile(doc,obj,fn)</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * //&#25351;&#23450;&#21152;&#36733;&#21040;&#24403;&#21069;document&#20013;&#19968;&#20010;script&#25991;&#20214;&#65292;&#21152;&#36733;&#25104;&#21151;&#21518;&#25191;&#34892;function</span>","<span class=\"c\">     * utils.loadFile( document, {</span>","<span class=\"c\">     *     src:\"test.js\",</span>","<span class=\"c\">     *     tag:\"script\",</span>","<span class=\"c\">     *     type:\"text/javascript\",</span>","<span class=\"c\">     *     defer:\"defer\"</span>","<span class=\"c\">     * }, function () {</span>","<span class=\"c\">     *     console.log('&#21152;&#36733;&#25104;&#21151;&#65281;')</span>","<span class=\"c\">     * });</span>","<span class=\"c\">     */</span>","    loadFile<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> tmpList <span class=\"k\">=</span> <span class=\"k\">[];</span>","","        <span class=\"k\">function</span> getItem<span class=\"k\">(</span>doc<span class=\"k\">,</span> obj<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">try</span> <span class=\"k\">{</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> ci<span class=\"k\">;</span> ci <span class=\"k\">=</span> tmpList<span class=\"k\">[</span>i<span class=\"k\">++];)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>ci<span class=\"k\">.</span>doc <span class=\"k\">===</span> doc <span class=\"k\">&amp;&amp;</span> ci<span class=\"k\">.</span>url <span class=\"k\">==</span> <span class=\"k\">(</span>obj<span class=\"k\">.</span>src <span class=\"k\">||</span> obj<span class=\"k\">.</span>href<span class=\"k\">))</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span> ci<span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> <span class=\"k\">function</span> <span class=\"k\">(</span>doc<span class=\"k\">,</span> obj<span class=\"k\">,</span> fn<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> item <span class=\"k\">=</span> getItem<span class=\"k\">(</span>doc<span class=\"k\">,</span> obj<span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>item<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>item<span class=\"k\">.</span>ready<span class=\"k\">)</span> <span class=\"k\">{</span>","                    fn <span class=\"k\">&amp;&amp;</span> fn<span class=\"k\">();</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    item<span class=\"k\">.</span>funs<span class=\"k\">.</span>push<span class=\"k\">(</span>fn<span class=\"k\">)</span>","                <span class=\"k\">}</span>","                <span class=\"k\">return</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","            tmpList<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"k\">{</span>","                doc<span class=\"k\">:</span>doc<span class=\"k\">,</span>","                url<span class=\"k\">:</span>obj<span class=\"k\">.</span>src <span class=\"k\">||</span> obj<span class=\"k\">.</span>href<span class=\"k\">,</span>","                funs<span class=\"k\">:[</span>fn<span class=\"k\">]</span>","            <span class=\"k\">}</span><span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span>doc<span class=\"k\">.</span>body<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> html <span class=\"k\">=</span> <span class=\"k\">[];</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> p <span class=\"k\">in</span> obj<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>p <span class=\"k\">==</span> <span class=\"s\">'tag'</span><span class=\"k\">)</span><span class=\"k\">continue</span><span class=\"k\">;</span>","                    html<span class=\"k\">.</span>push<span class=\"k\">(</span>p <span class=\"k\">+</span> <span class=\"s\">'=\"'</span> <span class=\"k\">+</span> obj<span class=\"k\">[</span>p<span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"s\">'\"'</span><span class=\"k\">)</span>","                <span class=\"k\">}</span>","                doc<span class=\"k\">.</span>write<span class=\"k\">(</span><span class=\"s\">'&lt;'</span> <span class=\"k\">+</span> obj<span class=\"k\">.</span>tag <span class=\"k\">+</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> html<span class=\"k\">.</span>join<span class=\"k\">(</span><span class=\"s\">' '</span><span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">' &gt;&lt;/'</span> <span class=\"k\">+</span> obj<span class=\"k\">.</span>tag <span class=\"k\">+</span> <span class=\"s\">'&gt;'</span><span class=\"k\">);</span>","                <span class=\"k\">return</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>obj<span class=\"k\">.</span>id <span class=\"k\">&amp;&amp;</span> doc<span class=\"k\">.</span>getElementById<span class=\"k\">(</span>obj<span class=\"k\">.</span>id<span class=\"k\">))</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","            <span class=\"k\">var</span> element <span class=\"k\">=</span> doc<span class=\"k\">.</span>createElement<span class=\"k\">(</span>obj<span class=\"k\">.</span>tag<span class=\"k\">);</span>","            <span class=\"k\">delete</span> obj<span class=\"k\">.</span>tag<span class=\"k\">;</span>","            <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> p <span class=\"k\">in</span> obj<span class=\"k\">)</span> <span class=\"k\">{</span>","                element<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span>p<span class=\"k\">,</span> obj<span class=\"k\">[</span>p<span class=\"k\">]);</span>","            <span class=\"k\">}</span>","            element<span class=\"k\">.</span>onload <span class=\"k\">=</span> element<span class=\"k\">.</span>onreadystatechange <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>readyState <span class=\"k\">||</span> <span class=\"s\">/loaded|complete/</span><span class=\"k\">.</span>test<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>readyState<span class=\"k\">))</span> <span class=\"k\">{</span>","                    item <span class=\"k\">=</span> getItem<span class=\"k\">(</span>doc<span class=\"k\">,</span> obj<span class=\"k\">);</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>item<span class=\"k\">.</span>funs<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                        item<span class=\"k\">.</span>ready <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","                        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> fi<span class=\"k\">;</span> fi <span class=\"k\">=</span> item<span class=\"k\">.</span>funs<span class=\"k\">.</span>pop<span class=\"k\">();)</span> <span class=\"k\">{</span>","                            fi<span class=\"k\">();</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","                    element<span class=\"k\">.</span>onload <span class=\"k\">=</span> element<span class=\"k\">.</span>onreadystatechange <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","            element<span class=\"k\">.</span>onerror <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                <span class=\"k\">throw</span> Error<span class=\"k\">(</span><span class=\"s\">'The load '</span> <span class=\"k\">+</span> <span class=\"k\">(</span>obj<span class=\"k\">.</span>href <span class=\"k\">||</span> obj<span class=\"k\">.</span>src<span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">' fails,check the url settings of file editor_config.js '</span><span class=\"k\">)</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","            doc<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">\"head\"</span><span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">].</span>appendChild<span class=\"k\">(</span>element<span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">(),</span>","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#21028;&#26029;obj&#23545;&#35937;&#26159;&#21542;&#20026;&#31354;</span>","<span class=\"c\">     * @name isEmptyObject</span>","<span class=\"c\">     * @grammar UE.utils.isEmptyObject(obj)  =&gt; true|false</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * UE.utils.isEmptyObject({}) ==&gt;true</span>","<span class=\"c\">     * UE.utils.isEmptyObject([]) ==&gt;true</span>","<span class=\"c\">     * UE.utils.isEmptyObject(\"\") ==&gt;true</span>","<span class=\"c\">     */</span>","    isEmptyObject<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>obj<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>obj <span class=\"k\">==</span> <span class=\"k\">null</span><span class=\"k\">)</span> <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>isArray<span class=\"k\">(</span>obj<span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">this</span><span class=\"k\">.</span>isString<span class=\"k\">(</span>obj<span class=\"k\">))</span> <span class=\"k\">return</span> obj<span class=\"k\">.</span>length <span class=\"k\">===</span> <span class=\"s\">0</span><span class=\"k\">;</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> key <span class=\"k\">in</span> obj<span class=\"k\">)</span> <span class=\"k\">if</span> <span class=\"k\">(</span>obj<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>key<span class=\"k\">))</span> <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","        <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#32479;&#19968;&#23558;&#39068;&#33394;&#20540;&#20351;&#29992;16&#36827;&#21046;&#24418;&#24335;&#34920;&#31034;</span>","<span class=\"c\">     * @name fixColor</span>","<span class=\"c\">     * @grammar UE.utils.fixColor(name,value) =&gt; value</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * rgb(255,255,255)  =&gt; \"#ffffff\"</span>","<span class=\"c\">     */</span>","    fixColor<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>name<span class=\"k\">,</span> value<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"s\">/color/i</span><span class=\"k\">.</span>test<span class=\"k\">(</span>name<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"s\">/rgba?/</span><span class=\"k\">.</span>test<span class=\"k\">(</span>value<span class=\"k\">))</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> array <span class=\"k\">=</span> value<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">\",\"</span><span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>array<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">3</span><span class=\"k\">)</span>","                <span class=\"k\">return</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","            value <span class=\"k\">=</span> <span class=\"s\">\"#\"</span><span class=\"k\">;</span>","            <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> color<span class=\"k\">;</span> color <span class=\"k\">=</span> array<span class=\"k\">[</span>i<span class=\"k\">++];)</span> <span class=\"k\">{</span>","                color <span class=\"k\">=</span> parseInt<span class=\"k\">(</span>color<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/[^\\d]/gi</span><span class=\"k\">,</span> <span class=\"s\">''</span><span class=\"k\">),</span> <span class=\"s\">10</span><span class=\"k\">).</span>toString<span class=\"k\">(</span><span class=\"s\">16</span><span class=\"k\">);</span>","                value <span class=\"k\">+=</span> color<span class=\"k\">.</span>length <span class=\"k\">==</span> <span class=\"s\">1</span> <span class=\"k\">?</span> <span class=\"s\">\"0\"</span> <span class=\"k\">+</span> color <span class=\"k\">:</span> color<span class=\"k\">;</span>","            <span class=\"k\">}</span>","            value <span class=\"k\">=</span> value<span class=\"k\">.</span>toUpperCase<span class=\"k\">();</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span>  value<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#21482;&#38024;&#23545;border,padding,margin&#20570;&#20102;&#22788;&#29702;&#65292;&#22240;&#20026;&#24615;&#33021;&#38382;&#39064;</span>","<span class=\"c\">     * @public</span>","<span class=\"c\">     * @function</span>","<span class=\"c\">     * @param {String}    val style&#23383;&#31526;&#20018;</span>","<span class=\"c\">     */</span>","    optCss<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>val<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> padding<span class=\"k\">,</span> margin<span class=\"k\">,</span> border<span class=\"k\">;</span>","        val <span class=\"k\">=</span> val<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/(padding|margin|border)\\-([^:]+):([^;]+);?/gi</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>str<span class=\"k\">,</span> key<span class=\"k\">,</span> name<span class=\"k\">,</span> val<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>val<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">' '</span><span class=\"k\">).</span>length <span class=\"k\">==</span> <span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">switch</span> <span class=\"k\">(</span>key<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">case</span> <span class=\"s\">'padding'</span><span class=\"k\">:</span>","                        <span class=\"k\">!</span>padding <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>padding <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">);</span>","                        padding<span class=\"k\">[</span>name<span class=\"k\">]</span> <span class=\"k\">=</span> val<span class=\"k\">;</span>","                        <span class=\"k\">return</span> <span class=\"s\">''</span><span class=\"k\">;</span>","                    <span class=\"k\">case</span> <span class=\"s\">'margin'</span><span class=\"k\">:</span>","                        <span class=\"k\">!</span>margin <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>margin <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">);</span>","                        margin<span class=\"k\">[</span>name<span class=\"k\">]</span> <span class=\"k\">=</span> val<span class=\"k\">;</span>","                        <span class=\"k\">return</span> <span class=\"s\">''</span><span class=\"k\">;</span>","                    <span class=\"k\">case</span> <span class=\"s\">'border'</span><span class=\"k\">:</span>","                        <span class=\"k\">return</span> val <span class=\"k\">==</span> <span class=\"s\">'initial'</span> <span class=\"k\">?</span> <span class=\"s\">''</span> <span class=\"k\">:</span> str<span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","            <span class=\"k\">return</span> str<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","","        <span class=\"k\">function</span> opt<span class=\"k\">(</span>obj<span class=\"k\">,</span> name<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span>obj<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> <span class=\"s\">''</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","            <span class=\"k\">var</span> t <span class=\"k\">=</span> obj<span class=\"k\">.</span>top <span class=\"k\">,</span> b <span class=\"k\">=</span> obj<span class=\"k\">.</span>bottom<span class=\"k\">,</span> l <span class=\"k\">=</span> obj<span class=\"k\">.</span>left<span class=\"k\">,</span> r <span class=\"k\">=</span> obj<span class=\"k\">.</span>right<span class=\"k\">,</span> val <span class=\"k\">=</span> <span class=\"s\">''</span><span class=\"k\">;</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span>t <span class=\"k\">||</span> <span class=\"k\">!</span>l <span class=\"k\">||</span> <span class=\"k\">!</span>b <span class=\"k\">||</span> <span class=\"k\">!</span>r<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> p <span class=\"k\">in</span> obj<span class=\"k\">)</span> <span class=\"k\">{</span>","                    val <span class=\"k\">+=</span> <span class=\"s\">';'</span> <span class=\"k\">+</span> name <span class=\"k\">+</span> <span class=\"s\">'-'</span> <span class=\"k\">+</span> p <span class=\"k\">+</span> <span class=\"s\">':'</span> <span class=\"k\">+</span> obj<span class=\"k\">[</span>p<span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"s\">';'</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                val <span class=\"k\">+=</span> <span class=\"s\">';'</span> <span class=\"k\">+</span> name <span class=\"k\">+</span> <span class=\"s\">':'</span> <span class=\"k\">+</span>","                    <span class=\"k\">(</span>t <span class=\"k\">==</span> b <span class=\"k\">&amp;&amp;</span> b <span class=\"k\">==</span> l <span class=\"k\">&amp;&amp;</span> l <span class=\"k\">==</span> r <span class=\"k\">?</span> t <span class=\"k\">:</span>","                        t <span class=\"k\">==</span> b <span class=\"k\">&amp;&amp;</span> l <span class=\"k\">==</span> r <span class=\"k\">?</span> <span class=\"k\">(</span>t <span class=\"k\">+</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> l<span class=\"k\">)</span> <span class=\"k\">:</span>","                            l <span class=\"k\">==</span> r <span class=\"k\">?</span> <span class=\"k\">(</span>t <span class=\"k\">+</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> l <span class=\"k\">+</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> b<span class=\"k\">)</span> <span class=\"k\">:</span> <span class=\"k\">(</span>t <span class=\"k\">+</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> r <span class=\"k\">+</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> b <span class=\"k\">+</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> l<span class=\"k\">))</span> <span class=\"k\">+</span> <span class=\"s\">';'</span>","            <span class=\"k\">}</span>","            <span class=\"k\">return</span> val<span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        val <span class=\"k\">+=</span> opt<span class=\"k\">(</span>padding<span class=\"k\">,</span> <span class=\"s\">'padding'</span><span class=\"k\">)</span> <span class=\"k\">+</span> opt<span class=\"k\">(</span>margin<span class=\"k\">,</span> <span class=\"s\">'margin'</span><span class=\"k\">);</span>","        <span class=\"k\">return</span> val<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/^[ \\n\\r\\t;]*|[ \\n\\r\\t]*$/</span><span class=\"k\">,</span> <span class=\"s\">''</span><span class=\"k\">).</span>replace<span class=\"k\">(</span><span class=\"s\">/;([ \\n\\r\\t]+)|\\1;/g</span><span class=\"k\">,</span> <span class=\"s\">';'</span><span class=\"k\">)</span>","            <span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/(&amp;((l|g)t|quot|#39))?;{2,}/g</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>a<span class=\"k\">,</span> b<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> b <span class=\"k\">?</span> b <span class=\"k\">+</span> <span class=\"s\">\";;\"</span> <span class=\"k\">:</span> <span class=\"s\">';'</span>","            <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#28145;&#24230;&#20811;&#38534;&#23545;&#35937;&#65292;&#20174;source&#21040;target</span>","<span class=\"c\">     * @name clone</span>","<span class=\"c\">     * @grammar UE.utils.clone(source) =&gt; anthorObj &#26032;&#30340;&#23545;&#35937;&#26159;&#23436;&#25972;&#30340;source&#30340;&#21103;&#26412;</span>","<span class=\"c\">     * @grammar UE.utils.clone(source,target) =&gt; target&#21253;&#21547;&#20102;source&#30340;&#25152;&#26377;&#20869;&#23481;&#65292;&#37325;&#21517;&#20250;&#35206;&#30422;</span>","<span class=\"c\">     */</span>","    clone<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>source<span class=\"k\">,</span> target<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> tmp<span class=\"k\">;</span>","        target <span class=\"k\">=</span> target <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">in</span> source<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>source<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>i<span class=\"k\">))</span> <span class=\"k\">{</span>","                tmp <span class=\"k\">=</span> source<span class=\"k\">[</span>i<span class=\"k\">];</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">typeof</span> tmp <span class=\"k\">==</span> <span class=\"s\">'object'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                    target<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">=</span> utils<span class=\"k\">.</span>isArray<span class=\"k\">(</span>tmp<span class=\"k\">)</span> <span class=\"k\">?</span> <span class=\"k\">[]</span> <span class=\"k\">:</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","                    utils<span class=\"k\">.</span>clone<span class=\"k\">(</span>source<span class=\"k\">[</span>i<span class=\"k\">],</span> target<span class=\"k\">[</span>i<span class=\"k\">])</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    target<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">=</span> tmp<span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> target<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#36716;&#25442;cm/pt&#21040;px</span>","<span class=\"c\">     * @name transUnitToPx</span>","<span class=\"c\">     * @grammar UE.utils.transUnitToPx('20pt') =&gt; '27px'</span>","<span class=\"c\">     * @grammar UE.utils.transUnitToPx('0pt') =&gt; '0'</span>","<span class=\"c\">     */</span>","    transUnitToPx<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>val<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"s\">/(pt|cm)/</span><span class=\"k\">.</span>test<span class=\"k\">(</span>val<span class=\"k\">))</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> val","        <span class=\"k\">}</span>","        <span class=\"k\">var</span> unit<span class=\"k\">;</span>","        val<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/([\\d.]+)(\\w+)/</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>str<span class=\"k\">,</span> v<span class=\"k\">,</span> u<span class=\"k\">)</span> <span class=\"k\">{</span>","            val <span class=\"k\">=</span> v<span class=\"k\">;</span>","            unit <span class=\"k\">=</span> u<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","        <span class=\"k\">switch</span> <span class=\"k\">(</span>unit<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">case</span> <span class=\"s\">'cm'</span><span class=\"k\">:</span>","                val <span class=\"k\">=</span> parseFloat<span class=\"k\">(</span>val<span class=\"k\">)</span> <span class=\"k\">*</span> <span class=\"s\">25</span><span class=\"k\">;</span>","                <span class=\"k\">break</span><span class=\"k\">;</span>","            <span class=\"k\">case</span> <span class=\"s\">'pt'</span><span class=\"k\">:</span>","                val <span class=\"k\">=</span> Math<span class=\"k\">.</span>round<span class=\"k\">(</span>parseFloat<span class=\"k\">(</span>val<span class=\"k\">)</span> <span class=\"k\">*</span> <span class=\"s\">96</span> <span class=\"k\">/</span> <span class=\"s\">72</span><span class=\"k\">);</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> val <span class=\"k\">+</span> <span class=\"k\">(</span>val <span class=\"k\">?</span> <span class=\"s\">'px'</span> <span class=\"k\">:</span> <span class=\"s\">''</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","    <span class=\"c\">/**</span>","<span class=\"c\">     * DomReady&#26041;&#27861;&#65292;&#22238;&#35843;&#20989;&#25968;&#23558;&#22312;dom&#26641;ready&#23436;&#25104;&#21518;&#25191;&#34892;</span>","<span class=\"c\">     * @name domReady</span>","<span class=\"c\">     * @grammar UE.utils.domReady(fn)  =&gt; fn  //&#36820;&#22238;&#19968;&#20010;&#24310;&#36831;&#25191;&#34892;&#30340;&#26041;&#27861;</span>","<span class=\"c\">     */</span>","    domReady<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","","        <span class=\"k\">var</span> fnArr <span class=\"k\">=</span> <span class=\"k\">[];</span>","","        <span class=\"k\">function</span> doReady<span class=\"k\">(</span>doc<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"c\">//&#30830;&#20445;onready&#21482;&#25191;&#34892;&#19968;&#27425;</span>","            doc<span class=\"k\">.</span>isReady <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","            <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> ci<span class=\"k\">;</span> ci <span class=\"k\">=</span> fnArr<span class=\"k\">.</span>pop<span class=\"k\">();</span> ci<span class=\"k\">())</span> <span class=\"k\">{</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> <span class=\"k\">function</span> <span class=\"k\">(</span>onready<span class=\"k\">,</span> win<span class=\"k\">)</span> <span class=\"k\">{</span>","            win <span class=\"k\">=</span> win <span class=\"k\">||</span> window<span class=\"k\">;</span>","            <span class=\"k\">var</span> doc <span class=\"k\">=</span> win<span class=\"k\">.</span>document<span class=\"k\">;</span>","            onready <span class=\"k\">&amp;&amp;</span> fnArr<span class=\"k\">.</span>push<span class=\"k\">(</span>onready<span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>doc<span class=\"k\">.</span>readyState <span class=\"k\">===</span> <span class=\"s\">\"complete\"</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                doReady<span class=\"k\">(</span>doc<span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                doc<span class=\"k\">.</span>isReady <span class=\"k\">&amp;&amp;</span> doReady<span class=\"k\">(</span>doc<span class=\"k\">);</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>browser<span class=\"k\">.</span>ie<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>doc<span class=\"k\">.</span>isReady<span class=\"k\">)</span> <span class=\"k\">return</span><span class=\"k\">;</span>","                        <span class=\"k\">try</span> <span class=\"k\">{</span>","                            doc<span class=\"k\">.</span>documentElement<span class=\"k\">.</span>doScroll<span class=\"k\">(</span><span class=\"s\">\"left\"</span><span class=\"k\">);</span>","                        <span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span>error<span class=\"k\">)</span> <span class=\"k\">{</span>","                            setTimeout<span class=\"k\">(</span>arguments<span class=\"k\">.</span>callee<span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">);</span>","                            <span class=\"k\">return</span><span class=\"k\">;</span>","                        <span class=\"k\">}</span>","                        doReady<span class=\"k\">(</span>doc<span class=\"k\">);</span>","                    <span class=\"k\">}</span><span class=\"k\">)();</span>","                    win<span class=\"k\">.</span>attachEvent<span class=\"k\">(</span><span class=\"s\">'onload'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                        doReady<span class=\"k\">(</span>doc<span class=\"k\">)</span>","                    <span class=\"k\">}</span><span class=\"k\">);</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    doc<span class=\"k\">.</span>addEventListener<span class=\"k\">(</span><span class=\"s\">\"DOMContentLoaded\"</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                        doc<span class=\"k\">.</span>removeEventListener<span class=\"k\">(</span><span class=\"s\">\"DOMContentLoaded\"</span><span class=\"k\">,</span> arguments<span class=\"k\">.</span>callee<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>","                        doReady<span class=\"k\">(</span>doc<span class=\"k\">);</span>","                    <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>","                    win<span class=\"k\">.</span>addEventListener<span class=\"k\">(</span><span class=\"s\">'load'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                        doReady<span class=\"k\">(</span>doc<span class=\"k\">)</span>","                    <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">(),</span>","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#21160;&#24577;&#28155;&#21152;css&#26679;&#24335;</span>","<span class=\"c\">     * @name cssRule</span>","<span class=\"c\">     * @grammar UE.utils.cssRule('&#28155;&#21152;&#30340;&#26679;&#24335;&#30340;&#33410;&#28857;&#21517;&#31216;',['&#26679;&#24335;'&#65292;'&#25918;&#21040;&#21738;&#20010;document&#19978;'])</span>","<span class=\"c\">     * @grammar UE.utils.cssRule('body','body{background:#ccc}') =&gt; null  //&#32473;body&#28155;&#21152;&#32972;&#26223;&#39068;&#33394;</span>","<span class=\"c\">     * @grammar UE.utils.cssRule('body') =&gt;&#26679;&#24335;&#30340;&#23383;&#31526;&#20018;  //&#21462;&#24471;key&#20540;&#20026;body&#30340;&#26679;&#24335;&#30340;&#20869;&#23481;,&#22914;&#26524;&#27809;&#26377;&#25214;&#21040;key&#20540;&#20808;&#20851;&#30340;&#26679;&#24335;&#23558;&#36820;&#22238;&#31354;&#65292;&#20363;&#22914;&#21018;&#25165;&#37027;&#20010;&#32972;&#26223;&#39068;&#33394;&#65292;&#23558;&#36820;&#22238; body{background:#ccc}</span>","<span class=\"c\">     * @grammar UE.utils.cssRule('body','') =&gt;null //&#28165;&#31354;&#32473;&#23450;&#30340;key&#20540;&#30340;&#32972;&#26223;&#39068;&#33394;</span>","<span class=\"c\">     */</span>","    cssRule<span class=\"k\">:</span>browser<span class=\"k\">.</span>ie <span class=\"k\">?</span> <span class=\"k\">function</span> <span class=\"k\">(</span>key<span class=\"k\">,</span> style<span class=\"k\">,</span> doc<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> indexList<span class=\"k\">,</span> index<span class=\"k\">;</span>","        doc <span class=\"k\">=</span> doc <span class=\"k\">||</span> document<span class=\"k\">;</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>doc<span class=\"k\">.</span>indexList<span class=\"k\">)</span> <span class=\"k\">{</span>","            indexList <span class=\"k\">=</span> doc<span class=\"k\">.</span>indexList<span class=\"k\">;</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            indexList <span class=\"k\">=</span> doc<span class=\"k\">.</span>indexList <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"k\">var</span> sheetStyle<span class=\"k\">;</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span>indexList<span class=\"k\">[</span>key<span class=\"k\">])</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>style <span class=\"k\">===</span> undefined<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> <span class=\"s\">''</span>","            <span class=\"k\">}</span>","            sheetStyle <span class=\"k\">=</span> doc<span class=\"k\">.</span>createStyleSheet<span class=\"k\">(</span><span class=\"s\">''</span><span class=\"k\">,</span> index <span class=\"k\">=</span> doc<span class=\"k\">.</span>styleSheets<span class=\"k\">.</span>length<span class=\"k\">);</span>","            indexList<span class=\"k\">[</span>key<span class=\"k\">]</span> <span class=\"k\">=</span> index<span class=\"k\">;</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            sheetStyle <span class=\"k\">=</span> doc<span class=\"k\">.</span>styleSheets<span class=\"k\">[</span>indexList<span class=\"k\">[</span>key<span class=\"k\">]];</span>","        <span class=\"k\">}</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>style <span class=\"k\">===</span> undefined<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> sheetStyle<span class=\"k\">.</span>cssText","        <span class=\"k\">}</span>","        sheetStyle<span class=\"k\">.</span>cssText <span class=\"k\">=</span> style <span class=\"k\">||</span> <span class=\"s\">''</span>","    <span class=\"k\">}</span> <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>key<span class=\"k\">,</span> style<span class=\"k\">,</span> doc<span class=\"k\">)</span> <span class=\"k\">{</span>","        doc <span class=\"k\">=</span> doc <span class=\"k\">||</span> document<span class=\"k\">;</span>","        <span class=\"k\">var</span> head <span class=\"k\">=</span> doc<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">'head'</span><span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">],</span> node<span class=\"k\">;</span>","        <span class=\"k\">if</span> <span class=\"k\">(!(</span>node <span class=\"k\">=</span> doc<span class=\"k\">.</span>getElementById<span class=\"k\">(</span>key<span class=\"k\">)))</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>style <span class=\"k\">===</span> undefined<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> <span class=\"s\">''</span>","            <span class=\"k\">}</span>","            node <span class=\"k\">=</span> doc<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'style'</span><span class=\"k\">);</span>","            node<span class=\"k\">.</span>id <span class=\"k\">=</span> key<span class=\"k\">;</span>","            head<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>node<span class=\"k\">)</span>","        <span class=\"k\">}</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>style <span class=\"k\">===</span> undefined<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> node<span class=\"k\">.</span>innerHTML","        <span class=\"k\">}</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>style <span class=\"k\">!==</span> <span class=\"s\">''</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            node<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> style<span class=\"k\">;</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            head<span class=\"k\">.</span>removeChild<span class=\"k\">(</span>node<span class=\"k\">)</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","    sort<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>array<span class=\"k\">,</span>compareFn<span class=\"k\">)</span><span class=\"k\">{</span>","        compareFn <span class=\"k\">=</span> compareFn <span class=\"k\">||</span> <span class=\"k\">function</span><span class=\"k\">(</span>item1<span class=\"k\">,</span> item2<span class=\"k\">)</span><span class=\"k\">{</span> <span class=\"k\">return</span> item1<span class=\"k\">.</span>localeCompare<span class=\"k\">(</span>item2<span class=\"k\">);</span><span class=\"k\">}</span><span class=\"k\">;</span>","        <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> i<span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>len <span class=\"k\">=</span> array<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">&lt;</span>len<span class=\"k\">;</span> i<span class=\"k\">++)</span><span class=\"k\">{</span>","            <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> j <span class=\"k\">=</span> i<span class=\"k\">,</span>length <span class=\"k\">=</span> array<span class=\"k\">.</span>length<span class=\"k\">;</span> j<span class=\"k\">&lt;</span>length<span class=\"k\">;</span> j<span class=\"k\">++)</span><span class=\"k\">{</span>","                <span class=\"k\">if</span><span class=\"k\">(</span>compareFn<span class=\"k\">(</span>array<span class=\"k\">[</span>i<span class=\"k\">],</span> array<span class=\"k\">[</span>j<span class=\"k\">])</span> <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">{</span>","                    <span class=\"k\">var</span> t <span class=\"k\">=</span> array<span class=\"k\">[</span>i<span class=\"k\">];</span>","                    array<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">=</span> array<span class=\"k\">[</span>j<span class=\"k\">];</span>","                    array<span class=\"k\">[</span>j<span class=\"k\">]</span> <span class=\"k\">=</span> t<span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> array<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","<span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21028;&#26029;str&#26159;&#21542;&#20026;&#23383;&#31526;&#20018;</span>","<span class=\"c\"> * @name isString</span>","<span class=\"c\"> * @grammar UE.utils.isString(str) =&gt; true|false</span>","<span class=\"c\"> */</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21028;&#26029;array&#26159;&#21542;&#20026;&#25968;&#32452;</span>","<span class=\"c\"> * @name isArray</span>","<span class=\"c\"> * @grammar UE.utils.isArray(obj) =&gt; true|false</span>","<span class=\"c\"> */</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21028;&#26029;obj&#23545;&#35937;&#26159;&#21542;&#20026;&#26041;&#27861;</span>","<span class=\"c\"> * @name isFunction</span>","<span class=\"c\"> * @grammar UE.utils.isFunction(obj)  =&gt; true|false</span>","<span class=\"c\"> */</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21028;&#26029;obj&#23545;&#35937;&#26159;&#21542;&#20026;&#25968;&#23383;</span>","<span class=\"c\"> * @name isNumber</span>","<span class=\"c\"> * @grammar UE.utils.isNumber(obj)  =&gt; true|false</span>","<span class=\"c\"> */</span>","utils<span class=\"k\">.</span>each<span class=\"k\">([</span><span class=\"s\">'String'</span><span class=\"k\">,</span> <span class=\"s\">'Function'</span><span class=\"k\">,</span> <span class=\"s\">'Array'</span><span class=\"k\">,</span> <span class=\"s\">'Number'</span><span class=\"k\">,</span> <span class=\"s\">'RegExp'</span><span class=\"k\">,</span> <span class=\"s\">'Object'</span><span class=\"k\">],</span> <span class=\"k\">function</span> <span class=\"k\">(</span>v<span class=\"k\">)</span> <span class=\"k\">{</span>","    UE<span class=\"k\">.</span>utils<span class=\"k\">[</span><span class=\"s\">'is'</span> <span class=\"k\">+</span> v<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>obj<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> Object<span class=\"k\">.</span>prototype<span class=\"k\">.</span>toString<span class=\"k\">.</span>apply<span class=\"k\">(</span>obj<span class=\"k\">)</span> <span class=\"k\">==</span> <span class=\"s\">'[object '</span> <span class=\"k\">+</span> v <span class=\"k\">+</span> <span class=\"s\">']'</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">);</span>"];
_$jscoverage['core/utils.js'][8]++;
var utils = (UE.utils = {each: (function (obj, iterator, context) {
  _$jscoverage['core/utils.js'][28]++;
  if ((obj == null)) {
    _$jscoverage['core/utils.js'][28]++;
    return;
  }
  _$jscoverage['core/utils.js'][29]++;
  if ((obj.length === (+ obj.length))) {
    _$jscoverage['core/utils.js'][30]++;
    for (var i = 0, l = obj.length; (i < l); (i++)) {
      _$jscoverage['core/utils.js'][31]++;
      if ((iterator.call(context, obj[i], i, obj) === false)) {
        _$jscoverage['core/utils.js'][32]++;
        return false;
      }
}
  }
  else {
    _$jscoverage['core/utils.js'][35]++;
    for (var key in obj) {
      _$jscoverage['core/utils.js'][36]++;
      if (obj.hasOwnProperty(key)) {
        _$jscoverage['core/utils.js'][37]++;
        if ((iterator.call(context, obj[key], key, obj) === false)) {
          _$jscoverage['core/utils.js'][38]++;
          return false;
        }
      }
}
  }
}), makeInstance: (function (obj) {
  _$jscoverage['core/utils.js'][45]++;
  var noop = new Function();
  _$jscoverage['core/utils.js'][46]++;
  noop.prototype = obj;
  _$jscoverage['core/utils.js'][47]++;
  obj = new noop();
  _$jscoverage['core/utils.js'][48]++;
  noop.prototype = null;
  _$jscoverage['core/utils.js'][49]++;
  return obj;
}), extend: (function (t, s, b) {
  _$jscoverage['core/utils.js'][58]++;
  if (s) {
    _$jscoverage['core/utils.js'][59]++;
    for (var k in s) {
      _$jscoverage['core/utils.js'][60]++;
      if (((! b) || (! t.hasOwnProperty(k)))) {
        _$jscoverage['core/utils.js'][61]++;
        t[k] = s[k];
      }
}
  }
  _$jscoverage['core/utils.js'][65]++;
  return t;
}), extend2: (function (t) {
  _$jscoverage['core/utils.js'][68]++;
  var a = arguments;
  _$jscoverage['core/utils.js'][69]++;
  for (var i = 1; (i < a.length); (i++)) {
    _$jscoverage['core/utils.js'][70]++;
    var x = a[i];
    _$jscoverage['core/utils.js'][71]++;
    for (var k in x) {
      _$jscoverage['core/utils.js'][72]++;
      if ((! t.hasOwnProperty(k))) {
        _$jscoverage['core/utils.js'][73]++;
        t[k] = x[k];
      }
}
}
  _$jscoverage['core/utils.js'][77]++;
  return t;
}), inherits: (function (subClass, superClass) {
  _$jscoverage['core/utils.js'][100]++;
  var oldP = subClass.prototype, newP = utils.makeInstance(superClass.prototype);
  _$jscoverage['core/utils.js'][102]++;
  utils.extend(newP, oldP, true);
  _$jscoverage['core/utils.js'][103]++;
  subClass.prototype = newP;
  _$jscoverage['core/utils.js'][104]++;
  return (newP.constructor = subClass);
}), bind: (function (fn, context) {
  _$jscoverage['core/utils.js'][113]++;
  return (function () {
  _$jscoverage['core/utils.js'][114]++;
  return fn.apply(context, arguments);
});
}), defer: (function (fn, delay, exclusion) {
  _$jscoverage['core/utils.js'][137]++;
  var timerID;
  _$jscoverage['core/utils.js'][138]++;
  return (function () {
  _$jscoverage['core/utils.js'][139]++;
  if (exclusion) {
    _$jscoverage['core/utils.js'][140]++;
    clearTimeout(timerID);
  }
  _$jscoverage['core/utils.js'][142]++;
  timerID = setTimeout(fn, delay);
});
}), indexOf: (function (array, item, start) {
  _$jscoverage['core/utils.js'][153]++;
  var index = -1;
  _$jscoverage['core/utils.js'][154]++;
  start = (this.isNumber(start)? start: 0);
  _$jscoverage['core/utils.js'][155]++;
  this.each(array, (function (v, i) {
  _$jscoverage['core/utils.js'][156]++;
  if (((i >= start) && (v === item))) {
    _$jscoverage['core/utils.js'][157]++;
    index = i;
    _$jscoverage['core/utils.js'][158]++;
    return false;
  }
}));
  _$jscoverage['core/utils.js'][161]++;
  return index;
}), removeItem: (function (array, item) {
  _$jscoverage['core/utils.js'][170]++;
  for (var i = 0, l = array.length; (i < l); (i++)) {
    _$jscoverage['core/utils.js'][171]++;
    if ((array[i] === item)) {
      _$jscoverage['core/utils.js'][172]++;
      array.splice(i, 1);
      _$jscoverage['core/utils.js'][173]++;
      (i--);
    }
}
}), trim: (function (str) {
  _$jscoverage['core/utils.js'][184]++;
  return str.replace(/(^[ \t\n\r]+)|([ \t\n\r]+$)/g, "");
}), listToMap: (function (list) {
  _$jscoverage['core/utils.js'][193]++;
  if ((! list)) {
    _$jscoverage['core/utils.js'][193]++;
    return ({});
  }
  _$jscoverage['core/utils.js'][194]++;
  list = (utils.isArray(list)? list: list.split(","));
  _$jscoverage['core/utils.js'][195]++;
  for (var i = 0, ci, obj = {}; (ci = list[(i++)]);) {
    _$jscoverage['core/utils.js'][196]++;
    obj[ci.toUpperCase()] = (obj[ci] = 1);
}
  _$jscoverage['core/utils.js'][198]++;
  return obj;
}), unhtml: (function (str, reg) {
  _$jscoverage['core/utils.js'][212]++;
  return (str? str.replace((reg || /[&<">](?:(amp|lt|quot|gt);)?/g), (function (a, b) {
  _$jscoverage['core/utils.js'][213]++;
  if (b) {
    _$jscoverage['core/utils.js'][214]++;
    return a;
  }
  else {
    _$jscoverage['core/utils.js'][216]++;
    return {"<": "&lt;", "&": "&amp;", "\"": "&quot;", ">": "&gt;"}[a];
  }
})): "");
}), html: (function (str) {
  _$jscoverage['core/utils.js'][232]++;
  return (str? str.replace(/&((g|l|quo)t|amp);/g, (function (m) {
  _$jscoverage['core/utils.js'][233]++;
  return {"&lt;": "<", "&amp;": "&", "&quot;": "\"", "&gt;": ">"}[m];
})): "");
}), cssStyleToDomStyle: (function () {
  _$jscoverage['core/utils.js'][247]++;
  var test = document.createElement("div").style, cache = {"float": ((test.cssFloat != undefined)? "cssFloat": ((test.styleFloat != undefined)? "styleFloat": "float"))};
  _$jscoverage['core/utils.js'][252]++;
  return (function (cssName) {
  _$jscoverage['core/utils.js'][253]++;
  return (cache[cssName] || (cache[cssName] = cssName.toLowerCase().replace(/-./g, (function (match) {
  _$jscoverage['core/utils.js'][254]++;
  return match.charAt(1).toUpperCase();
}))));
});
})(), loadFile: (function () {
  _$jscoverage['core/utils.js'][275]++;
  var tmpList = [];
  _$jscoverage['core/utils.js'][277]++;
  function getItem(doc, obj) {
    _$jscoverage['core/utils.js'][278]++;
    try {
      _$jscoverage['core/utils.js'][279]++;
      for (var i = 0, ci; (ci = tmpList[(i++)]);) {
        _$jscoverage['core/utils.js'][280]++;
        if (((ci.doc === doc) && (ci.url == (obj.src || obj.href)))) {
          _$jscoverage['core/utils.js'][281]++;
          return ci;
        }
}
    }
    catch (e) {
      _$jscoverage['core/utils.js'][285]++;
      return null;
    }
}
  _$jscoverage['core/utils.js'][290]++;
  return (function (doc, obj, fn) {
  _$jscoverage['core/utils.js'][291]++;
  var item = getItem(doc, obj);
  _$jscoverage['core/utils.js'][292]++;
  if (item) {
    _$jscoverage['core/utils.js'][293]++;
    if (item.ready) {
      _$jscoverage['core/utils.js'][294]++;
      (fn && fn());
    }
    else {
      _$jscoverage['core/utils.js'][296]++;
      item.funs.push(fn);
    }
    _$jscoverage['core/utils.js'][298]++;
    return;
  }
  _$jscoverage['core/utils.js'][300]++;
  tmpList.push({doc: doc, url: (obj.src || obj.href), funs: [fn]});
  _$jscoverage['core/utils.js'][305]++;
  if ((! doc.body)) {
    _$jscoverage['core/utils.js'][306]++;
    var html = [];
    _$jscoverage['core/utils.js'][307]++;
    for (var p in obj) {
      _$jscoverage['core/utils.js'][308]++;
      if ((p == "tag")) {
        _$jscoverage['core/utils.js'][308]++;
        continue;
      }
      _$jscoverage['core/utils.js'][309]++;
      html.push((p + "=\"" + obj[p] + "\""));
}
    _$jscoverage['core/utils.js'][311]++;
    doc.write(("<" + obj.tag + " " + html.join(" ") + " ></" + obj.tag + ">"));
    _$jscoverage['core/utils.js'][312]++;
    return;
  }
  _$jscoverage['core/utils.js'][314]++;
  if ((obj.id && doc.getElementById(obj.id))) {
    _$jscoverage['core/utils.js'][315]++;
    return;
  }
  _$jscoverage['core/utils.js'][317]++;
  var element = doc.createElement(obj.tag);
  _$jscoverage['core/utils.js'][318]++;
  (delete obj.tag);
  _$jscoverage['core/utils.js'][319]++;
  for (var p = p in obj) {
    _$jscoverage['core/utils.js'][320]++;
    element.setAttribute(p, obj[p]);
}
  _$jscoverage['core/utils.js'][322]++;
  element.onload = (element.onreadystatechange = (function () {
  _$jscoverage['core/utils.js'][323]++;
  if (((! this.readyState) || /loaded|complete/.test(this.readyState))) {
    _$jscoverage['core/utils.js'][324]++;
    item = getItem(doc, obj);
    _$jscoverage['core/utils.js'][325]++;
    if ((item.funs.length > 0)) {
      _$jscoverage['core/utils.js'][326]++;
      item.ready = 1;
      _$jscoverage['core/utils.js'][327]++;
      for (var fi; (fi = item.funs.pop());) {
        _$jscoverage['core/utils.js'][328]++;
        fi();
}
    }
    _$jscoverage['core/utils.js'][331]++;
    element.onload = (element.onreadystatechange = null);
  }
}));
  _$jscoverage['core/utils.js'][334]++;
  element.onerror = (function () {
  _$jscoverage['core/utils.js'][335]++;
  throw Error(("The load " + (obj.href || obj.src) + " fails,check the url settings of file editor_config.js "));
});
  _$jscoverage['core/utils.js'][337]++;
  doc.getElementsByTagName("head")[0].appendChild(element);
});
})(), isEmptyObject: (function (obj) {
  _$jscoverage['core/utils.js'][350]++;
  if ((obj == null)) {
    _$jscoverage['core/utils.js'][350]++;
    return true;
  }
  _$jscoverage['core/utils.js'][351]++;
  if ((this.isArray(obj) || this.isString(obj))) {
    _$jscoverage['core/utils.js'][351]++;
    return (obj.length === 0);
  }
  _$jscoverage['core/utils.js'][352]++;
  for (var key in obj) {
    _$jscoverage['core/utils.js'][352]++;
    if (obj.hasOwnProperty(key)) {
      _$jscoverage['core/utils.js'][352]++;
      return false;
    }
}
  _$jscoverage['core/utils.js'][353]++;
  return true;
}), fixColor: (function (name, value) {
  _$jscoverage['core/utils.js'][364]++;
  if ((/color/i.test(name) && /rgba?/.test(value))) {
    _$jscoverage['core/utils.js'][365]++;
    var array = value.split(",");
    _$jscoverage['core/utils.js'][366]++;
    if ((array.length > 3)) {
      _$jscoverage['core/utils.js'][367]++;
      return "";
    }
    _$jscoverage['core/utils.js'][368]++;
    value = "#";
    _$jscoverage['core/utils.js'][369]++;
    for (var i = 0, color; (color = array[(i++)]);) {
      _$jscoverage['core/utils.js'][370]++;
      color = parseInt(color.replace(/[^\d]/gi, ""), 10).toString(16);
      _$jscoverage['core/utils.js'][371]++;
      value += ((color.length == 1)? ("0" + color): color);
}
    _$jscoverage['core/utils.js'][373]++;
    value = value.toUpperCase();
  }
  _$jscoverage['core/utils.js'][375]++;
  return value;
}), optCss: (function (val) {
  _$jscoverage['core/utils.js'][384]++;
  var padding, margin, border;
  _$jscoverage['core/utils.js'][385]++;
  val = val.replace(/(padding|margin|border)\-([^:]+):([^;]+);?/gi, (function (str, key, name, val) {
  _$jscoverage['core/utils.js'][386]++;
  if ((val.split(" ").length == 1)) {
    _$jscoverage['core/utils.js'][387]++;
    switch (key) {
    case "padding":
      _$jscoverage['core/utils.js'][389]++;
      ((! padding) && (padding = {}));
      _$jscoverage['core/utils.js'][390]++;
      padding[name] = val;
      _$jscoverage['core/utils.js'][391]++;
      return "";
    case "margin":
      _$jscoverage['core/utils.js'][393]++;
      ((! margin) && (margin = {}));
      _$jscoverage['core/utils.js'][394]++;
      margin[name] = val;
      _$jscoverage['core/utils.js'][395]++;
      return "";
    case "border":
      _$jscoverage['core/utils.js'][397]++;
      return ((val == "initial")? "": str);
    }
  }
  _$jscoverage['core/utils.js'][400]++;
  return str;
}));
  _$jscoverage['core/utils.js'][403]++;
  function opt(obj, name) {
    _$jscoverage['core/utils.js'][404]++;
    if ((! obj)) {
      _$jscoverage['core/utils.js'][405]++;
      return "";
    }
    _$jscoverage['core/utils.js'][407]++;
    var t = obj.top, b = obj.bottom, l = obj.left, r = obj.right, val = "";
    _$jscoverage['core/utils.js'][408]++;
    if (((! t) || (! l) || (! b) || (! r))) {
      _$jscoverage['core/utils.js'][409]++;
      for (var p in obj) {
        _$jscoverage['core/utils.js'][410]++;
        val += (";" + name + "-" + p + ":" + obj[p] + ";");
}
    }
    else {
      _$jscoverage['core/utils.js'][413]++;
      val += (";" + name + ":" + (((t == b) && (b == l) && (l == r))? t: (((t == b) && (l == r))? (t + " " + l): ((l == r)? (t + " " + l + " " + b): (t + " " + r + " " + b + " " + l)))) + ";");
    }
    _$jscoverage['core/utils.js'][418]++;
    return val;
}
  _$jscoverage['core/utils.js'][421]++;
  val += (opt(padding, "padding") + opt(margin, "margin"));
  _$jscoverage['core/utils.js'][422]++;
  return val.replace(/^[ \n\r\t;]*|[ \n\r\t]*$/, "").replace(/;([ \n\r\t]+)|\1;/g, ";").replace(/(&((l|g)t|quot|#39))?;{2,}/g, (function (a, b) {
  _$jscoverage['core/utils.js'][424]++;
  return (b? (b + ";;"): ";");
}));
}), clone: (function (source, target) {
  _$jscoverage['core/utils.js'][434]++;
  var tmp;
  _$jscoverage['core/utils.js'][435]++;
  target = (target || {});
  _$jscoverage['core/utils.js'][436]++;
  for (var i in source) {
    _$jscoverage['core/utils.js'][437]++;
    if (source.hasOwnProperty(i)) {
      _$jscoverage['core/utils.js'][438]++;
      tmp = source[i];
      _$jscoverage['core/utils.js'][439]++;
      if (((typeof tmp) == "object")) {
        _$jscoverage['core/utils.js'][440]++;
        target[i] = (utils.isArray(tmp)? []: {});
        _$jscoverage['core/utils.js'][441]++;
        utils.clone(source[i], target[i]);
      }
      else {
        _$jscoverage['core/utils.js'][443]++;
        target[i] = tmp;
      }
    }
}
  _$jscoverage['core/utils.js'][447]++;
  return target;
}), transUnitToPx: (function (val) {
  _$jscoverage['core/utils.js'][456]++;
  if ((! /(pt|cm)/.test(val))) {
    _$jscoverage['core/utils.js'][457]++;
    return val;
  }
  _$jscoverage['core/utils.js'][459]++;
  var unit;
  _$jscoverage['core/utils.js'][460]++;
  val.replace(/([\d.]+)(\w+)/, (function (str, v, u) {
  _$jscoverage['core/utils.js'][461]++;
  val = v;
  _$jscoverage['core/utils.js'][462]++;
  unit = u;
}));
  _$jscoverage['core/utils.js'][464]++;
  switch (unit) {
  case "cm":
    _$jscoverage['core/utils.js'][466]++;
    val = (parseFloat(val) * 25);
    _$jscoverage['core/utils.js'][467]++;
    break;
  case "pt":
    _$jscoverage['core/utils.js'][469]++;
    val = Math.round(((parseFloat(val) * 96) / 72));
  }
  _$jscoverage['core/utils.js'][471]++;
  return (val + (val? "px": ""));
}), domReady: (function () {
  _$jscoverage['core/utils.js'][480]++;
  var fnArr = [];
  _$jscoverage['core/utils.js'][482]++;
  function doReady(doc) {
    _$jscoverage['core/utils.js'][484]++;
    doc.isReady = true;
    _$jscoverage['core/utils.js'][485]++;
    for (var ci; (ci = fnArr.pop()); ci()) {
}
}
  _$jscoverage['core/utils.js'][489]++;
  return (function (onready, win) {
  _$jscoverage['core/utils.js'][490]++;
  win = (win || window);
  _$jscoverage['core/utils.js'][491]++;
  var doc = win.document;
  _$jscoverage['core/utils.js'][492]++;
  (onready && fnArr.push(onready));
  _$jscoverage['core/utils.js'][493]++;
  if ((doc.readyState === "complete")) {
    _$jscoverage['core/utils.js'][494]++;
    doReady(doc);
  }
  else {
    _$jscoverage['core/utils.js'][496]++;
    (doc.isReady && doReady(doc));
    _$jscoverage['core/utils.js'][497]++;
    if (browser.ie) {
      _$jscoverage['core/utils.js'][498]++;
      (function () {
  _$jscoverage['core/utils.js'][499]++;
  if (doc.isReady) {
    _$jscoverage['core/utils.js'][499]++;
    return;
  }
  _$jscoverage['core/utils.js'][500]++;
  try {
    _$jscoverage['core/utils.js'][501]++;
    doc.documentElement.doScroll("left");
  }
  catch (error) {
    _$jscoverage['core/utils.js'][503]++;
    setTimeout(arguments.callee, 0);
    _$jscoverage['core/utils.js'][504]++;
    return;
  }
  _$jscoverage['core/utils.js'][506]++;
  doReady(doc);
})();
      _$jscoverage['core/utils.js'][508]++;
      win.attachEvent("onload", (function () {
  _$jscoverage['core/utils.js'][509]++;
  doReady(doc);
}));
    }
    else {
      _$jscoverage['core/utils.js'][512]++;
      doc.addEventListener("DOMContentLoaded", (function () {
  _$jscoverage['core/utils.js'][513]++;
  doc.removeEventListener("DOMContentLoaded", arguments.callee, false);
  _$jscoverage['core/utils.js'][514]++;
  doReady(doc);
}), false);
      _$jscoverage['core/utils.js'][516]++;
      win.addEventListener("load", (function () {
  _$jscoverage['core/utils.js'][517]++;
  doReady(doc);
}), false);
    }
  }
});
})(), cssRule: (browser.ie? (function (key, style, doc) {
  _$jscoverage['core/utils.js'][533]++;
  var indexList, index;
  _$jscoverage['core/utils.js'][534]++;
  doc = (doc || document);
  _$jscoverage['core/utils.js'][535]++;
  if (doc.indexList) {
    _$jscoverage['core/utils.js'][536]++;
    indexList = doc.indexList;
  }
  else {
    _$jscoverage['core/utils.js'][538]++;
    indexList = (doc.indexList = {});
  }
  _$jscoverage['core/utils.js'][540]++;
  var sheetStyle;
  _$jscoverage['core/utils.js'][541]++;
  if ((! indexList[key])) {
    _$jscoverage['core/utils.js'][542]++;
    if ((style === undefined)) {
      _$jscoverage['core/utils.js'][543]++;
      return "";
    }
    _$jscoverage['core/utils.js'][545]++;
    sheetStyle = doc.createStyleSheet("", (index = doc.styleSheets.length));
    _$jscoverage['core/utils.js'][546]++;
    indexList[key] = index;
  }
  else {
    _$jscoverage['core/utils.js'][548]++;
    sheetStyle = doc.styleSheets[indexList[key]];
  }
  _$jscoverage['core/utils.js'][550]++;
  if ((style === undefined)) {
    _$jscoverage['core/utils.js'][551]++;
    return sheetStyle.cssText;
  }
  _$jscoverage['core/utils.js'][553]++;
  sheetStyle.cssText = (style || "");
}): (function (key, style, doc) {
  _$jscoverage['core/utils.js'][555]++;
  doc = (doc || document);
  _$jscoverage['core/utils.js'][556]++;
  var head = doc.getElementsByTagName("head")[0], node;
  _$jscoverage['core/utils.js'][557]++;
  if ((! (node = doc.getElementById(key)))) {
    _$jscoverage['core/utils.js'][558]++;
    if ((style === undefined)) {
      _$jscoverage['core/utils.js'][559]++;
      return "";
    }
    _$jscoverage['core/utils.js'][561]++;
    node = doc.createElement("style");
    _$jscoverage['core/utils.js'][562]++;
    node.id = key;
    _$jscoverage['core/utils.js'][563]++;
    head.appendChild(node);
  }
  _$jscoverage['core/utils.js'][565]++;
  if ((style === undefined)) {
    _$jscoverage['core/utils.js'][566]++;
    return node.innerHTML;
  }
  _$jscoverage['core/utils.js'][568]++;
  if ((style !== "")) {
    _$jscoverage['core/utils.js'][569]++;
    node.innerHTML = style;
  }
  else {
    _$jscoverage['core/utils.js'][571]++;
    head.removeChild(node);
  }
})), sort: (function (array, compareFn) {
  _$jscoverage['core/utils.js'][575]++;
  compareFn = (compareFn || (function (item1, item2) {
  _$jscoverage['core/utils.js'][575]++;
  return item1.localeCompare(item2);
}));
  _$jscoverage['core/utils.js'][576]++;
  for (var i = 0, len = array.length; (i < len); (i++)) {
    _$jscoverage['core/utils.js'][577]++;
    for (var j = i, length = array.length; (j < length); (j++)) {
      _$jscoverage['core/utils.js'][578]++;
      if ((compareFn(array[i], array[j]) > 0)) {
        _$jscoverage['core/utils.js'][579]++;
        var t = array[i];
        _$jscoverage['core/utils.js'][580]++;
        array[i] = array[j];
        _$jscoverage['core/utils.js'][581]++;
        array[j] = t;
      }
}
}
  _$jscoverage['core/utils.js'][585]++;
  return array;
})});
_$jscoverage['core/utils.js'][609]++;
utils.each(["String", "Function", "Array", "Number", "RegExp", "Object"], (function (v) {
  _$jscoverage['core/utils.js'][610]++;
  UE.utils[("is" + v)] = (function (obj) {
  _$jscoverage['core/utils.js'][611]++;
  return (Object.prototype.toString.apply(obj) == ("[object " + v + "]"));
});
}));
